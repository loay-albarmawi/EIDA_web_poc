import { AxiosInstance } from "axios";
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
export interface ConfigurationParameters {
    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
    username?: string;
    password?: string;
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
    basePath?: string;
    baseOptions?: any;
    formDataCtor?: new () => any;
}
export class Configuration {
    /**
     * parameter for apiKey security
     * @param name security name
     * @memberof Configuration
     */
    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
    /**
     * parameter for basic security
     *
     * @type {string}
     * @memberof Configuration
     */
    username?: string;
    /**
     * parameter for basic security
     *
     * @type {string}
     * @memberof Configuration
     */
    password?: string;
    /**
     * parameter for oauth2 security
     * @param name security name
     * @param scopes oauth2 scope
     * @memberof Configuration
     */
    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
    /**
     * override base path
     *
     * @type {string}
     * @memberof Configuration
     */
    basePath?: string;
    /**
     * base options for axios calls
     *
     * @type {any}
     * @memberof Configuration
     */
    baseOptions?: any;
    /**
     * The FormData constructor that will be used to create multipart form data
     * requests. You can inject this here so that execution environments that
     * do not support the FormData class can still run the generated client.
     *
     * @type {new () => FormData}
     */
    formDataCtor?: new () => any;
    constructor(param?: ConfigurationParameters);
    /**
     * Check if the given MIME is a JSON MIME.
     * JSON MIME examples:
     *   application/json
     *   application/json; charset=UTF8
     *   APPLICATION/JSON
     *   application/vnd.company+json
     * @param mime - MIME (Multipurpose Internet Mail Extensions)
     * @return True if the given MIME is JSON, false otherwise.
     */
    isJsonMime(mime: string): boolean;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface Point
 */
export interface Point {
    /**
     *
     * @type {number}
     * @memberof Point
     */
    x?: number;
    /**
     *
     * @type {number}
     * @memberof Point
     */
    y?: number;
}
/**
 *
 * @export
 * @interface PointArray
 */
export interface PointArray {
    /**
     *
     * @type {Array<Point>}
     * @memberof PointArray
     */
    PointsList?: Array<Point>;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Coordinates of the rectangle region on a document image(result type 1). Represented by two points - (left, top) + (right, bottom)
 * @export
 * @interface RectangleCoordinates
 */
export interface RectangleCoordinates {
    /**
     *
     * @type {number}
     * @memberof RectangleCoordinates
     */
    left: number;
    /**
     *
     * @type {number}
     * @memberof RectangleCoordinates
     */
    top: number;
    /**
     *
     * @type {number}
     * @memberof RectangleCoordinates
     */
    right: number;
    /**
     *
     * @type {number}
     * @memberof RectangleCoordinates
     */
    bottom: number;
}
/**
 *
 * @export
 * @interface AreaArray
 */
export interface AreaArray {
    /**
     *
     * @type {Array<RectangleCoordinates>}
     * @memberof AreaArray
     */
    List?: Array<RectangleCoordinates>;
    /**
     *
     * @type {Array<PointArray>}
     * @memberof AreaArray
     */
    Points?: Array<PointArray>;
}
/**
 *
 * @export
 * @interface PointsContainer
 */
export interface PointsContainer {
    /**
     *
     * @type {number}
     * @memberof PointsContainer
     */
    PointCount?: number;
    /**
     *
     * @type {Array<Point>}
     * @memberof PointsContainer
     */
    PointsList?: Array<Point>;
}
/**
 * Checked fragment coordinates
 * @export
 * @interface AreaContainer
 */
export interface AreaContainer {
    /**
     *
     * @type {number}
     * @memberof AreaContainer
     */
    Count?: number;
    /**
     *
     * @type {Array<RectangleCoordinates>}
     * @memberof AreaContainer
     */
    List?: Array<RectangleCoordinates>;
    /**
     *
     * @type {Array<PointsContainer>}
     * @memberof AreaContainer
     */
    Points?: Array<PointsContainer>;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface LivenessParams
 */
export interface LivenessParams {
    /**
     * This parameter is used to enable OVI check
     * @type {boolean}
     * @memberof LivenessParams
     */
    checkOVI?: boolean;
    /**
     * This parameter is used to enable MLI check
     * @type {boolean}
     * @memberof LivenessParams
     */
    checkMLI?: boolean;
    /**
     * This parameter is used to enable Hologram detection
     * @type {boolean}
     * @memberof LivenessParams
     */
    checkHolo?: boolean;
    /**
     * This parameter is used to enable Electronic device detection
     * @type {boolean}
     * @memberof LivenessParams
     */
    checkED?: boolean;
}
/**
 *
 * @export
 * @interface AuthParams
 */
export interface AuthParams {
    /**
     * This parameter is used to enable document liveness check
     * @type {boolean}
     * @memberof AuthParams
     */
    checkLiveness?: boolean;
    /**
     *
     * @type {LivenessParams}
     * @memberof AuthParams
     */
    livenessParams?: LivenessParams;
    /**
     * This parameter is used to enable Document luminescence check in UV light
     * @type {boolean}
     * @memberof AuthParams
     */
    checkUVLuminiscence?: boolean;
    /**
     * This parameter is used to enable B900 ink MRZ contrast check in IR light
     * @type {boolean}
     * @memberof AuthParams
     */
    checkIRB900?: boolean;
    /**
     * This parameter is used to enable Image patterns presence/absence check (position, shape, color)
     * @type {boolean}
     * @memberof AuthParams
     */
    checkImagePatterns?: boolean;
    /**
     * This parameter is used to enable Fibers detection
     * @type {boolean}
     * @memberof AuthParams
     */
    checkFibers?: boolean;
    /**
     * This parameter is used to enable Extended MRZ Check
     * @type {boolean}
     * @memberof AuthParams
     */
    checkExtMRZ?: boolean;
    /**
     * This parameter is used to enable Extended OCR Check
     * @type {boolean}
     * @memberof AuthParams
     */
    checkExtOCR?: boolean;
    /**
     * This parameter is used to enable laminate integrity check in axial light
     * @type {boolean}
     * @memberof AuthParams
     */
    checkAxial?: boolean;
    /**
     * This parameter is used to enable Barcode format check (code metadata, data format, contents format, etc.)
     * @type {boolean}
     * @memberof AuthParams
     */
    checkBarcodeFormat?: boolean;
    /**
     * This parameter is used to enable Document elements visibility check in IR light
     * @type {boolean}
     * @memberof AuthParams
     */
    checkIRVisibility?: boolean;
    /**
     * This parameter is used to enable Invisible Personal Information (IPI) check
     * @type {boolean}
     * @memberof AuthParams
     */
    checkIPI?: boolean;
    /**
     * This parameter is used to enable Owner\'s photo embedding check (is photo printed or sticked)
     * @type {boolean}
     * @memberof AuthParams
     */
    checkPhotoEmbedding?: boolean;
    /**
     * This parameter is used to enable Portrait comparison check
     * @type {boolean}
     * @memberof AuthParams
     */
    checkPhotoComparison?: boolean;
    /**
     * This parameter is used to enable LetterScreen check
     * @type {boolean}
     * @memberof AuthParams
     */
    checkLetterScreen?: boolean;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Enumeration describes available authenticity checks: https://docs.regulaforensics.com/develop/doc-reader-sdk/web-service/development/enums/authenticity-result-type/.
 * @export
 * @enum {string}
 */
export enum AuthenticityResultType {
    /**
    * Document luminescence check in UV light
    */
    UV_LUMINESCENCE = 1,
    /**
    * B900 ink MRZ contrast check in IR light
    */
    IR_B900 = 2,
    /**
    * Image patterns presence/absence check (position, shape, color)
    */
    IMAGE_PATTERN = 4,
    /**
    * Confirm laminate integrity check in axial light
    */
    AXIAL_PROTECTION = 8,
    /**
    * Protection fibers presence check (color, density) in UV light
    */
    UV_FIBERS = 16,
    /**
    * Document elements visibility check in IR light
    */
    IR_VISIBILITY = 32,
    /**
    * OCR for the text field in UV light comparison with other text sources check
    */
    OCR_SECURITY_TEXT = 64,
    /**
    * Invisible Personal Information (IPI) visualization
    */
    IPI = 128,
    /**
    * Owner&#39;s photo embedding check (is photo printed or sticked)
    */
    PHOTO_EMBED_TYPE = 512,
    /**
    * OVI check
    */
    OVI = 1024,
    /**
    * Hologram presence check
    */
    HOLOGRAMS = 4096,
    /**
    * Owner&#39;s photo area advanced check (photo shape, size, position, etc.)
    */
    PHOTO_AREA = 8192,
    /**
    * Portrait comparison check (document printed vs chip vs live)
    */
    PORTRAIT_COMPARISON = 32768,
    /**
    * Barcode format check (code metadata, data format, contents format, etc.)
    */
    BARCODE_FORMAT_CHECK = 65536,
    /**
    * Kinegram check
    */
    KINEGRAM = 131072,
    /**
    * LetterScreen check
    */
    LETTER_SCREEN = 262144,
    /**
    * Hologram detection and validation check
    */
    HOLOGRAM_DETECTION = 524288,
    /**
    * Fingerprint comparison check
    */
    FINGERPRINT_COMPARISON = 1048576,
    /**
    * Document liveness check
    */
    LIVENESS = 2097152,
    /**
    * Extended OCR Check
    */
    EXTENDED_OCR_CHECK = 4194304,
    /**
    * Extended MRZ check
    */
    EXTENDED_MRZ_CHECK = 8388608
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * 0 - result is negative; 1 - result is positive; 2 - сheck was not performed
 * @export
 * @enum {string}
 */
export enum CheckResult {
    /**
    * Check was performed and result is NEGATIVE
    */
    ERROR = 0,
    /**
    * Check was performed and result is POSITIVE
    */
    OK = 1,
    /**
    * Check was NOT PERFORMED
    */
    WAS_NOT_DONE = 2
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Enumeration contains identifiers which determinate the single document element authenticity check outcome reason: https://docs.regulaforensics.com/develop/doc-reader-sdk/web-service/development/enums/check-diagnose/
 * @export
 * @enum {string}
 */
export enum CheckDiagnose {
    UNKNOWN = 0,
    PASS = 1,
    INVALID_INPUT_DATA = 2,
    INTERNAL_ERROR = 3,
    EXCEPTION_IN_MODULE = 4,
    UNCERTAIN_VERIFICATION = 5,
    NECESSARY_IMAGE_NOT_FOUND = 7,
    PHOTO_SIDES_NOT_FOUND = 8,
    INVALID_CHECKSUM = 10,
    SYNTAX_ERROR = 11,
    LOGIC_ERROR = 12,
    SOURCES_COMPARISON_ERROR = 13,
    FIELDS_COMPARISON_LOGIC_ERROR = 14,
    INVALID_FIELD_FORMAT = 15,
    TRUE_LUMINESCENCE_ERROR = 20,
    FALSE_LUMINESCENCE_ERROR = 21,
    FIXED_PATTERN_ERROR = 22,
    LOW_CONTRAST_IN_IR_LIGHT = 23,
    INCORRECT_BACKGROUND_LIGHT = 24,
    BACKGROUND_COMPARISON_ERROR = 25,
    INCORRECT_TEXT_COLOR = 26,
    PHOTO_FALSE_LUMINESCENCE = 27,
    TOO_MUCH_SHIFT = 28,
    CONTACT_CHIP_TYPE_MISMATCH = 29,
    FIBERS_NOT_FOUND = 30,
    TOO_MANY_OBJECTS = 31,
    SPECKS_IN_UV = 33,
    TOO_LOW_RESOLUTION = 34,
    INVISIBLE_ELEMENT_PRESENT = 40,
    VISIBLE_ELEMENT_ABSENT = 41,
    ELEMENT_SHOULD_BE_COLORED = 42,
    ELEMENT_SHOULD_BE_GRAYSCALE = 43,
    PHOTO_WHITE_IR_DONT_MATCH = 44,
    UV_DULL_PAPER_MRZ = 50,
    FALSE_LUMINESCENCE_IN_MRZ = 51,
    UV_DULL_PAPER_PHOTO = 52,
    UV_DULL_PAPER_BLANK = 53,
    UV_DULL_PAPER_ERROR = 54,
    FALSE_LUMINESCENCE_IN_BLANK = 55,
    BAD_AREA_IN_AXIAL = 60,
    FALSE_IP_PARAMETERS = 65,
    FIELD_POS_CORRECTOR_HIGHLIGHT_IR = 80,
    FIELD_POS_CORRECTOR_GLARES_IN_PHOTO_AREA = 81,
    FIELD_POS_CORRECTOR_PHOTO_REPLACED = 82,
    FIELD_POS_CORRECTOR_LANDMARKS_CHECK_ERROR = 83,
    FIELD_POS_CORRECTOR_FACE_PRESENCE_CHECK_ERROR = 84,
    FIELD_POS_CORRECTOR_FACE_ABSENCE_CHECK_ERROR = 85,
    OVI_IR_INVISIBLE = 90,
    OVI_INSUFFICIENT_AREA = 91,
    OVI_COLOR_INVARIABLE = 92,
    OVI_BAD_COLOR_FRONT = 93,
    OVI_BAD_COLOR_SIDE = 94,
    OVI_WIDE_COLOR_SPREAD = 95,
    OVI_BAD_COLOR_PERCENT = 96,
    HOLOGRAM_ELEMENT_ABSENT = 100,
    HOLOGRAM_SIDE_TOP_IMAGES_ABSENT = 101,
    HOLOGRAM_ELEMENT_PRESENT = 102,
    HOLOGRAM_FRAMES_IS_ABSENT = 103,
    HOLOGRAM_HOLO_FIELD_IS_ABSENT = 104,
    PHOTO_PATTERN_INTERRUPTED = 110,
    PHOTO_PATTERN_SHIFTED = 111,
    PHOTO_PATTERN_DIFFERENT_COLORS = 112,
    PHOTO_PATTERN_IR_VISIBLE = 113,
    PHOTO_PATTERN_NOT_INTERSECT = 114,
    PHOTO_SIZE_IS_WRONG = 115,
    PHOTO_PATTERN_INVALID_COLOR = 116,
    PHOTO_PATTERN_SHIFTED_VERT = 117,
    PHOTO_PATTERN_PATTERN_NOT_FOUND = 118,
    PHOTO_PATTERN_DIFFERENT_LINES_THICKNESS = 119,
    PHOTO_IS_NOT_RECTANGLE = 120,
    PHOTO_CORNERS_IS_WRONG = 121,
    DOCUMENT_IS_CANCELLING = 122,
    TEXT_COLOR_SHOULD_BE_BLUE = 130,
    TEXT_COLOR_SHOULD_BE_GREEN = 131,
    TEXT_COLOR_SHOULD_BE_RED = 132,
    TEXT_SHOULD_BE_BLACK = 133,
    BARCODE_WAS_READ_WITH_ERRORS = 140,
    BARCODE_DATA_FORMAT_ERROR = 141,
    BARCODE_SIZE_PARAMS_ERROR = 142,
    NOT_ALL_BARCODES_READ = 143,
    GLARES_IN_BARCODE_AREA = 144,
    PORTRAIT_COMPARISON_PORTRAITS_DIFFER = 150,
    PORTRAIT_COMPARISON_NO_SERVICE_REPLY = 151,
    PORTRAIT_COMPARISON_SERVICE_ERROR = 152,
    PORTRAIT_COMPARISON_NOT_ENOUGH_IMAGES = 153,
    PORTRAIT_COMPARISON_NO_LIVE_PHOTO = 154,
    PORTRAIT_COMPARISON_NO_SERVICE_LICENSE = 155,
    PORTRAIT_COMPARISON_NO_PORTRAIT_DETECTED = 156,
    MOBILE_IMAGES_UNSUITABLE_LIGHT_CONDITIONS = 160,
    MOBILE_IMAGES_WHITE_UV_NO_DIFFERENCE = 161,
    FINGERPRINTS_COMPARISON_MISMATCH = 170,
    HOLO_PHOTO_FACE_NOT_DETECTED = 180,
    HOLO_PHOTO_FACE_COMPARISON_FAILED = 181,
    HOLO_PHOTO_GLARE_IN_CENTER_ABSENT = 182,
    HOLO_PHOTO_HOLO_ELEMENT_SHAPE_ERROR = 183,
    HOLO_PHOTO_ALGORITHMS_STEPS_ERROR = 184,
    HOLO_PHOTO_HOLO_AREAS_NOT_LOADED = 185,
    HOLO_PHOTO_FINISHED_BY_TIMEOUT = 186,
    HOLO_PHOTO_DOCUMENT_OUTSIDE_FRAME = 187,
    LIVENESS_DEPTH_CHECK_FAILED = 190,
    MRZ_QUALITY_WRONG_SYMBOL_POSITION = 200,
    MRZ_QUALITY_WRONG_BACKGROUND = 201,
    MRZ_QUALITY_WRONG_MRZ_WIDTH = 202,
    MRZ_QUALITY_WRONG_MRZ_HEIGHT = 203,
    MRZ_QUALITY_WRONG_LINE_POSITION = 204,
    MRZ_QUALITY_WRONG_FONT_TYPE = 205,
    OCR_QUALITY_TEXT_POSITION = 220,
    OCR_QUALITY_INVALID_FONT = 221,
    OCR_QUALITY_INVALID_BACKGROUND = 222,
    LASINK_INVALID_LINES_FREQUENCY = 230,
    DOC_LIVENESS_ELECTRONIC_DEVICE_DETECTED = 240,
    DOC_LIVENESS_INVALID_BARCODE_BACKGROUND = 241,
    LAST_DIAGNOSE_VALUE = 250
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ImageData
 */
export interface ImageData {
    /**
     * Base64 encoded image
     * @type {string}
     * @memberof ImageData
     */
    image: string;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Image light index
 * @export
 * @enum {string}
 */
export enum Light {
    /**
    * No Light
    */
    OFF = 0,
    /**
    * White
    */
    WHITE = 6,
    /**
    * Infrared
    */
    IR = 24,
    /**
    * Ultraviolet
    */
    UV = 128
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Enumeration contains identifiers determining type of features for a document authenticity checks: https://docs.regulaforensics.com/develop/doc-reader-sdk/web-service/development/enums/security-feature-type/
 * @export
 * @enum {string}
 */
export enum SecurityFeatureType {
    /**
    * Blank element
    */
    BLANK = 0,
    /**
    * Personalization element
    */
    FILL = 1,
    /**
    * Photo
    */
    PHOTO = 2,
    /**
    * MRZ
    */
    MRZ = 3,
    /**
    * False luminescence
    */
    FALSE_LUMINESCENCE = 4,
    /**
    * Hologram (static)
    */
    HOLO_SIMPLE = 5,
    /**
    * Hologram (static verify)
    */
    HOLO_VERIFY_STATIC = 6,
    /**
    * Hologram (static verify multiple)
    */
    HOLO_VERIFY_MULTI_STATIC = 7,
    /**
    * Hologram (dynamic verify)
    */
    HOLO_VERIFY_DYNAMIC = 8,
    /**
    * Pattern (non-interrupted)
    */
    PATTERN_NOT_INTERRUPTED = 9,
    /**
    * Pattern (non-shifted)
    */
    PATTERN_NOT_SHIFTED = 10,
    /**
    * Pattern (same colors)
    */
    PATTERN_SAME_COLORS = 11,
    /**
    * Pattern (IR invisible)
    */
    PATTERN_IR_INVISIBLE = 12,
    /**
    * Photo size
    */
    PHOTO_SIZE_CHECK = 13,
    /**
    * Main vs ghost portrait comparison
    */
    PORTRAIT_COMPARISON_VS_GHOST = 14,
    /**
    * Main vs RFID portrait comparison
    */
    PORTRAIT_COMPARISON_VS_RFID = 15,
    /**
    * Main vs other page portrait comparison
    */
    PORTRAIT_COMPARISON_VS_VISUAL = 16,
    /**
    * Barcode
    */
    BARCODE = 17,
    /**
    * Pattern (different line thickness)
    */
    PATTERN_DIFFERENT_LINES_THICKNESS = 18,
    /**
    * Main vs live camera portrait comparison
    */
    PORTRAIT_COMPARISON_VS_CAMERA = 19,
    /**
    * RFID vs live camera portrait comparison
    */
    PORTRAIT_COMPARISON_RFID_VS_CAMERA = 20,
    /**
    * Ghost photo
    */
    GHOST_PHOTO = 21,
    /**
    * Clear ghost photo
    */
    CLEAR_GHOST_PHOTO = 22,
    /**
    * Invisible object
    */
    INVISIBLE_OBJECT = 23,
    /**
    * Low contrast object
    */
    LOW_CONTRAST_OBJECT = 24,
    /**
    * Photo color check
    */
    PHOTO_COLOR = 25,
    /**
    * Photo squareness
    */
    PHOTO_SHAPE = 26,
    /**
    * Photo corners shape
    */
    PHOTO_CORNERS = 27,
    /**
    * OCR
    */
    OCR = 28,
    /**
    * External vs main portrait comparison
    */
    PORTRAIT_COMPARISON_EXT_VS_VISUAL = 29,
    /**
    * External vs RFID portrait comparison
    */
    PORTRAIT_COMPARISON_EXT_VS_RFID = 30,
    /**
    * External vs live camera portrait comparison
    */
    PORTRAIT_COMPARISON_EXT_VS_CAMERA = 31,
    /**
    * Portrait Depth
    */
    LIVENESS_DEPTH = 32,
    /**
    * Micro text
    */
    MICRO_TEXT = 33,
    /**
    * Fluorescent Object
    */
    FLUORESCENT_OBJECT = 34,
    /**
    * Facial landmarks check
    */
    LANDMARK_CHECK = 35,
    /**
    * Facial image presence
    */
    FACE_PRESENCE = 36,
    /**
    * Facial image absence
    */
    FACE_ABSENCE = 38,
    /**
    * Liveness screen capture
    */
    LIVENESS_SCREEN_CAPTURE = 39,
    /**
    * Liveness electronic device
    */
    LIVENESS_ELECTRONIC_DEVICE = 40,
    /**
    * Liveness OVI
    */
    LIVENESS_OVI = 41,
    /**
    * Barcode size check
    */
    BARCODE_SIZE_CHECK = 42,
    /**
    * LASINK
    */
    LASINK = 43,
    /**
    * Liveness MLI
    */
    LIVENESS_MLI = 44,
    /**
    * Liveness barcode background
    */
    LIVENESS_BARCODE_BACKGROUND = 45,
    /**
    * Visual zone portrait image vs. image from barcode
    */
    PORTRAIT_COMPARISON_VS_BARCODE = 46,
    /**
    * Image from barcode vs. image from RFID
    */
    PORTRAIT_COMPARISON_RFID_VS_BARCODE = 47,
    /**
    * Image from barcode vs. external source image
    */
    PORTRAIT_COMPARISON_EXT_VS_BARCODE = 48,
    /**
    * Image from barcode vs. photo from camera
    */
    PORTRAIT_COMPARISON_BARCODE_VS_CAMERA = 49,
    /**
    * Digital signature сheck
    */
    CHECK_DIGITAL_SIGNATURE = 50,
    /**
    * Contact сhip check
    */
    CONTACT_CHIP_CLASSIFICATION = 51
}
/**
 *
 * @export
 * @interface IdentResultAllOf
 */
export interface IdentResultAllOf {
    /**
     *
     * @type {SecurityFeatureType}
     * @memberof IdentResultAllOf
     */
    ElementType?: SecurityFeatureType;
    /**
     *
     * @type {Light}
     * @memberof IdentResultAllOf
     */
    LightIndex?: Light;
    /**
     *
     * @type {RectangleCoordinates}
     * @memberof IdentResultAllOf
     */
    Area?: RectangleCoordinates;
    /**
     *
     * @type {ImageData}
     * @memberof IdentResultAllOf
     */
    Image?: ImageData;
    /**
     *
     * @type {ImageData}
     * @memberof IdentResultAllOf
     */
    EtalonImage?: ImageData;
    /**
     * Probability percent for IMAGE_PATTERN check or element\'s visibility for IR_VISIBILITY
     * @type {number}
     * @memberof IdentResultAllOf
     */
    PercentValue?: number;
    /**
     *
     * @type {AreaContainer}
     * @memberof IdentResultAllOf
     */
    AreaList?: AreaContainer;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Enumeration contains identifiers determining the criticality of the security element
 * @export
 * @enum {string}
 */
export enum Critical {
    /**
    * Security element may be absent in a valid document
    */
    NOT_CRITICAL = 0,
    /**
    * Security element must be present in a valid document
    */
    CRITICAL = 1
}
/**
 *
 * @export
 * @interface OCRSecurityTextResultAllOf
 */
export interface OCRSecurityTextResultAllOf {
    /**
     *
     * @type {Critical}
     * @memberof OCRSecurityTextResultAllOf
     */
    CriticalFlag?: Critical;
    /**
     *
     * @type {Light}
     * @memberof OCRSecurityTextResultAllOf
     */
    LightType?: Light;
    /**
     *
     * @type {RectangleCoordinates}
     * @memberof OCRSecurityTextResultAllOf
     */
    FieldRect?: RectangleCoordinates;
    /**
     *
     * @type {number}
     * @memberof OCRSecurityTextResultAllOf
     */
    EtalonResultType?: number;
    /**
     *
     * @type {number}
     * @memberof OCRSecurityTextResultAllOf
     */
    EtalonFieldType?: number;
    /**
     *
     * @type {number}
     * @memberof OCRSecurityTextResultAllOf
     */
    EtalonLightType?: number;
    /**
     *
     * @type {string}
     * @memberof OCRSecurityTextResultAllOf
     */
    SecurityTextResultOCR?: string;
    /**
     *
     * @type {string}
     * @memberof OCRSecurityTextResultAllOf
     */
    EtalonResultOCR?: string;
    /**
     *
     * @type {number}
     * @memberof OCRSecurityTextResultAllOf
     */
    Reserved1?: number;
    /**
     *
     * @type {number}
     * @memberof OCRSecurityTextResultAllOf
     */
    Reserved2?: number;
}
/**
 *
 * @export
 * @interface RawImageContainerList
 */
export interface RawImageContainerList {
    /**
     *
     * @type {number}
     * @memberof RawImageContainerList
     */
    Count?: number;
    /**
     *
     * @type {Array<ImageData>}
     * @memberof RawImageContainerList
     */
    Images?: Array<ImageData>;
}
/**
 *
 * @export
 * @interface PhotoIdentResultAllOf
 */
export interface PhotoIdentResultAllOf {
    /**
     *
     * @type {Light}
     * @memberof PhotoIdentResultAllOf
     */
    LightIndex?: Light;
    /**
     *
     * @type {RectangleCoordinates}
     * @memberof PhotoIdentResultAllOf
     */
    Area?: RectangleCoordinates;
    /**
     *
     * @type {ImageData}
     * @memberof PhotoIdentResultAllOf
     */
    SourceImage?: ImageData;
    /**
     *
     * @type {RawImageContainerList}
     * @memberof PhotoIdentResultAllOf
     */
    ResultImages?: RawImageContainerList;
    /**
     *
     * @type {number}
     * @memberof PhotoIdentResultAllOf
     */
    FieldTypesCount?: number;
    /**
     *
     * @type {Array<number>}
     * @memberof PhotoIdentResultAllOf
     */
    FieldTypesList?: Array<number>;
    /**
     *
     * @type {number}
     * @memberof PhotoIdentResultAllOf
     */
    Step?: number;
    /**
     *
     * @type {number}
     * @memberof PhotoIdentResultAllOf
     */
    Angle?: number;
    /**
     *
     * @type {number}
     * @memberof PhotoIdentResultAllOf
     */
    Reserved3?: number;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Enumeration contains visibility status of the security element
 * @export
 * @enum {string}
 */
export enum Visibility {
    /**
    * Invisible
    */
    INVISIBLE = 0,
    /**
    * Visible
    */
    VISIBLE = 1,
    /**
    * Colored
    */
    COLORED = 2,
    /**
    * Grayscale
    */
    GRAYSCALE = 4,
    /**
    * Visible vs IR match
    */
    WHITE_IR_MATCHING = 8
}
/**
 *
 * @export
 * @interface SecurityFeatureResultAllOf
 */
export interface SecurityFeatureResultAllOf {
    /**
     *
     * @type {SecurityFeatureType}
     * @memberof SecurityFeatureResultAllOf
     */
    ElementType?: SecurityFeatureType;
    /**
     *
     * @type {RectangleCoordinates}
     * @memberof SecurityFeatureResultAllOf
     */
    ElementRect?: RectangleCoordinates;
    /**
     *
     * @type {Visibility}
     * @memberof SecurityFeatureResultAllOf
     */
    Visibility?: Visibility;
    /**
     *
     * @type {Critical}
     * @memberof SecurityFeatureResultAllOf
     */
    CriticalFlag?: Critical;
    /**
     *
     * @type {AreaContainer}
     * @memberof SecurityFeatureResultAllOf
     */
    AreaList?: AreaContainer;
    /**
     *
     * @type {number}
     * @memberof SecurityFeatureResultAllOf
     */
    Reserved2?: number;
}
/**
 * @type SecurityFeatureResult
 * @export
 */
export type SecurityFeatureResult = AuthenticityCheckResultItem & SecurityFeatureResultAllOf;
/**
 * @type PhotoIdentResult
 * @export
 */
export type PhotoIdentResult = AuthenticityCheckResultItem & PhotoIdentResultAllOf;
/**
 * @type OCRSecurityTextResult
 * @export
 */
export type OCRSecurityTextResult = AuthenticityCheckResultItem & OCRSecurityTextResultAllOf;
/**
 * @type IdentResult
 * @export
 */
export type IdentResult = AuthenticityCheckResultItem & IdentResultAllOf;
/**
 * Common fields for all authenticity result objects
 * @export
 * @interface AuthenticityCheckResultItem
 */
export interface AuthenticityCheckResultItem {
    /**
     * Same as authenticity result type, but used for safe parsing of not-described values: https://docs.regulaforensics.com/develop/doc-reader-sdk/web-service/development/enums/authenticity-result-type/
     * @type {number}
     * @memberof AuthenticityCheckResultItem
     */
    Type: number;
    /**
     *
     * @type {CheckResult}
     * @memberof AuthenticityCheckResultItem
     */
    ElementResult?: CheckResult;
    /**
     *
     * @type {CheckDiagnose}
     * @memberof AuthenticityCheckResultItem
     */
    ElementDiagnose?: CheckDiagnose;
}
/**
 *
 * @export
 * @interface FiberResultAllOf
 */
export interface FiberResultAllOf {
    /**
     * For UV_Fibers authenticity result type
     * @type {number}
     * @memberof FiberResultAllOf
     */
    RectCount?: number;
    /**
     * Expected fibers number. For UV_Fibers authentication result type
     * @type {number}
     * @memberof FiberResultAllOf
     */
    ExpectedCount?: number;
    /**
     *
     * @type {Light}
     * @memberof FiberResultAllOf
     */
    LightValue?: Light;
    /**
     * For UV_Background authentication result type
     * @type {number}
     * @memberof FiberResultAllOf
     */
    LightDisp?: number;
    /**
     * Coordinates of located areas for defined fibers type
     * @type {Array<RectangleCoordinates>}
     * @memberof FiberResultAllOf
     */
    RectArray?: Array<RectangleCoordinates>;
    /**
     * Fibers width value for located areas (in pixels)
     * @type {Array<number>}
     * @memberof FiberResultAllOf
     */
    Width?: Array<number>;
    /**
     * Fibers length value for located areas (in pixels)
     * @type {Array<number>}
     * @memberof FiberResultAllOf
     */
    Length?: Array<number>;
    /**
     * Fibers value for areas (in pixels)
     * @type {Array<number>}
     * @memberof FiberResultAllOf
     */
    Area?: Array<number>;
    /**
     * Fibers color value
     * @type {Array<number>}
     * @memberof FiberResultAllOf
     */
    ColorValues?: Array<number>;
}
/**
 * @type FiberResult
 * @export
 */
export type FiberResult = AuthenticityCheckResultItem & FiberResultAllOf;
/**
 *
 * @export
 * @interface AuthenticityCheckResult
 */
export interface AuthenticityCheckResult {
    /**
     *
     * @type {AuthenticityResultType}
     * @memberof AuthenticityCheckResult
     */
    Type: AuthenticityResultType;
    /**
     *
     * @type {CheckResult}
     * @memberof AuthenticityCheckResult
     */
    Result: CheckResult;
    /**
     *
     * @type {Array<SecurityFeatureResult | IdentResult | FiberResult | OCRSecurityTextResult | PhotoIdentResult>}
     * @memberof AuthenticityCheckResult
     */
    List: Array<SecurityFeatureResult | IdentResult | FiberResult | OCRSecurityTextResult | PhotoIdentResult>;
}
/**
 *
 * @export
 * @interface AuthenticityCheckList
 */
export interface AuthenticityCheckList {
    /**
     * Count of items in List
     * @type {number}
     * @memberof AuthenticityCheckList
     */
    Count?: number;
    /**
     * Authenticity Check
     * @type {Array<AuthenticityCheckResult>}
     * @memberof AuthenticityCheckList
     */
    List: Array<AuthenticityCheckResult>;
}
/**
 *
 * @export
 * @interface AuthenticityResultAllOf
 */
export interface AuthenticityResultAllOf {
    /**
     *
     * @type {AuthenticityCheckList}
     * @memberof AuthenticityResultAllOf
     */
    AuthenticityCheckList: AuthenticityCheckList;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Defining the geometric format of documents in accordance with ISO / IEC 7810
 * @export
 * @enum {string}
 */
export enum DocumentFormat {
    /**
    * ID1 document format
    */
    ID1 = 0,
    /**
    * ID2 document format
    */
    ID2 = 1,
    /**
    * ID3 document format
    */
    ID3 = 2,
    /**
    * Undefined document format
    */
    NON = 3,
    /**
    * A4 document format
    */
    A4 = 4,
    /**
    * ID3 double document format
    */
    ID3_X2 = 5,
    /**
    * ID1 format document rotated 90 °
    */
    ID1_90 = 10,
    /**
    * ID1 format document rotated 180 °
    */
    ID1_180 = 11,
    /**
    * ID1 format document rotated 270 °
    */
    ID1_270 = 12,
    /**
    * ID2 format document rotated 90 °
    */
    ID2_180 = 13,
    /**
    * ID3 format document rotated 180 °
    */
    ID3_180 = 14,
    /**
    * Arbitrary format
    */
    CUSTOM = 1000,
    /**
    * Flexible format. Standard formats can be resized during cropping, depending on various factors: light, background...
    */
    FLEXIBLE = 1002
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Possible values for document types
 * @export
 * @enum {string}
 */
export enum DocumentType {
    /**
    * Not defined
    */
    NOT_DEFINED = 0,
    /**
    * Passport
    */
    PASSPORT = 11,
    /**
    * Identity card
    */
    IDENTITY_CARD = 12,
    /**
    * Diplomatic passport
    */
    DIPLOMATIC_PASSPORT = 13,
    /**
    * Service passport
    */
    SERVICE_PASSPORT = 14,
    /**
    * Seamans identity document
    */
    SEAMANS_IDENTITY_DOCUMENT = 15,
    /**
    * Identity card for residence
    */
    IDENTITY_CARD_FOR_RESIDENCE = 16,
    /**
    * Travel document
    */
    TRAVEL_DOCUMENT = 17,
    /**
    * National identity card
    */
    NATIONAL_IDENTITY_CARD = 20,
    /**
    * Social identity card
    */
    SOCIAL_IDENTITY_CARD = 21,
    /**
    * Alien&#39;s identity card
    */
    ALIENS_IDENTITY_CARD = 22,
    /**
    * Privileged identity card
    */
    PRIVILEGED_IDENTITY_CARD = 23,
    /**
    * Residence permit identity card
    */
    RESIDENCE_PERMIT_IDENTITY_CARD = 24,
    /**
    * Origin card
    */
    ORIGIN_CARD = 25,
    /**
    * Emergency passport
    */
    EMERGENCY_PASSPORT = 26,
    /**
    * Alien&#39;s passport
    */
    ALIENS_PASSPORT = 27,
    /**
    * Alternative identity card
    */
    ALTERNATIVE_IDENTITY_CARD = 28,
    /**
    * Visa ID2
    */
    VISA_ID2 = 29,
    /**
    * Visa ID3
    */
    VISA_ID3 = 30,
    /**
    * Authorization card
    */
    AUTHORIZATION_CARD = 32,
    /**
    * Beginner permit
    */
    BEGINNER_PERMIT = 33,
    /**
    * Border crossing card
    */
    BORDER_CROSSING_CARD = 34,
    /**
    * Chauffeur license
    */
    CHAUFFEUR_LICENSE = 35,
    /**
    * Chauffeur license under 18
    */
    CHAUFFEUR_LICENSE_UNDER_18 = 36,
    /**
    * Chauffeur license under 21
    */
    CHAUFFEUR_LICENSE_UNDER_21 = 37,
    /**
    * Commercial driving license
    */
    COMMERCIAL_DRIVING_LICENSE = 38,
    /**
    * Commercial driving license instructional permit
    */
    COMMERCIAL_DRIVING_LICENSE_INSTRUCTIONAL_PERMIT = 39,
    /**
    * Commercial driving license under 18
    */
    COMMERCIAL_DRIVING_LICENSE_UNDER_18 = 40,
    /**
    * Commercial driving license under 21
    */
    COMMERCIAL_DRIVING_LICENSE_UNDER_21 = 41,
    /**
    * Commercial instruction permit
    */
    COMMERCIAL_INSTRUCTION_PERMIT = 42,
    /**
    * Commercial new permit
    */
    COMMERCIAL_NEW_PERMIT = 43,
    /**
    * Concealed carry license
    */
    CONCEALED_CARRY_LICENSE = 44,
    /**
    * Concealed firearm permit
    */
    CONCEALED_FIREARM_PERMIT = 45,
    /**
    * Conditional driving license
    */
    CONDITIONAL_DRIVING_LICENSE = 46,
    /**
    * Department of veterans affairs identity card
    */
    DEPARTMENT_OF_VETERANS_AFFAIRS_IDENTITY_CARD = 47,
    /**
    * Diplomatic driving license
    */
    DIPLOMATIC_DRIVING_LICENSE = 48,
    /**
    * Driving license
    */
    DRIVING_LICENSE = 49,
    /**
    * Driving license instructional permit
    */
    DRIVING_LICENSE_INSTRUCTIONAL_PERMIT = 50,
    /**
    * Driving license instructional permit under 18
    */
    DRIVING_LICENSE_INSTRUCTIONAL_PERMIT_UNDER_18 = 51,
    /**
    * Driving license instructional permit under 21
    */
    DRIVING_LICENSE_INSTRUCTIONAL_PERMIT_UNDER_21 = 52,
    /**
    * Driving license learners permit
    */
    DRIVING_LICENSE_LEARNERS_PERMIT = 53,
    /**
    * Driving license learners permit under 18
    */
    DRIVING_LICENSE_LEARNERS_PERMIT_UNDER_18 = 54,
    /**
    * Driving license learners permit under 21
    */
    DRIVING_LICENSE_LEARNERS_PERMIT_UNDER_21 = 55,
    /**
    * Driving license novice
    */
    DRIVING_LICENSE_NOVICE = 56,
    /**
    * Driving license novice under 18
    */
    DRIVING_LICENSE_NOVICE_UNDER_18 = 57,
    /**
    * Driving license novice under 21
    */
    DRIVING_LICENSE_NOVICE_UNDER_21 = 58,
    /**
    * Driving license registered offender
    */
    DRIVING_LICENSE_REGISTERED_OFFENDER = 59,
    /**
    * Driving license restricted under 18
    */
    DRIVING_LICENSE_RESTRICTED_UNDER_18 = 60,
    /**
    * Driving license restricted under 21
    */
    DRIVING_LICENSE_RESTRICTED_UNDER_21 = 61,
    /**
    * Driving license temporary visitor
    */
    DRIVING_LICENSE_TEMPORARY_VISITOR = 62,
    /**
    * Driving license temporary visitor under 18
    */
    DRIVING_LICENSE_TEMPORARY_VISITOR_UNDER_18 = 63,
    /**
    * Driving license temporary visitor under 21
    */
    DRIVING_LICENSE_TEMPORARY_VISITOR_UNDER_21 = 64,
    /**
    * Driving license under 18
    */
    DRIVING_LICENSE_UNDER_18 = 65,
    /**
    * Driving license under 21
    */
    DRIVING_LICENSE_UNDER_21 = 66,
    /**
    * Employment driving permit
    */
    EMPLOYMENT_DRIVING_PERMIT = 67,
    /**
    * Enhanced chauffeur license
    */
    ENHANCED_CHAUFFEUR_LICENSE = 68,
    /**
    * Enhanced chauffeur license under 18
    */
    ENHANCED_CHAUFFEUR_LICENSE_UNDER_18 = 69,
    /**
    * Enhanced chauffeur license under 21
    */
    ENHANCED_CHAUFFEUR_LICENSE_UNDER_21 = 70,
    /**
    * Enhanced commercial driving license
    */
    ENHANCED_COMMERCIAL_DRIVING_LICENSE = 71,
    /**
    * Enhanced driving license
    */
    ENHANCED_DRIVING_LICENSE = 72,
    /**
    * Enhanced driving license under 18
    */
    ENHANCED_DRIVING_LICENSE_UNDER_18 = 73,
    /**
    * Enhanced driving license under 21
    */
    ENHANCED_DRIVING_LICENSE_UNDER_21 = 74,
    /**
    * Enhanced identity card
    */
    ENHANCED_IDENTITY_CARD = 75,
    /**
    * Enhanced identity card under 18
    */
    ENHANCED_IDENTITY_CARD_UNDER_18 = 76,
    /**
    * Enhanced identity card under 21
    */
    ENHANCED_IDENTITY_CARD_UNDER_21 = 77,
    /**
    * Enhanced operators license
    */
    ENHANCED_OPERATORS_LICENSE = 78,
    /**
    * Firearms permit
    */
    FIREARMS_PERMIT = 79,
    /**
    * Full provisional license
    */
    FULL_PROVISIONAL_LICENSE = 80,
    /**
    * Full provisional license under 18
    */
    FULL_PROVISIONAL_LICENSE_UNDER_18 = 81,
    /**
    * Full provisional license under 21
    */
    FULL_PROVISIONAL_LICENSE_UNDER_21 = 82,
    /**
    * Geneva conventions identity card
    */
    GENEVA_CONVENTIONS_IDENTITY_CARD = 83,
    /**
    * Graduated driving license under 18
    */
    GRADUATED_DRIVING_LICENSE_UNDER_18 = 84,
    /**
    * Graduated driving license under 21
    */
    GRADUATED_DRIVING_LICENSE_UNDER_21 = 85,
    /**
    * Graduated instruction permit under 18
    */
    GRADUATED_INSTRUCTION_PERMIT_UNDER_18 = 86,
    /**
    * Graduated instruction permit under 21
    */
    GRADUATED_INSTRUCTION_PERMIT_UNDER_21 = 87,
    /**
    * Graduated license under 18
    */
    GRADUATED_LICENSE_UNDER_18 = 88,
    /**
    * Graduated license under 21
    */
    GRADUATED_LICENSE_UNDER_21 = 89,
    /**
    * Handgun carry permit
    */
    HANDGUN_CARRY_PERMIT = 90,
    /**
    * Identity and privilege card
    */
    IDENTITY_AND_PRIVILEGE_CARD = 91,
    /**
    * Identity card mobility impaired
    */
    IDENTITY_CARD_MOBILITY_IMPAIRED = 92,
    /**
    * Identity card registered offender
    */
    IDENTITY_CARD_REGISTERED_OFFENDER = 93,
    /**
    * Identity card temporary visitor
    */
    IDENTITY_CARD_TEMPORARY_VISITOR = 94,
    /**
    * Identity card temporary visitor under 18
    */
    IDENTITY_CARD_TEMPORARY_VISITOR_UNDER_18 = 95,
    /**
    * Identity card temporary visitor under 21
    */
    IDENTITY_CARD_TEMPORARY_VISITOR_UNDER_21 = 96,
    /**
    * Identity card under 18
    */
    IDENTITY_CARD_UNDER_18 = 97,
    /**
    * Identity card under 21
    */
    IDENTITY_CARD_UNDER_21 = 98,
    /**
    * Other
    */
    OTHER = 99,
    /**
    * Ignition interlock permit
    */
    IGNITION_INTERLOCK_PERMIT = 100,
    /**
    * Immigrant visa
    */
    IMMIGRANT_VISA = 101,
    /**
    * Instruction permit
    */
    INSTRUCTION_PERMIT = 102,
    /**
    * Instruction permit under 18
    */
    INSTRUCTION_PERMIT_UNDER_18 = 103,
    /**
    * Instruction permit under 21
    */
    INSTRUCTION_PERMIT_UNDER_21 = 104,
    /**
    * Interim driving license
    */
    INTERIM_DRIVING_LICENSE = 105,
    /**
    * Interim identity card
    */
    INTERIM_IDENTITY_CARD = 106,
    /**
    * Intermediate driving license
    */
    INTERMEDIATE_DRIVING_LICENSE = 107,
    /**
    * Intermediate driving license under 18
    */
    INTERMEDIATE_DRIVING_LICENSE_UNDER_18 = 108,
    /**
    * Intermediate driving license under 21
    */
    INTERMEDIATE_DRIVING_LICENSE_UNDER_21 = 109,
    /**
    * Junior driving license
    */
    JUNIOR_DRIVING_LICENSE = 110,
    /**
    * Learner instructional permit
    */
    LEARNER_INSTRUCTIONAL_PERMIT = 111,
    /**
    * Learner license
    */
    LEARNER_LICENSE = 112,
    /**
    * Learner license under 18
    */
    LEARNER_LICENSE_UNDER_18 = 113,
    /**
    * Learner license under 21
    */
    LEARNER_LICENSE_UNDER_21 = 114,
    /**
    * Learner permit
    */
    LEARNER_PERMIT = 115,
    /**
    * Learner permit under 18
    */
    LEARNER_PERMIT_UNDER_18 = 116,
    /**
    * Learner permit under 21
    */
    LEARNER_PERMIT_UNDER_21 = 117,
    /**
    * Limited license
    */
    LIMITED_LICENSE = 118,
    /**
    * Limited permit
    */
    LIMITED_PERMIT = 119,
    /**
    * Limited term driving license
    */
    LIMITED_TERM_DRIVING_LICENSE = 120,
    /**
    * Limited term identity card
    */
    LIMITED_TERM_IDENTITY_CARD = 121,
    /**
    * Liquor identity card
    */
    LIQUOR_IDENTITY_CARD = 122,
    /**
    * New permit
    */
    NEW_PERMIT = 123,
    /**
    * New permit under 18
    */
    NEW_PERMIT_UNDER_18 = 124,
    /**
    * New permit under 21
    */
    NEW_PERMIT_UNDER_21 = 125,
    /**
    * Non-US citizen driving license
    */
    NON_US_CITIZEN_DRIVING_LICENSE = 126,
    /**
    * Occupational driving license
    */
    OCCUPATIONAL_DRIVING_LICENSE = 127,
    /**
    * Oneida tribe of indians identity card
    */
    ONEIDA_TRIBE_OF_INDIANS_IDENTITY_CARD = 128,
    /**
    * Operator license
    */
    OPERATOR_LICENSE = 129,
    /**
    * Operator license under 18
    */
    OPERATOR_LICENSE_UNDER_18 = 130,
    /**
    * Operator license under 21
    */
    OPERATOR_LICENSE_UNDER_21 = 131,
    /**
    * Permanent driving license
    */
    PERMANENT_DRIVING_LICENSE = 132,
    /**
    * Permit to re-enter
    */
    PERMIT_TO_REENTER = 133,
    /**
    * Probationary auto license
    */
    PROBATIONARY_AUTO_LICENSE = 134,
    /**
    * Probationary driving license under 18
    */
    PROBATIONARY_DRIVING_LICENSE_UNDER_18 = 135,
    /**
    * Probationary driving license under 21
    */
    PROBATIONARY_DRIVING_LICENSE_UNDER_21 = 136,
    /**
    * Probationary vehicle sales person license
    */
    PROBATIONARY_VEHICLE_SALES_PERSON_LICENSE = 137,
    /**
    * Provisional driving license
    */
    PROVISIONAL_DRIVING_LICENSE = 138,
    /**
    * Provisional driving license under 18
    */
    PROVISIONAL_DRIVING_LICENSE_UNDER_18 = 139,
    /**
    * Provisional driving license under 21
    */
    PROVISIONAL_DRIVING_LICENSE_UNDER_21 = 140,
    /**
    * Provisional license
    */
    PROVISIONAL_LICENSE = 141,
    /**
    * Provisional license under 18
    */
    PROVISIONAL_LICENSE_UNDER_18 = 142,
    /**
    * Provisional license under 21
    */
    PROVISIONAL_LICENSE_UNDER_21 = 143,
    /**
    * Public passenger chauffeur license
    */
    PUBLIC_PASSENGER_CHAUFFEUR_LICENSE = 144,
    /**
    * Racing and gaming comission card
    */
    RACING_AND_GAMING_COMISSION_CARD = 145,
    /**
    * Refugee travel document
    */
    REFUGEE_TRAVEL_DOCUMENT = 146,
    /**
    * Renewal permit
    */
    RENEWAL_PERMIT = 147,
    /**
    * Restricted commercial driver license
    */
    RESTRICTED_COMMERCIAL_DRIVER_LICENSE = 148,
    /**
    * Restricted driver license
    */
    RESTRICTED_DRIVER_LICENSE = 149,
    /**
    * Restricted permit
    */
    RESTRICTED_PERMIT = 150,
    /**
    * Seasonal permit
    */
    SEASONAL_PERMIT = 151,
    /**
    * Seasonal resident identity card
    */
    SEASONAL_RESIDENT_IDENTITY_CARD = 152,
    /**
    * Seasonal citizen identity card
    */
    SEASONAL_CITIZEN_IDENTITY_CARD = 153,
    /**
    * Sex offender
    */
    SEX_OFFENDER = 154,
    /**
    * Social security card
    */
    SOCIAL_SECURITY_CARD = 155,
    /**
    * Temporary driving license
    */
    TEMPORARY_DRIVING_LICENSE = 156,
    /**
    * Temporary driving license under 18
    */
    TEMPORARY_DRIVING_LICENSE_UNDER_18 = 157,
    /**
    * Temporary driving license under 21
    */
    TEMPORARY_DRIVING_LICENSE_UNDER_21 = 158,
    /**
    * Temporary identity card
    */
    TEMPORARY_IDENTITY_CARD = 159,
    /**
    * Temporary instruction permit identity card
    */
    TEMPORARY_INSTRUCTION_PERMIT_IDENTITY_CARD = 160,
    /**
    * Temporary instruction permit identity card under 18
    */
    TEMPORARY_INSTRUCTION_PERMIT_IDENTITY_CARD_UNDER_18 = 161,
    /**
    * Temporary instruction permit identity card under 21
    */
    TEMPORARY_INSTRUCTION_PERMIT_IDENTITY_CARD_UNDER_21 = 162,
    /**
    * Temporary visitor driving license
    */
    TEMPORARY_VISITOR_DRIVING_LICENSE = 163,
    /**
    * Temporary visitor driving license under 18
    */
    TEMPORARY_VISITOR_DRIVING_LICENSE_UNDER_18 = 164,
    /**
    * Temporary visitor driving license under 21
    */
    TEMPORARY_VISITOR_DRIVING_LICENSE_UNDER_21 = 165,
    /**
    * Uniformed services identity card
    */
    UNIFORMED_SERVICES_IDENTITY_CARD = 166,
    /**
    * Vehicle sales person license
    */
    VEHICLE_SALES_PERSON_LICENSE = 167,
    /**
    * Worker identification credential
    */
    WORKER_IDENTIFICATION_CREDENTIAL = 168,
    /**
    * Commercial driving license novice
    */
    COMMERCIAL_DRIVING_LICENSE_NOVICE = 169,
    /**
    * Commercial driving license novice under 18
    */
    COMMERCIAL_DRIVING_LICENSE_NOVICE_UNDER_18 = 170,
    /**
    * Commercial driving license novice under 21
    */
    COMMERCIAL_DRIVING_LICENSE_NOVICE_UNDER_21 = 171,
    /**
    * Passport card
    */
    PASSPORT_CARD = 172,
    /**
    * Passport resident card
    */
    PASSPORT_RESIDENT_CARD = 173,
    /**
    * Personal identification verification
    */
    PERSONAL_IDENTIFICATION_VERIFICATION = 174,
    /**
    * Temporary operator license
    */
    TEMPORARY_OPERATOR_LICENSE = 175,
    /**
    * Driving license under 19
    */
    DRIVING_LICENSE_UNDER_19 = 176,
    /**
    * Identity card under 19
    */
    IDENTITY_CARD_UNDER_19 = 177,
    /**
    * Visa
    */
    VISA = 178,
    /**
    * Temporary passport
    */
    TEMPORARY_PASSPORT = 179,
    /**
    * Voting card
    */
    VOTING_CARD = 180,
    /**
    * Health card
    */
    HEALTH_CARD = 181,
    /**
    * Certificate of citizenship
    */
    CERTIFICATE_OF_CITIZENSHIP = 182,
    /**
    * Address card
    */
    ADDRESS_CARD = 183,
    /**
    * Airport immigration card
    */
    AIRPORT_IMMIGRATION_CARD = 184,
    /**
    * Alien registration card
    */
    ALIEN_REGISTRATION_CARD = 185,
    /**
    * APEH card
    */
    APEH_CARD = 186,
    /**
    * Coupon to driving license
    */
    COUPON_TO_DRIVING_LICENSE = 187,
    /**
    * Crew member certificate
    */
    CREW_MEMBER_CERTIFICATE = 188,
    /**
    * Document for return
    */
    DOCUMENT_FOR_RETURN = 189,
    /**
    * E-card
    */
    E_CARD = 190,
    /**
    * Employment card
    */
    EMPLOYMENT_CARD = 191,
    /**
    * HKSAR immigration form
    */
    HKSAR_IMMIGRATION_FORM = 192,
    /**
    * Immigrant card
    */
    IMMIGRANT_CARD = 193,
    /**
    * Labour card
    */
    LABOUR_CARD = 194,
    /**
    * Laissez passer
    */
    LAISSEZ_PASSER = 195,
    /**
    * Lawyer identity certificate
    */
    LAWYER_IDENTITY_CERTIFICATE = 196,
    /**
    * License card
    */
    LICENSE_CARD = 197,
    /**
    * Passport stateless
    */
    PASSPORT_STATELESS = 198,
    /**
    * Passport child
    */
    PASSPORT_CHILD = 199,
    /**
    * Passport consular
    */
    PASSPORT_CONSULAR = 200,
    /**
    * Passport diplomatic service
    */
    PASSPORT_DIPLOMATIC_SERVICE = 201,
    /**
    * Passport official
    */
    PASSPORT_OFFICIAL = 202,
    /**
    * Passport provisional
    */
    PASSPORT_PROVISIONAL = 203,
    /**
    * Passport special
    */
    PASSPORT_SPECIAL = 204,
    /**
    * Permission to the local border traffic
    */
    PERMISSION_TO_THE_LOCAL_BORDER_TRAFFIC = 205,
    /**
    * Registration certificate
    */
    REGISTRATION_CERTIFICATE = 206,
    /**
    * Sedesol card
    */
    SEDESOL_CARD = 207,
    /**
    * Social card
    */
    SOCIAL_CARD = 208,
    /**
    * TB card
    */
    TB_CARD = 209,
    /**
    * Vehicle passport
    */
    VEHICLE_PASSPORT = 210,
    /**
    * W document
    */
    W_DOCUMENT = 211,
    /**
    * Diplomatic identity card
    */
    DIPLOMATIC_IDENTITY_CARD = 212,
    /**
    * Consular identity card
    */
    CONSULAR_IDENTITY_CARD = 213,
    /**
    * Income tax card
    */
    INCOME_TAX_CARD = 214,
    /**
    * Residence permit
    */
    RESIDENCE_PERMIT = 215,
    /**
    * Document of identity
    */
    DOCUMENT_OF_IDENTITY = 216,
    /**
    * Border crossing permit
    */
    BORDER_CROSSING_PERMIT = 217,
    /**
    * Passport limited validity
    */
    PASSPORT_LIMITED_VALIDITY = 218,
    /**
    * Sim card
    */
    SIM_CARD = 219,
    /**
    * Tax card
    */
    TAX_CARD = 220,
    /**
    * Company card
    */
    COMPANY_CARD = 221,
    /**
    * Domestic passport
    */
    DOMESTIC_PASSPORT = 222,
    /**
    * Identity certificate
    */
    IDENTITY_CERTIFICATE = 223,
    /**
    * Resident id card
    */
    RESIDENT_ID_CARD = 224,
    /**
    * Armed forces identity card
    */
    ARMED_FORCES_IDENTITY_CARD = 225,
    /**
    * Professional card
    */
    PROFESSIONAL_CARD = 226,
    /**
    * Registration stamp
    */
    REGISTRATION_STAMP = 227,
    /**
    * Driver card
    */
    DRIVER_CARD = 228,
    /**
    * Driver training certificate
    */
    DRIVER_TRAINING_CERTIFICATE = 229,
    /**
    * Qualification driving license
    */
    QUALIFICATION_DRIVING_LICENSE = 230,
    /**
    * Membership card
    */
    MEMBERSHIP_CARD = 231,
    /**
    * Public vehicle driver authority card
    */
    PUBLIC_VEHICLE_DRIVER_AUTHORITY_CARD = 232,
    /**
    * Marine license
    */
    MARINE_LICENSE = 233,
    /**
    * Temporary learner license
    */
    TEMPORARY_LEARNER_LICENSE = 234,
    /**
    * Temporary commercial driving license
    */
    TEMPORARY_COMMERCIAL_DRIVING_LICENSE = 235,
    /**
    * Interim instructional permit
    */
    INTERIM_INSTRUCTIONAL_PERMIT = 236,
    /**
    * Certificate of competency
    */
    CERTIFICATE_OF_COMPETENCY = 237,
    /**
    * Certificate of proficiency
    */
    CERTIFICATE_OF_PROFICIENCY = 238,
    /**
    * Trade license
    */
    TRADE_LICENSE = 239,
    /**
    * Passport page
    */
    PASSPORT_PAGE = 240,
    /**
    * Invoice
    */
    INVOICE = 241,
    /**
    * Passenger locator form
    */
    PASSENGER_LOCATOR_FORM = 242
}
/**
 * Extended document type info and Regula\'s \'Information Reference Systems\' links
 * @export
 * @interface FDSIDList
 */
export interface FDSIDList {
    /**
     * ICAO code of the issuing country
     * @type {string}
     * @memberof FDSIDList
     */
    ICAOCode?: string;
    /**
     * Document identifiers in \'Information Reference Systems\'
     * @type {Array<number>}
     * @memberof FDSIDList
     */
    List?: Array<number>;
    /**
     *
     * @type {DocumentType}
     * @memberof FDSIDList
     */
    dType?: DocumentType;
    /**
     *
     * @type {DocumentFormat}
     * @memberof FDSIDList
     */
    dFormat?: DocumentFormat;
    /**
     * Flag indicating the presence of MRZ on the document
     * @type {boolean}
     * @memberof FDSIDList
     */
    dMRZ?: boolean;
    /**
     * Document description
     * @type {string}
     * @memberof FDSIDList
     */
    dDescription?: string;
    /**
     * Year of publication of the document
     * @type {string}
     * @memberof FDSIDList
     */
    dYear?: string;
    /**
     * Issuing country name
     * @type {string}
     * @memberof FDSIDList
     */
    dCountryName?: string;
    /**
     * Issuing state code
     * @type {string}
     * @memberof FDSIDList
     */
    dStateCode?: string;
    /**
     * Issuing state name
     * @type {string}
     * @memberof FDSIDList
     */
    dStateName?: string;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Determines the presence and location of an RFID chip in a document. 0 - no rfid chip; 1 - chip is located in the document data page; 2 - chip is located in the back page or inlay of the document
 * @export
 * @enum {string}
 */
export enum RfidLocation {
    /**
    * There is no RFID chip in the document
    */
    NONE = 0,
    /**
    * The RFID chip is located in the document data page
    */
    MAIN_PAGE = 1,
    /**
    * The RFID chip is located in the back page or inlay of the document
    */
    BACK_PAGE = 2
}
/**
 * Contains information about one document type candidate
 * @export
 * @interface OneCandidate
 */
export interface OneCandidate {
    /**
     * Document name
     * @type {string}
     * @memberof OneCandidate
     */
    DocumentName?: string;
    /**
     * Unique document type template identifier (Regula\'s internal numeric code)
     * @type {number}
     * @memberof OneCandidate
     */
    ID?: number;
    /**
     * A measure of the likelihood of correct recognition in the analysis of this type of document
     * @type {number}
     * @memberof OneCandidate
     */
    P?: number;
    /**
     *
     * @type {RfidLocation}
     * @memberof OneCandidate
     */
    RFID_Presence?: RfidLocation;
    /**
     *
     * @type {FDSIDList}
     * @memberof OneCandidate
     */
    FDSIDList?: FDSIDList;
    /**
     * Combination of lighting scheme identifiers (Light enum) required to conduct OCR for this type of document
     * @type {number}
     * @memberof OneCandidate
     */
    NecessaryLights?: number;
    /**
     * Set of authentication options provided for this type of document (combination of Authenticity enum)
     * @type {number}
     * @memberof OneCandidate
     */
    CheckAuthenticity?: number;
    /**
     * The required exposure value of the camera when receiving images of a document of this type for a UV lighting scheme
     * @type {number}
     * @memberof OneCandidate
     */
    UVExp?: number;
    /**
     * Combination of lighting scheme identifiers (combination of Light enum) needed to perform all authenticity checks specified in CheckAuthenticity
     * @type {number}
     * @memberof OneCandidate
     */
    AuthenticityNecessaryLights?: number;
}
/**
 *
 * @export
 * @interface ChosenDocumentTypeResultAllOf
 */
export interface ChosenDocumentTypeResultAllOf {
    /**
     *
     * @type {OneCandidate}
     * @memberof ChosenDocumentTypeResultAllOf
     */
    OneCandidate?: OneCandidate;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface BcPDF417INFO
 */
export interface BcPDF417INFO {
    /**
     *
     * @type {number}
     * @memberof BcPDF417INFO
     */
    Angle?: number;
    /**
     *
     * @type {number}
     * @memberof BcPDF417INFO
     */
    bcColumn?: number;
    /**
     *
     * @type {number}
     * @memberof BcPDF417INFO
     */
    bcErrorLevel?: number;
    /**
     *
     * @type {number}
     * @memberof BcPDF417INFO
     */
    bcRow?: number;
    /**
     *
     * @type {number}
     * @memberof BcPDF417INFO
     */
    minX?: number;
    /**
     *
     * @type {number}
     * @memberof BcPDF417INFO
     */
    minY?: number;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface BcROIDETECT
 */
export interface BcROIDETECT {
    /**
     *
     * @type {number}
     * @memberof BcROIDETECT
     */
    bottom?: number;
    /**
     *
     * @type {number}
     * @memberof BcROIDETECT
     */
    left?: number;
    /**
     *
     * @type {number}
     * @memberof BcROIDETECT
     */
    right?: number;
    /**
     *
     * @type {number}
     * @memberof BcROIDETECT
     */
    top?: number;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DataModule
 */
export interface DataModule {
    /**
     *
     * @type {string}
     * @memberof DataModule
     */
    mData?: string;
    /**
     *
     * @type {number}
     * @memberof DataModule
     */
    mLength?: number;
    /**
     *
     * @type {number}
     * @memberof DataModule
     */
    mReserved1?: number;
    /**
     *
     * @type {number}
     * @memberof DataModule
     */
    mReserver2?: number;
    /**
     *
     * @type {number}
     * @memberof DataModule
     */
    mType?: number;
}
/**
 *
 * @export
 * @interface PArrayField
 */
export interface PArrayField {
    /**
     *
     * @type {number}
     * @memberof PArrayField
     */
    bcAngle_DETECT?: number;
    /**
     *
     * @type {number}
     * @memberof PArrayField
     */
    bcCodeResult?: number;
    /**
     *
     * @type {number}
     * @memberof PArrayField
     */
    bcCountModule?: number;
    /**
     *
     * @type {Array<DataModule>}
     * @memberof PArrayField
     */
    bcDataModule?: Array<DataModule>;
    /**
     *
     * @type {BcPDF417INFO}
     * @memberof PArrayField
     */
    bcPDF417INFO?: BcPDF417INFO;
    /**
     *
     * @type {BcROIDETECT}
     * @memberof PArrayField
     */
    bcROI_DETECT?: BcROIDETECT;
    /**
     *
     * @type {number}
     * @memberof PArrayField
     */
    bcTextDecoderTypes?: number;
    /**
     *
     * @type {number}
     * @memberof PArrayField
     */
    bcTextFieldType?: number;
    /**
     *
     * @type {number}
     * @memberof PArrayField
     */
    bcType_DECODE?: number;
    /**
     *
     * @type {number}
     * @memberof PArrayField
     */
    bcType_DETECT?: number;
}
/**
 *
 * @export
 * @interface DocBarCodeInfoFieldsList
 */
export interface DocBarCodeInfoFieldsList {
    /**
     * Count of array fields
     * @type {number}
     * @memberof DocBarCodeInfoFieldsList
     */
    nFields?: number;
    /**
     * Data from barcode
     * @type {Array<PArrayField>}
     * @memberof DocBarCodeInfoFieldsList
     */
    pArrayFields?: Array<PArrayField>;
}
/**
 *
 * @export
 * @interface DocBarCodeInfoAllOf
 */
export interface DocBarCodeInfoAllOf {
    /**
     *
     * @type {DocBarCodeInfoFieldsList}
     * @memberof DocBarCodeInfoAllOf
     */
    DocBarCodeInfo?: DocBarCodeInfoFieldsList;
}
/**
 * Contains cropped and rotated with perspective compensation image of document. Single input image can contain multiple document side/pages, which will be returned as separated results. Most of coordinates in other types defined on that image
 * @export
 * @interface DocumentImageResultAllOf
 */
export interface DocumentImageResultAllOf {
    /**
     *
     * @type {ImageData}
     * @memberof DocumentImageResultAllOf
     */
    RawImageContainer: ImageData;
}
/**
 *
 * @export
 * @interface DocumentPosition
 */
export interface DocumentPosition {
    /**
     *
     * @type {DocumentFormat}
     * @memberof DocumentPosition
     */
    docFormat?: DocumentFormat;
    /**
     *
     * @type {number}
     * @memberof DocumentPosition
     */
    Angle?: number;
    /**
     *
     * @type {number}
     * @memberof DocumentPosition
     */
    Width?: number;
    /**
     *
     * @type {number}
     * @memberof DocumentPosition
     */
    Height?: number;
    /**
     *
     * @type {Point}
     * @memberof DocumentPosition
     */
    Center?: Point;
    /**
     *
     * @type {Point}
     * @memberof DocumentPosition
     */
    LeftBottom?: Point;
    /**
     *
     * @type {Point}
     * @memberof DocumentPosition
     */
    LeftTop?: Point;
    /**
     *
     * @type {Point}
     * @memberof DocumentPosition
     */
    RightBottom?: Point;
    /**
     *
     * @type {Point}
     * @memberof DocumentPosition
     */
    RightTop?: Point;
    /**
     *
     * @type {number}
     * @memberof DocumentPosition
     */
    Dpi?: number;
}
/**
 *
 * @export
 * @interface DocumentPositionResultAllOf
 */
export interface DocumentPositionResultAllOf {
    /**
     *
     * @type {DocumentPosition}
     * @memberof DocumentPositionResultAllOf
     */
    DocumentPosition?: DocumentPosition;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
export enum DocumentTypeRecognitionResult {
    /**
    * Document type determined. The first element in candidates array is recognition result
    */
    OK = 0,
    /**
    * Document type was not determined. Ongoing processing is not possible
    */
    UNKNOWN = 15,
    /**
    * To determine document type user should provide more images with different light sources (UV, for example)
    */
    NEED_MORE_IMAGES = 29
}
/**
 *
 * @export
 * @interface DocumentTypesCandidatesList
 */
export interface DocumentTypesCandidatesList {
    /**
     *
     * @type {DocumentTypeRecognitionResult}
     * @memberof DocumentTypesCandidatesList
     */
    RecResult?: DocumentTypeRecognitionResult;
    /**
     *
     * @type {Array<OneCandidate>}
     * @memberof DocumentTypesCandidatesList
     */
    Candidates?: Array<OneCandidate>;
}
/**
 *
 * @export
 * @interface DocumentTypesCandidatesResultAllOf
 */
export interface DocumentTypesCandidatesResultAllOf {
    /**
     *
     * @type {DocumentTypesCandidatesList}
     * @memberof DocumentTypesCandidatesResultAllOf
     */
    CandidatesList?: DocumentTypesCandidatesList;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Contains encrypted result container list
 * @export
 * @interface EncryptedRCLResultAllOf
 */
export interface EncryptedRCLResultAllOf {
    /**
     * Base64 encoded data
     * @type {string}
     * @memberof EncryptedRCLResultAllOf
     */
    EncryptedRCL: string;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
export enum GraphicFieldType {
    /**
    * Document holder photo
    */
    PORTRAIT = 201,
    /**
    * Fingerprint of document holder
    */
    FINGERPRINT = 202,
    /**
    * Image of the iris of document holder
    */
    EYE = 203,
    /**
    * Signature of document holder
    */
    SIGNATURE = 204,
    /**
    * Barcode image
    */
    BAR_CODE = 205,
    /**
    * Image of document confirming owner citizenship
    */
    PROOF_OF_CITIZENSHIP = 206,
    /**
    * Cropped and rotated with perspective compensation (front side) of a document. Single input image can contain multiple document side/pages, which will be returned as separated results. Most coordinates in other types defined on that image.
    */
    DOCUMENT_FRONT = 207,
    /**
    * Image of the rear side of the document
    */
    DOCUMENT_REAR = 208,
    /**
    * Area with dynamic color change
    */
    COLOR_DYNAMIC = 209,
    /**
    * Additional Portrait
    */
    GHOST_PORTRAIT = 210,
    /**
    * Stamp
    */
    STAMP = 211,
    /**
    * Contact chip
    */
    CONTACT_CHIP = 213,
    /**
    * Undefined image type
    */
    OTHER = 250,
    /**
    * Fingerprint (thumb, left hand)
    */
    FINGER_LEFT_THUMB = 300,
    /**
    * Fingerprint (index, left hand)
    */
    FINGER_LEFT_INDEX = 301,
    /**
    * Fingerprint (middle, left hand)
    */
    FINGER_LEFT_MIDDLE = 302,
    /**
    * Fingerprint (ring, left hand)
    */
    FINGER_LEFT_RING = 303,
    /**
    * Fingerprint (little, left hand)
    */
    FINGER_LEFT_LITTLE = 304,
    /**
    * Fingerprint (thumb, right hand)
    */
    FINGER_RIGHT_THUMB = 305,
    /**
    * Fingerprint (index, right hand)
    */
    FINGER_RIGHT_INDEX = 306,
    /**
    * Fingerprint (middle, right hand)
    */
    FINGER_RIGHT_MIDDLE = 307,
    /**
    * Fingerprint (ring, right hand)
    */
    FINGER_RIGHT_RING = 308,
    /**
    * Fingerprint (little, right hand)
    */
    FINGER_RIGHT_LITTLE = 309,
    /**
    * Fingerprint (four without thumb on right hand)
    */
    FINGER_RIGHT_FOUR_FINGERS = 313,
    /**
    * Fingerprint (four without thumb on left hand
    */
    FINGER_LEFT_FOUR_FINGERS = 314,
    /**
    * Fingerprint (two thumbs)
    */
    FINGER_TWO_THUMBS = 315
}
/**
 *
 * @export
 * @interface GraphicField
 */
export interface GraphicField {
    /**
     *
     * @type {GraphicFieldType}
     * @memberof GraphicField
     */
    FieldType: GraphicFieldType;
    /**
     *
     * @type {ImageData}
     * @memberof GraphicField
     */
    image: ImageData;
    /**
     *
     * @type {RectangleCoordinates}
     * @memberof GraphicField
     */
    FieldRect?: RectangleCoordinates;
    /**
     * Source data group file. Only for Result.RFID_GRAPHICS result.
     * @type {number}
     * @memberof GraphicField
     */
    RFID_OriginDG?: number;
    /**
     * Index of the source record of the image with biometric information in the information data group. Only for Result.RFID_GRAPHICS result.
     * @type {number}
     * @memberof GraphicField
     */
    RFID_OriginDGTag?: number;
    /**
     * Index of the template in the record with biometric data. Only for Result.RFID_GRAPHICS result.
     * @type {number}
     * @memberof GraphicField
     */
    RFID_OriginTagEntry?: number;
    /**
     * Index of the variant of the biometric data template. Only for Result.RFID_GRAPHICS result.
     * @type {number}
     * @memberof GraphicField
     */
    RFID_OriginEntryView?: number;
}
/**
 *
 * @export
 * @interface GraphicFieldsList
 */
export interface GraphicFieldsList {
    /**
     *
     * @type {Array<GraphicField>}
     * @memberof GraphicFieldsList
     */
    pArrayFields: Array<GraphicField>;
}
/**
 *
 * @export
 * @interface GraphicsResultAllOf
 */
export interface GraphicsResultAllOf {
    /**
     *
     * @type {GraphicFieldsList}
     * @memberof GraphicsResultAllOf
     */
    DocGraphicsInfo?: GraphicFieldsList;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Image quality check type
 * @export
 * @enum {string}
 */
export enum ImageQualityCheckType {
    /**
    * Signals glare presence on the image
    */
    ImageGlares = 0,
    /**
    * Signals whether image is in focus
    */
    ImageFocus = 1,
    /**
    * Signals if image resolution is below threshold
    */
    ImageResolution = 2,
    /**
    * Signals if image is colorless
    */
    ImageColorness = 3,
    /**
    * Signals if document in the image has prespective distortion above threshold
    */
    Perspective = 4,
    /**
    * Signals if document is not fully present in the image
    */
    Bounds = 5,
    /**
    * Signals if an image is captured from screen
    */
    ScreenCapture = 6,
    /**
    * Signals if the portrait is present
    */
    Portrait = 7,
    /**
    * Signals if the document image is bright enough
    */
    Brightness = 9
}
/**
 *
 * @export
 * @interface ImageQualityCheck
 */
export interface ImageQualityCheck {
    /**
     *
     * @type {ImageQualityCheckType}
     * @memberof ImageQualityCheck
     */
    type?: ImageQualityCheckType;
    /**
     *
     * @type {CheckResult}
     * @memberof ImageQualityCheck
     */
    result?: CheckResult;
    /**
     *
     * @type {SecurityFeatureType}
     * @memberof ImageQualityCheck
     */
    featureType?: SecurityFeatureType;
    /**
     *
     * @type {AreaArray}
     * @memberof ImageQualityCheck
     */
    areas?: AreaArray;
    /**
     *
     * @type {number}
     * @memberof ImageQualityCheck
     */
    mean?: number;
    /**
     *
     * @type {number}
     * @memberof ImageQualityCheck
     */
    std_dev?: number;
    /**
     *
     * @type {number}
     * @memberof ImageQualityCheck
     */
    probability?: number;
}
/**
 *
 * @export
 * @interface ImageQualityCheckList
 */
export interface ImageQualityCheckList {
    /**
     *
     * @type {CheckResult}
     * @memberof ImageQualityCheckList
     */
    result: CheckResult;
    /**
     *
     * @type {Array<ImageQualityCheck>}
     * @memberof ImageQualityCheckList
     */
    List: Array<ImageQualityCheck>;
}
/**
 *
 * @export
 * @interface ImageQualityResultAllOf
 */
export interface ImageQualityResultAllOf {
    /**
     *
     * @type {ImageQualityCheckList}
     * @memberof ImageQualityResultAllOf
     */
    ImageQualityCheckList: ImageQualityCheckList;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Document data sources
 * @export
 * @enum {string}
 */
export enum Source {
    /**
    * Machine readable zone (MRZ)
    */
    MRZ = "MRZ",
    /**
    * Visual zone
    */
    VISUAL = "VISUAL",
    /**
    * Barcode
    */
    BARCODE = "BARCODE",
    /**
    * RFID
    */
    RFID = "RFID",
    /**
    * Magnetic
    */
    MAGNETIC = "MAGNETIC"
}
/**
 *
 * @export
 * @interface ImagesAvailableSource
 */
export interface ImagesAvailableSource {
    /**
     * Same as Result type, but used for safe parsing of not-described values. See Result type.
     * @type {number}
     * @memberof ImagesAvailableSource
     */
    containerType?: number;
    /**
     *
     * @type {Source}
     * @memberof ImagesAvailableSource
     */
    source: Source;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Location of data in RFID chip
 * @export
 * @interface RfidOrigin
 */
export interface RfidOrigin {
    /**
     * Source data group file
     * @type {number}
     * @memberof RfidOrigin
     */
    dg: number;
    /**
     * Index of the source record of the image with biometric information in the information data group
     * @type {number}
     * @memberof RfidOrigin
     */
    dgTag?: number;
    /**
     * Index of the template in the record with biometric data
     * @type {number}
     * @memberof RfidOrigin
     */
    tagEntry?: number;
    /**
     * Index of the variant of the biometric data template
     * @type {number}
     * @memberof RfidOrigin
     */
    entryView?: number;
}
/**
 *
 * @export
 * @interface ImagesFieldValue
 */
export interface ImagesFieldValue {
    /**
     *
     * @type {Source}
     * @memberof ImagesFieldValue
     */
    source: Source;
    /**
     * Base64 encoded image
     * @type {string}
     * @memberof ImagesFieldValue
     */
    value: string;
    /**
     * Base64 encoded image
     * @type {string}
     * @memberof ImagesFieldValue
     */
    originalValue?: string;
    /**
     * Original page index
     * @type {number}
     * @memberof ImagesFieldValue
     */
    originalPageIndex?: number;
    /**
     * Page index of the image from input list
     * @type {number}
     * @memberof ImagesFieldValue
     */
    pageIndex: number;
    /**
     *
     * @type {Light}
     * @memberof ImagesFieldValue
     */
    lightIndex: Light;
    /**
     * Same as Result type, but used for safe parsing of not-described values. See Result type.
     * @type {number}
     * @memberof ImagesFieldValue
     */
    containerType: number;
    /**
     *
     * @type {RectangleCoordinates}
     * @memberof ImagesFieldValue
     */
    fieldRect?: RectangleCoordinates;
    /**
     *
     * @type {RfidOrigin}
     * @memberof ImagesFieldValue
     */
    rfidOrigin?: RfidOrigin;
}
/**
 *
 * @export
 * @interface ImagesField
 */
export interface ImagesField {
    /**
     * Human readable field name. Do not bind to this name - use GraphicFieldType instead.
     * @type {string}
     * @memberof ImagesField
     */
    fieldName: string;
    /**
     *
     * @type {GraphicFieldType}
     * @memberof ImagesField
     */
    fieldType: GraphicFieldType;
    /**
     *
     * @type {Array<ImagesFieldValue>}
     * @memberof ImagesField
     */
    valueList: Array<ImagesFieldValue>;
}
/**
 *
 * @export
 * @interface Images
 */
export interface Images {
    /**
     *
     * @type {Array<ImagesAvailableSource>}
     * @memberof Images
     */
    availableSourceList: Array<ImagesAvailableSource>;
    /**
     *
     * @type {Array<ImagesField>}
     * @memberof Images
     */
    fieldList: Array<ImagesField>;
}
/**
 *
 * @export
 * @interface ImagesResultAllOf
 */
export interface ImagesResultAllOf {
    /**
     *
     * @type {Images}
     * @memberof ImagesResultAllOf
     */
    Images: Images;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Locale id. Used to tag same typed fields declared in several languages. For example: name can be provided in both native and latin variants. Based on Microsoft locale id (https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/70feba9f-294e-491e-b6eb-56532684c37f).
 * @export
 * @enum {string}
 */
export enum LCID {
    /**
    * Latin
    */
    LATIN = 0,
    /**
    * Afrikaans
    */
    AFRIKAANS = 1078,
    /**
    * Albanian
    */
    ALBANIAN = 1052,
    /**
    * Arabic (Algeria)
    */
    ARABIC_ALGERIA = 5121,
    /**
    * Arabic (Bahrain)
    */
    ARABIC_BAHRAIN = 15361,
    /**
    * Arabic (Egypt)
    */
    ARABIC_EGYPT = 3073,
    /**
    * Arabic (Iraq)
    */
    ARABIC_IRAQ = 2049,
    /**
    * Arabic (Jordan)
    */
    ARABIC_JORDAN = 11265,
    /**
    * Arabic (Kuwait)
    */
    ARABIC_KUWAIT = 13313,
    /**
    * Arabic (Lebanon)
    */
    ARABIC_LEBANON = 12289,
    /**
    * Arabic (Libya)
    */
    ARABIC_LIBYA = 4097,
    /**
    * Arabic (Morocco)
    */
    ARABIC_MOROCCO = 6145,
    /**
    * Arabic (Oman)
    */
    ARABIC_OMAN = 8193,
    /**
    * Arabic (Qatar)
    */
    ARABIC_QATAR = 16385,
    /**
    * Arabic (Saudi Arabia)
    */
    ARABIC_SAUDI_ARABIA = 1025,
    /**
    * Arabic (Syria)
    */
    ARABIC_SYRIA = 10241,
    /**
    * Arabic (Tunisia)
    */
    ARABIC_TUNISIA = 7169,
    /**
    * Arabic (U.A.E.)
    */
    ARABIC_UAE = 14337,
    /**
    * Arabic (Yemen)
    */
    ARABIC_YEMEN = 9217,
    /**
    * Armenian
    */
    ARABIC_ARMENIAN = 1067,
    /**
    * Azeri (Cyrillic)
    */
    AZERI_CYRILIC = 2092,
    /**
    * Azeri (Latin)
    */
    AZERI_LATIN = 1068,
    /**
    * Basque
    */
    BASQUE = 1069,
    /**
    * Belarusian
    */
    BELARUSIAN = 1059,
    /**
    * Bulgarian
    */
    BULGARIAN = 1026,
    /**
    * Burmese
    */
    BURMESE = 1109,
    /**
    * Catalan
    */
    CATALAN = 1027,
    /**
    * Chinese
    */
    CHINESE = 2052,
    /**
    * Croatian
    */
    CROATIAN = 1050,
    /**
    * Czech
    */
    CZECH = 1029,
    /**
    * Danish
    */
    DANISH = 1030,
    /**
    * Dutch (Belgium)
    */
    DUTCH_BELGIUM = 2067,
    /**
    * Dutch (Netherlands)
    */
    DUTCH_NETHERLANDS = 1043,
    /**
    * English (Australia)
    */
    ENGLISH_AUSTRALIA = 3081,
    /**
    * English (Belize)
    */
    ENGLISH_BELIZE = 10249,
    /**
    * English (Canada)
    */
    ENGLISH_CANADA = 4105,
    /**
    * English (Caribbean)
    */
    ENGLISH_CARRIBEAN = 9225,
    /**
    * English (Ireland)
    */
    ENGLISH_IRELAND = 6153,
    /**
    * English (Jamaica)
    */
    ENGLISH_JAMAICA = 8201,
    /**
    * English (New Zealand)
    */
    ENGLISH_NEW_ZEALAND = 5129,
    /**
    * English (Philippines)
    */
    ENGLISH_PHILIPPINES = 13321,
    /**
    * English (South Africa)
    */
    ENGLISH_SOUTH_AFRICA = 7177,
    /**
    * English (Trinidad)
    */
    ENGLISH_TRINIDAD = 11273,
    /**
    * English (United Kingdom)
    */
    ENGLISH_UK = 2057,
    /**
    * English (United States)
    */
    ENGLISH_US = 1033,
    /**
    * English (Zimbabwe)
    */
    ENGLISH_ZIMBABWE = 12297,
    /**
    * Estonian
    */
    ESTONIAN = 1061,
    /**
    * Faeroese
    */
    FAEROESE = 1080,
    /**
    * Farsi
    */
    FARSI = 1065,
    /**
    * Finnish
    */
    FINNISH = 1035,
    /**
    * French (Belgium)
    */
    FRENCH_BELGIUM = 2060,
    /**
    * French (Canada)
    */
    FRENCH_CANADA = 3084,
    /**
    * French (France)
    */
    FRENCH_FRANCE = 1036,
    /**
    * French (Luxembourg)
    */
    FRENCH_LUXEMBOURG = 5132,
    /**
    * French (Monaco)
    */
    FRENCH_MONACO = 6156,
    /**
    * French (Switzerland)
    */
    FRENCH_SWITZERLAND = 4108,
    /**
    * FYRO Macedonian
    */
    FYRO_MACEDONIAN = 1071,
    /**
    * Galician
    */
    GALICIAN = 1110,
    /**
    * Georgian
    */
    GEORGIAN = 1079,
    /**
    * German (Austria)
    */
    GERMAN_AUSTRIA = 3079,
    /**
    * German (Germany)
    */
    GERMAN_GERMANY = 1031,
    /**
    * German (Liechtenstein)
    */
    GERMAN_LIECHTENSTEIN = 5127,
    /**
    * German (Luxembourg)
    */
    GERMAN_LUXEMBOURG = 4103,
    /**
    * German (Switzerland)
    */
    GERMAN_SWITZERLAND = 2055,
    /**
    * Greek
    */
    GREEK = 1032,
    /**
    * Gujarati
    */
    GUJARATI = 1095,
    /**
    * Hebrew
    */
    HEBREW = 1037,
    /**
    * Hindi (India)
    */
    HINDI_INDIA = 1081,
    /**
    * Hungarian
    */
    HUNGARIAN = 1038,
    /**
    * Icelandic
    */
    ICELANDIC = 1039,
    /**
    * Indonesian
    */
    INDONESIAN = 1057,
    /**
    * Italian (Italy)
    */
    ITALIAN_ITALY = 1040,
    /**
    * Italian (Switzerland)
    */
    ITALIAN_SWITZERLAND = 2064,
    /**
    * Japanese
    */
    JAPANESE = 1041,
    /**
    * Kannada
    */
    KANNADA = 1099,
    /**
    * Kazakh
    */
    KAZAKH = 1087,
    /**
    * Khmer
    */
    KHMER = 1107,
    /**
    * Konkani
    */
    KONKANI = 1111,
    /**
    * Korean
    */
    KOREAN = 1042,
    /**
    * Kyrgyz (Cyrillic)
    */
    KYRGYZ_CYRILICK = 1088,
    /**
    * Latvian
    */
    LATVIAN = 1062,
    /**
    * Lithuanian
    */
    LITHUANIAN = 1063,
    /**
    * Malay (Malaysia)
    */
    MALAY_MALAYSIA = 1086,
    /**
    * Malay (Brunei Darussalam)
    */
    MALAY_BRUNEI_DARUSSALAM = 2110,
    /**
    * Maltese
    */
    MALTESE = 1082,
    /**
    * Marathi
    */
    MARATHI = 1102,
    /**
    * Mongolian (Cyrillic)
    */
    MONGOLIAN_CYRILIC = 1104,
    /**
    * Norwegian (Bokmal)
    */
    NORWEGIAN_BOKMAL = 1044,
    /**
    * Norwegian (Nynorsk)
    */
    NORWEGIAN_NYORSK = 2068,
    /**
    * Polish
    */
    POLISH = 1045,
    /**
    * Portuguese (Brazil)
    */
    PORTUGUESE_BRAZIL = 1046,
    /**
    * Portuguese (Portugal)
    */
    PORTUGUESE_PORTUGAL = 2070,
    /**
    * Punjabi
    */
    PUNJABI = 1094,
    /**
    * Rhaeto-Romanic
    */
    RHAETO_ROMANIC = 1047,
    /**
    * Romanian
    */
    ROMANIAN = 1048,
    /**
    * Russian
    */
    RUSSIAN = 1049,
    /**
    * Sanskrit
    */
    SANSKRIT = 1103,
    /**
    * Serbian (Cyrillic)
    */
    SERBIAN_CYRILIC = 3098,
    /**
    * Serbian (Latin)
    */
    SERBIAN_LATIN = 2074,
    /**
    * Sinhala
    */
    SINHALA = 1115,
    /**
    * Slovak
    */
    SLOVAK = 1051,
    /**
    * Slovenian
    */
    SLOVENIAN = 1060,
    /**
    * Spanish (Argentina)
    */
    SPANISH_ARGENTINA = 11274,
    /**
    * Spanish (Bolivia)
    */
    SPANISH_BOLIVIA = 16394,
    /**
    * Spanish (Chile)
    */
    SPANISH_CHILE = 13322,
    /**
    * Spanish (Colombia)
    */
    SPANICH_COLOMBIA = 9226,
    /**
    * Spanish (Costa Rica)
    */
    SPANISH_COSTA_RICA = 5130,
    /**
    * Spanish (Dominican Republic)
    */
    SPANISH_DOMINICAN_REPUBLIC = 7178,
    /**
    * Spanish (Ecuador)
    */
    SPANISH_ECUADOR = 12298,
    /**
    * Spanish (El Salvador)
    */
    SPANISH_EL_SALVADOR = 17418,
    /**
    * Spanish (Guatemala)
    */
    SPANISH_GUATEMALA = 4106,
    /**
    * Spanish (Honduras)
    */
    SPANISH_HONDURAS = 18442,
    /**
    * Spanish (Mexico)
    */
    SPANISH_MEXICO = 2058,
    /**
    * Spanish (Nicaragua)
    */
    SPANISH_NICARAGUA = 19466,
    /**
    * Spanish (Panama)
    */
    SPANISH_PANAMA = 6154,
    /**
    * Spanish (Paraguay)
    */
    SPANISH_PARAGUAY = 15370,
    /**
    * Spanish (Peru)
    */
    SPANISH_PERU = 10250,
    /**
    * Spanish (Puerto Rico)
    */
    SPANISH_PUERTO_RICO = 20490,
    /**
    * Spanish (Traditional Sort)
    */
    SPANISH_TRADITIONAL_SORT = 1034,
    /**
    * Spanish (International Sort)
    */
    SPANISH_INTERNATIONAL_SORT = 3082,
    /**
    * Spanish (Uruguay)
    */
    SPANISH_URUGUAY = 14346,
    /**
    * Spanish (Venezuela)
    */
    SPANISH_VENEZUELA = 8202,
    /**
    * Swahili
    */
    SWAHILI = 1089,
    /**
    * Swedish
    */
    SWEDISH = 1053,
    /**
    * Swedish (Finland)
    */
    SWEDISH_FINLAND = 2077,
    /**
    * Tamil
    */
    TAMIL = 1097,
    /**
    * Tatar
    */
    TATAR = 1092,
    /**
    * Telugu
    */
    TELUGU = 1098,
    /**
    * Thai (Thailand)
    */
    THAI_THAILAND = 1054,
    /**
    * Turkish
    */
    TURKISH = 1055,
    /**
    * Tajik (Cyrillic)
    */
    TAJIK_CYRILLIC = 1064,
    /**
    * Turkmen
    */
    TURKMEN = 1090,
    /**
    * Ukrainian
    */
    UKRAINIAN = 1058,
    /**
    * Urdu
    */
    URDU = 1056,
    /**
    * Uzbek (Cyrillic)
    */
    UZBEK_CYRILIC = 2115,
    /**
    * Uzbek (Latin)
    */
    UZBEK_LATIN = 1091,
    /**
    * Vietnamese
    */
    VIETNAMESE = 1066,
    /**
    * CTC Simplified
    */
    CTC_SIMPLIFIED = 50001,
    /**
    * CTC Traditional
    */
    CTC_TRADITIONAL = 50002,
    /**
    * Bengali (Bangladesh)
    */
    BengaliBangladesh = 2117,
    /**
    * BengaliIndia
    */
    BengaliIndia = 1093,
    /**
    * Assamese
    */
    Assamese = 1101,
    /**
    * Oriya
    */
    ORIYA = 1096,
    /**
    * Malayalam
    */
    MALAYALAM = 1100,
    /**
    * Lao
    */
    LAO = 1108,
    /**
    * Sindhi (India)
    */
    SINDHI_INDIA = 1113,
    /**
    * Amharic
    */
    AMHARIC = 1118,
    /**
    * Kashmiri
    */
    KASHMIRI = 1120,
    /**
    * Nepali
    */
    NEPALI = 1121,
    /**
    * Pashto
    */
    PASHTO = 1123,
    /**
    * Sindhi
    */
    SINDHI = 2137,
    /**
    * Arabic (World)
    */
    ARABIC = 4096,
    /**
    * Bank Card Number
    */
    BANK_CARD_NUMBER = 10000,
    /**
    * Bank Card Expiry Date
    */
    BANK_CARD_EXPIRY_DATE = 10001,
    /**
    * Bank Card Name
    */
    BANK_CARD_NAME = 10002,
    /**
    * Bank Card
    */
    BANK_CARD = 10003,
    /**
    * Bank Card CVV2
    */
    BANK_CARD_CVV2 = 10004,
    /**
    * Abkhazian (Cyrillic)
    */
    ABKHAZIAN = 10011,
    /**
    * Karakalpak (Latin)
    */
    KARAKALPAK = 10012,
    /**
    * Urdu Detection
    */
    URDU_DETECTION = 10560
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
export enum TextFieldType {
    /**
    * Document class code
    */
    DOCUMENT_CLASS_CODE = 0,
    /**
    * Issuing state code
    */
    ISSUING_STATE_CODE = 1,
    /**
    * Document number
    */
    DOCUMENT_NUMBER = 2,
    /**
    * Date of expiry
    */
    DATE_OF_EXPIRY = 3,
    /**
    * Date of issue
    */
    DATE_OF_ISSUE = 4,
    /**
    * Date of birth
    */
    DATE_OF_BIRTH = 5,
    /**
    * Place of birth
    */
    PLACE_OF_BIRTH = 6,
    /**
    * Personal number
    */
    PERSONAL_NUMBER = 7,
    /**
    * Surname
    */
    SURNAME = 8,
    /**
    * Given name(s)
    */
    GIVEN_NAMES = 9,
    /**
    * Mother&#39;s name
    */
    MOTHERS_NAME = 10,
    /**
    * Nationality
    */
    NATIONALITY = 11,
    /**
    * Sex
    */
    SEX = 12,
    /**
    * Height
    */
    HEIGHT = 13,
    /**
    * Weight
    */
    WEIGHT = 14,
    /**
    * Eyes color
    */
    EYES_COLOR = 15,
    /**
    * Hair color
    */
    HAIR_COLOR = 16,
    /**
    * Address
    */
    ADDRESS = 17,
    /**
    * Donor
    */
    DONOR = 18,
    /**
    * Social security number
    */
    SOCIAL_SECURITY_NUMBER = 19,
    /**
    * DL class
    */
    DL_CLASS = 20,
    /**
    * DL endorsement code
    */
    DL_ENDORSED = 21,
    /**
    * DL restriction code
    */
    DL_RESTRICTION_CODE = 22,
    /**
    * Date of 21st birthday
    */
    DL_UNDER_21_DATE = 23,
    /**
    * Issuing authority
    */
    AUTHORITY = 24,
    /**
    * Surname and given names
    */
    SURNAME_AND_GIVEN_NAMES = 25,
    /**
    * Nationality code
    */
    NATIONALITY_CODE = 26,
    /**
    * Passport number
    */
    PASSPORT_NUMBER = 27,
    /**
    * Invitation number
    */
    INVITATION_NUMBER = 28,
    /**
    * Visa ID
    */
    VISA_ID = 29,
    /**
    * Visa class
    */
    VISA_CLASS = 30,
    /**
    * Visa subclass
    */
    VISA_SUBCLASS = 31,
    /**
    * MRZ type
    */
    MRZ_TYPE = 35,
    /**
    * Optional data
    */
    OPTIONAL_DATA = 36,
    /**
    * Document class name
    */
    DOCUMENT_CLASS_NAME = 37,
    /**
    * Issuing state name
    */
    ISSUING_STATE_NAME = 38,
    /**
    * Place of issue
    */
    PLACE_OF_ISSUE = 39,
    /**
    * Document number checksum
    */
    DOCUMENT_NUMBER_CHECKSUM = 40,
    /**
    * Date of birth checksum
    */
    DATE_OF_BIRTH_CHECKSUM = 41,
    /**
    * Date of expiry checksum
    */
    DATE_OF_EXPIRY_CHECKSUM = 42,
    /**
    * Personal number checksum
    */
    PERSONAL_NUMBER_CHECKSUM = 43,
    /**
    * Final checksum
    */
    FINAL_CHECKSUM = 44,
    /**
    * Passport number checksum
    */
    PASSPORT_NUMBER_CHECKSUM = 45,
    /**
    * Invitation number checksum
    */
    INVITATION_NUMBER_CHECKSUM = 46,
    /**
    * Visa ID checksum
    */
    VISA_ID_CHECKSUM = 47,
    /**
    * Surname and given names checksum
    */
    SURNAME_AND_GIVEN_NAMES_CHECKSUM = 48,
    /**
    * Visa valid until checksum
    */
    VISA_VALID_UNTIL_CHECKSUM = 49,
    /**
    * Other
    */
    OTHER = 50,
    /**
    * MRZ strings
    */
    MRZ_STRINGS = 51,
    /**
    * Name suffix
    */
    NAME_SUFFIX = 52,
    /**
    * Name prefix
    */
    NAME_PREFIX = 53,
    /**
    * Date of issue checksum
    */
    DATE_OF_ISSUE_CHECKSUM = 54,
    /**
    * Date of issue check digit
    */
    DATE_OF_ISSUE_CHECK_DIGIT = 55,
    /**
    * Document series
    */
    DOCUMENT_SERIES = 56,
    /**
    * Registration number
    */
    REG_CERT_REG_NUMBER = 57,
    /**
    * Vehicle model
    */
    REG_CERT_CAR_MODEL = 58,
    /**
    * Vehicle color
    */
    REG_CERT_CAR_COLOR = 59,
    /**
    * Vehicle body number
    */
    REG_CERT_BODY_NUMBER = 60,
    /**
    * Vehicle type
    */
    REG_CERT_CAR_TYPE = 61,
    /**
    * Max permissible weight
    */
    REG_CERT_MAX_WEIGHT = 62,
    /**
    * Unladen mass
    */
    REG_CERT_WEIGHT = 63,
    /**
    * Address: area
    */
    ADDRESS_AREA = 64,
    /**
    * Address: state
    */
    ADDRESS_STATE = 65,
    /**
    * Address: building
    */
    ADDRESS_BUILDING = 66,
    /**
    * Address: house
    */
    ADDRESS_HOUSE = 67,
    /**
    * Address: flat
    */
    ADDRESS_FLAT = 68,
    /**
    * Place of registration
    */
    PLACE_OF_REGISTRATION = 69,
    /**
    * Date of registration
    */
    DATE_OF_REGISTRATION = 70,
    /**
    * Resident from
    */
    RESIDENT_FROM = 71,
    /**
    * Resident until
    */
    RESIDENT_UNTIL = 72,
    /**
    * Issuing authority code
    */
    AUTHORITY_CODE = 73,
    /**
    * Place of birth: area
    */
    PLACE_OF_BIRTH_AREA = 74,
    /**
    * Place of birth: state code
    */
    PLACE_OF_BIRTH_STATE_CODE = 75,
    /**
    * Address: street
    */
    ADDRESS_STREET = 76,
    /**
    * Address: city
    */
    ADDRESS_CITY = 77,
    /**
    * Address: jurisdiction code
    */
    ADDRESS_JURISDICTION_CODE = 78,
    /**
    * Address: postal code
    */
    ADDRESS_POSTAL_CODE = 79,
    /**
    * Document number check digit
    */
    DOCUMENT_NUMBER_CHECK_DIGIT = 80,
    /**
    * Date of birth check digit
    */
    DATE_OF_BIRTH_CHECK_DIGIT = 81,
    /**
    * Date of expiry check digit
    */
    DATE_OF_EXPIRY_CHECK_DIGIT = 82,
    /**
    * Personal number check digit
    */
    PERSONAL_NUMBER_CHECK_DIGIT = 83,
    /**
    * Final check digit
    */
    FINAL_CHECK_DIGIT = 84,
    /**
    * Passport number check digit
    */
    PASSPORT_NUMBER_CHECK_DIGIT = 85,
    /**
    * Invitation number check digit
    */
    INVITATION_NUMBER_CHECK_DIGIT = 86,
    /**
    * Visa ID check digit
    */
    VISA_ID_CHECK_DIGIT = 87,
    /**
    * Surname and given names check digit
    */
    SURNAME_AND_GIVEN_NAMES_CHECK_DIGIT = 88,
    /**
    * Visa valid until check digit
    */
    VISA_VALID_UNTIL_CHECK_DIGIT = 89,
    /**
    * Permit class
    */
    PERMIT_DL_CLASS = 90,
    /**
    * Permit expiry date
    */
    PERMIT_DATE_OF_EXPIRY = 91,
    /**
    * Permit identifier
    */
    PERMIT_IDENTIFIER = 92,
    /**
    * Permit issue date
    */
    PERMIT_DATE_OF_ISSUE = 93,
    /**
    * Permit restriction code
    */
    PERMIT_RESTRICTION_CODE = 94,
    /**
    * Permit endorsement code
    */
    PERMIT_ENDORSED = 95,
    /**
    * Issue timestamp
    */
    ISSUE_TIMESTAMP = 96,
    /**
    * Number of duplicates
    */
    NUMBER_OF_DUPLICATES = 97,
    /**
    * Medical indicator codes
    */
    MEDICAL_INDICATOR_CODES = 98,
    /**
    * Non-resident indicator
    */
    NON_RESIDENT_INDICATOR = 99,
    /**
    * Visa type
    */
    VISA_TYPE = 100,
    /**
    * Visa valid from
    */
    VISA_VALID_FROM = 101,
    /**
    * Visa valid until
    */
    VISA_VALID_UNTIL = 102,
    /**
    * Duration of stay
    */
    DURATION_OF_STAY = 103,
    /**
    * Number of entries
    */
    NUMBER_OF_ENTRIES = 104,
    /**
    * Day
    */
    DAY = 105,
    /**
    * Month
    */
    MONTH = 106,
    /**
    * Year
    */
    YEAR = 107,
    /**
    * Unique customer identifier
    */
    UNIQUE_CUSTOMER_IDENTIFIER = 108,
    /**
    * Commercial vehicle code
    */
    COMMERCIAL_VEHICLE_CODES = 109,
    /**
    * AKA: date of birth
    */
    AKA_DATE_OF_BIRTH = 110,
    /**
    * AKA: social insurance number
    */
    AKA_SOCIAL_SECURITY_NUMBER = 111,
    /**
    * AKA: surname
    */
    AKA_SURNAME = 112,
    /**
    * AKA: given name(s)
    */
    AKA_GIVEN_NAMES = 113,
    /**
    * AKA: name suffix
    */
    AKA_NAME_SUFFIX = 114,
    /**
    * AKA: name prefix
    */
    AKA_NAME_PREFIX = 115,
    /**
    * Mailing address: street
    */
    MAILING_ADDRESS_STREET = 116,
    /**
    * Mailing address: city
    */
    MAILING_ADDRESS_CITY = 117,
    /**
    * Mailing address: jurisdiction code
    */
    MAILING_ADDRESS_JURISDICTION_CODE = 118,
    /**
    * Mailing address: postal code
    */
    MAILING_ADDRESS_POSTAL_CODE = 119,
    /**
    * Number for validation
    */
    AUDIT_INFORMATION = 120,
    /**
    * Inventory number
    */
    INVENTORY_NUMBER = 121,
    /**
    * Race ethnicity
    */
    RACE_ETHNICITY = 122,
    /**
    * Jurisdiction vehicle class
    */
    JURISDICTION_VEHICLE_CLASS = 123,
    /**
    * Jurisdiction endorsement code
    */
    JURISDICTION_ENDORSEMENT_CODE = 124,
    /**
    * Jurisdiction restriction code
    */
    JURISDICTION_RESTRICTION_CODE = 125,
    /**
    * Family name
    */
    FAMILY_NAME = 126,
    /**
    * Given name(s) (national)
    */
    GIVEN_NAMES_RUS = 127,
    /**
    * Visa ID (national)
    */
    VISA_ID_RUS = 128,
    /**
    * Father&#39;s name
    */
    FATHERS_NAME = 129,
    /**
    * Father&#39;s name (national)
    */
    FATHERS_NAME_RUS = 130,
    /**
    * Surname and given names (national)
    */
    SURNAME_AND_GIVEN_NAMES_RUS = 131,
    /**
    * Place of birth (national)
    */
    PLACE_OF_BIRTH_RUS = 132,
    /**
    * Issuing authority (national)
    */
    AUTHORITY_RUS = 133,
    /**
    * Issuing state code (numeric)
    */
    ISSUING_STATE_CODE_NUMERIC = 134,
    /**
    * Nationality code (numeric)
    */
    NATIONALITY_CODE_NUMERIC = 135,
    /**
    * Engine power
    */
    ENGINE_POWER = 136,
    /**
    * Engine volume
    */
    ENGINE_VOLUME = 137,
    /**
    * Chassis number
    */
    CHASSIS_NUMBER = 138,
    /**
    * Engine number
    */
    ENGINE_NUMBER = 139,
    /**
    * Engine model
    */
    ENGINE_MODEL = 140,
    /**
    * Vehicle category
    */
    VEHICLE_CATEGORY = 141,
    /**
    * Identity card number
    */
    IDENTITY_CARD_NUMBER = 142,
    /**
    * Control number
    */
    CONTROL_NUMBER = 143,
    /**
    * Parents&#39; given names
    */
    PARENTS_GIVEN_NAMES = 144,
    /**
    * Second surname
    */
    SECOND_SURNAME = 145,
    /**
    * Middle name
    */
    MIDDLE_NAME = 146,
    /**
    * Vehicle identification number
    */
    REG_CERT_VIN = 147,
    /**
    * VIN check digit
    */
    REG_CERT_VIN_CHECK_DIGIT = 148,
    /**
    * VIN checksum
    */
    REG_CERT_VIN_CHECKSUM = 149,
    /**
    * Line 1 check digit
    */
    LINE_1_CHECK_DIGIT = 150,
    /**
    * Line 2 check digit
    */
    LINE_2_CHECK_DIGIT = 151,
    /**
    * Line 3 check digit
    */
    LINE_3_CHECK_DIGIT = 152,
    /**
    * Line 1 checksum
    */
    LINE_1_CHECKSUM = 153,
    /**
    * Line 2 checksum
    */
    LINE_2_CHECKSUM = 154,
    /**
    * Line 3 checksum
    */
    LINE_3_CHECKSUM = 155,
    /**
    * Registration number check digit
    */
    REG_CERT_REG_NUMBER_CHECK_DIGIT = 156,
    /**
    * Registration number checksum
    */
    REG_CERT_REG_NUMBER_CHECKSUM = 157,
    /**
    * Vehicle ITS code
    */
    REG_CERT_VEHICLE_ITS_CODE = 158,
    /**
    * Card access number
    */
    CARD_ACCESS_NUMBER = 159,
    /**
    * Marital status
    */
    MARITAL_STATUS = 160,
    /**
    * Company name
    */
    COMPANY_NAME = 161,
    /**
    * Special notes
    */
    SPECIAL_NOTES = 162,
    /**
    * Spouse&#39;s surname
    */
    SURNAME_OF_SPOUSE = 163,
    /**
    * Tracking number
    */
    TRACKING_NUMBER = 164,
    /**
    * Booklet number
    */
    BOOKLET_NUMBER = 165,
    /**
    * Children
    */
    CHILDREN = 166,
    /**
    * Copy
    */
    COPY = 167,
    /**
    * Serial number
    */
    SERIAL_NUMBER = 168,
    /**
    * Dossier number
    */
    DOSSIER_NUMBER = 169,
    /**
    * AKA: surname and given names
    */
    AKA_SURNAME_AND_GIVEN_NAMES = 170,
    /**
    * Territorial validity
    */
    TERRITORIAL_VALIDITY = 171,
    /**
    * MRZ strings with correct checksums
    */
    MRZ_STRINGS_WITH_CORRECT_CHECK_SUMS = 172,
    /**
    * CDL restriction code
    */
    DL_CDL_RESTRICTION_CODE = 173,
    /**
    * Date of 18th birthday
    */
    DL_UNDER_18_DATE = 174,
    /**
    * DL record created
    */
    DL_RECORD_CREATED = 175,
    /**
    * DL date of duplicate issue
    */
    DL_DUPLICATE_DATE = 176,
    /**
    * Card type
    */
    DL_ISSUE_TYPE = 177,
    /**
    * Military ID number
    */
    MILITARY_BOOK_NUMBER = 178,
    /**
    * Destination
    */
    DESTINATION = 179,
    /**
    * Blood group
    */
    BLOOD_GROUP = 180,
    /**
    * Sequence number
    */
    SEQUENCE_NUMBER = 181,
    /**
    * Body type
    */
    REG_CERT_BODY_TYPE = 182,
    /**
    * Vehicle make
    */
    REG_CERT_CAR_MARK = 183,
    /**
    * Transaction number
    */
    TRANSACTION_NUMBER = 184,
    /**
    * Age
    */
    AGE = 185,
    /**
    * Folio number
    */
    FOLIO_NUMBER = 186,
    /**
    * Voter key
    */
    VOTER_KEY = 187,
    /**
    * Address: municipality
    */
    ADDRESS_MUNICIPALITY = 188,
    /**
    * Address: location
    */
    ADDRESS_LOCATION = 189,
    /**
    * Section
    */
    SECTION = 190,
    /**
    * OCR number
    */
    OCR_NUMBER = 191,
    /**
    * Federal elections
    */
    FEDERAL_ELECTIONS = 192,
    /**
    * Reference number
    */
    REFERENCE_NUMBER = 193,
    /**
    * Optional data checksum
    */
    OPTIONAL_DATA_CHECKSUM = 194,
    /**
    * Optional data check digit
    */
    OPTIONAL_DATA_CHECK_DIGIT = 195,
    /**
    * Visa number
    */
    VISA_NUMBER = 196,
    /**
    * Visa number checksum
    */
    VISA_NUMBER_CHECKSUM = 197,
    /**
    * Visa number check digit
    */
    VISA_NUMBER_CHECK_DIGIT = 198,
    /**
    * Voter
    */
    VOTER = 199,
    /**
    * Type of the previous document
    */
    PREVIOUS_TYPE = 200,
    /**
    * Field from MRZ
    */
    FIELD_FROM_MRZ = 220,
    /**
    * Current date
    */
    CURRENT_DATE = 221,
    /**
    * Status date of expiry
    */
    STATUS_DATE_OF_EXPIRY = 251,
    /**
    * Banknote number
    */
    BANKNOTE_NUMBER = 252,
    /**
    * CSC code
    */
    CSC_CODE = 253,
    /**
    * Pseudonym
    */
    ARTISTIC_NAME = 254,
    /**
    * Academic title
    */
    ACADEMIC_TITLE = 255,
    /**
    * Address country
    */
    ADDRESS_COUNTRY = 256,
    /**
    * Address ZIP code
    */
    ADDRESS_ZIP_CODE = 257,
    /**
    * eID residence permit 1
    */
    E_ID_RESIDENCE_PERMIT_1 = 258,
    /**
    * eID residence permit 2
    */
    E_ID_RESIDENCE_PERMIT_2 = 259,
    /**
    * eID place of birth: street
    */
    E_ID_PLACE_OF_BIRTH_STREET = 260,
    /**
    * eID place of birth: city
    */
    E_ID_PLACE_OF_BIRTH_CITY = 261,
    /**
    * eID place of birth: state
    */
    E_ID_PLACE_OF_BIRTH_STATE = 262,
    /**
    * eID place of birth: country
    */
    E_ID_PLACE_OF_BIRTH_COUNTRY = 263,
    /**
    * eID place of birth: postal code
    */
    E_ID_PLACE_OF_BIRTH_ZIP_CODE = 264,
    /**
    * CDL class
    */
    CDL_CLASS = 265,
    /**
    * Date of 19th birthday
    */
    DL_UNDER_19_DATE = 266,
    /**
    * Weight (pound)
    */
    WEIGHT_POUNDS = 267,
    /**
    * Indicator of document limited duration
    */
    LIMITED_DURATION_DOCUMENT_INDICATOR = 268,
    /**
    * Endorsement expiration date
    */
    ENDORSEMENT_EXPIRATION_DATE = 269,
    /**
    * Revision date
    */
    REVISION_DATE = 270,
    /**
    * Compliance type
    */
    COMPLIANCE_TYPE = 271,
    /**
    * Family name truncation
    */
    FAMILY_NAME_TRUNCATION = 272,
    /**
    * First name truncation
    */
    FIRST_NAME_TRUNCATION = 273,
    /**
    * Middle name truncation
    */
    MIDDLE_NAME_TRUNCATION = 274,
    /**
    * Exam date
    */
    EXAM_DATE = 275,
    /**
    * Organization
    */
    ORGANIZATION = 276,
    /**
    * Department
    */
    DEPARTMENT = 277,
    /**
    * Pay grade
    */
    PAY_GRADE = 278,
    /**
    * Rank
    */
    RANK = 279,
    /**
    * Benefits number
    */
    BENEFITS_NUMBER = 280,
    /**
    * Sponsor service
    */
    SPONSOR_SERVICE = 281,
    /**
    * Sponsor status
    */
    SPONSOR_STATUS = 282,
    /**
    * Sponsor
    */
    SPONSOR = 283,
    /**
    * Relationship
    */
    RELATIONSHIP = 284,
    /**
    * USCIS
    */
    USCIS = 285,
    /**
    * Category
    */
    CATEGORY = 286,
    /**
    * Conditions
    */
    CONDITIONS = 287,
    /**
    * Identifier
    */
    IDENTIFIER = 288,
    /**
    * Configuration
    */
    CONFIGURATION = 289,
    /**
    * Discretionary data
    */
    DISCRETIONARY_DATA = 290,
    /**
    * Line 1 optional data
    */
    LINE_1_OPTIONAL_DATA = 291,
    /**
    * Line 2 optional data
    */
    LINE_2_OPTIONAL_DATA = 292,
    /**
    * Line 3 optional data
    */
    LINE_3_OPTIONAL_DATA = 293,
    /**
    * EQV code
    */
    EQV_CODE = 294,
    /**
    * ALT code
    */
    ALT_CODE = 295,
    /**
    * Binary code
    */
    BINARY_CODE = 296,
    /**
    * Pseudo code
    */
    PSEUDO_CODE = 297,
    /**
    * Fee
    */
    FEE = 298,
    /**
    * Stamp number
    */
    STAMP_NUMBER = 299,
    /**
    * SBH security options
    */
    SBH_SECURITY_OPTIONS = 300,
    /**
    * SBH integrity options
    */
    SBH_INTEGRITY_OPTIONS = 301,
    /**
    * Date of creation
    */
    DATE_OF_CREATION = 302,
    /**
    * Validity period
    */
    VALIDITY_PERIOD = 303,
    /**
    * Patron header version
    */
    PATRON_HEADER_VERSION = 304,
    /**
    * BDB type
    */
    BDB_TYPE = 305,
    /**
    * Biometric type
    */
    BIOMETRIC_TYPE = 306,
    /**
    * Biometric subtype
    */
    BIOMETRIC_SUBTYPE = 307,
    /**
    * Biometric product ID
    */
    BIOMETRIC_PRODUCT_ID = 308,
    /**
    * Biometric format owner
    */
    BIOMETRIC_FORMAT_OWNER = 309,
    /**
    * Biometric format type
    */
    BIOMETRIC_FORMAT_TYPE = 310,
    /**
    * Phone
    */
    PHONE = 311,
    /**
    * Profession
    */
    PROFESSION = 312,
    /**
    * Position
    */
    TITLE = 313,
    /**
    * Personal data summary
    */
    PERSONAL_SUMMARY = 314,
    /**
    * Other valid ID
    */
    OTHER_VALID_ID = 315,
    /**
    * Custody info
    */
    CUSTODY_INFO = 316,
    /**
    * Other name
    */
    OTHER_NAME = 317,
    /**
    * Observations
    */
    OBSERVATIONS = 318,
    /**
    * Tax
    */
    TAX = 319,
    /**
    * Personalization date
    */
    DATE_OF_PERSONALIZATION = 320,
    /**
    * Personalization SN
    */
    PERSONALIZATION_SN = 321,
    /**
    * Other person name
    */
    OTHER_PERSON_NAME = 322,
    /**
    * Notify person: date of record
    */
    PERSON_TO_NOTIFY_DATE_OF_RECORD = 323,
    /**
    * Notify person: name
    */
    PERSON_TO_NOTIFY_NAME = 324,
    /**
    * Notify person: phone
    */
    PERSON_TO_NOTIFY_PHONE = 325,
    /**
    * Notify person: address
    */
    PERSON_TO_NOTIFY_ADDRESS = 326,
    /**
    * DS certificate issuer
    */
    DS_CERTIFICATE_ISSUER = 327,
    /**
    * DS certificate subject
    */
    DS_CERTIFICATE_SUBJECT = 328,
    /**
    * DS certificate valid from
    */
    DS_CERTIFICATE_VALID_FROM = 329,
    /**
    * DS certificate valid to
    */
    DS_CERTIFICATE_VALID_TO = 330,
    /**
    * Vehicle data from the DG1 data group
    */
    VRC_DATA_OBJECT_ENTRY = 331,
    /**
    * Type of approval number
    */
    TYPE_APPROVAL_NUMBER = 332,
    /**
    * Administrative number
    */
    ADMINISTRATIVE_NUMBER = 333,
    /**
    * Document discriminator
    */
    DOCUMENT_DISCRIMINATOR = 334,
    /**
    * Data discriminator
    */
    DATA_DISCRIMINATOR = 335,
    /**
    * ID number of ISO issuer
    */
    ISO_ISSUER_ID_NUMBER = 336,
    /**
    * GNIB number
    */
    GNIB_NUMBER = 340,
    /**
    * Department number
    */
    DEPT_NUMBER = 341,
    /**
    * Telegraph code
    */
    TELEX_CODE = 342,
    /**
    * Allergies
    */
    ALLERGIES = 343,
    /**
    * Special code
    */
    SP_CODE = 344,
    /**
    * Court code
    */
    COURT_CODE = 345,
    /**
    * County
    */
    CTY = 346,
    /**
    * Sponsor SSN
    */
    SPONSOR_SSN = 347,
    /**
    * DoD number
    */
    DOD_NUMBER = 348,
    /**
    * Expiry date of Motorcycle Novice status
    */
    MC_NOVICE_DATE = 349,
    /**
    * DUF number
    */
    DUF_NUMBER = 350,
    /**
    * AGY
    */
    AGY = 351,
    /**
    * PNR code
    */
    PNR_CODE = 352,
    /**
    * Code of the airport of departure
    */
    FROM_AIRPORT_CODE = 353,
    /**
    * Code of the airport of arrival
    */
    TO_AIRPORT_CODE = 354,
    /**
    * Flight number
    */
    FLIGHT_NUMBER = 355,
    /**
    * Date of flight
    */
    DATE_OF_FLIGHT = 356,
    /**
    * Seat number
    */
    SEAT_NUMBER = 357,
    /**
    * Date of boarding pass issue
    */
    DATE_OF_ISSUE_BOARDING_PASS = 358,
    /**
    * CCW until
    */
    CCW_UNTIL = 359,
    /**
    * Reference number checksum
    */
    REFERENCE_NUMBER_CHECKSUM = 360,
    /**
    * Reference number check digit
    */
    REFERENCE_NUMBER_CHECK_DIGIT = 361,
    /**
    * Room number
    */
    ROOM_NUMBER = 362,
    /**
    * Religion
    */
    RELIGION = 363,
    /**
    * Months to expire
    */
    REMAINDER_TERM = 364,
    /**
    * Electronic ticket indicator
    */
    ELECTRONIC_TICKET_INDICATOR = 365,
    /**
    * Compartment code
    */
    COMPARTMENT_CODE = 366,
    /**
    * Check-in sequence number
    */
    CHECK_IN_SEQUENCE_NUMBER = 367,
    /**
    * Airline designator of boarding pass issuer
    */
    AIRLINE_DESIGNATOR_OF_BOARDING_PASS_ISSUER = 368,
    /**
    * Airline numeric code
    */
    AIRLINE_NUMERIC_CODE = 369,
    /**
    * Ticket number
    */
    TICKET_NUMBER = 370,
    /**
    * Frequent flyer airline designator
    */
    FREQUENT_FLYER_AIRLINE_DESIGNATOR = 371,
    /**
    * Frequent flyer number
    */
    FREQUENT_FLYER_NUMBER = 372,
    /**
    * Free baggage allowance
    */
    FREE_BAGGAGE_ALLOWANCE = 373,
    /**
    * PDF417 codec
    */
    PDF417_CODEC = 374,
    /**
    * Identity card number checksum
    */
    IDENTITY_CARD_NUMBER_CHECKSUM = 375,
    /**
    * Identity card number check digit
    */
    IDENTITY_CARD_NUMBER_CHECK_DIGIT = 376,
    /**
    * Veteran
    */
    VETERAN = 377,
    /**
    * DL category A1 valid from
    */
    DL_CLASS_CODE_A1_FROM = 378,
    /**
    * DL category A1 valid to
    */
    DL_CLASS_CODE_A1_TO = 379,
    /**
    * DL category A1 codes
    */
    DL_CLASS_CODE_A1_NOTES = 380,
    /**
    * DL category A valid from
    */
    DL_CLASS_CODE_A_FROM = 381,
    /**
    * DL category A valid to
    */
    DL_CLASS_CODE_A_TO = 382,
    /**
    * DL category A codes
    */
    DL_CLASS_CODE_A_NOTES = 383,
    /**
    * DL category B valid from
    */
    DL_CLASS_CODE_B_FROM = 384,
    /**
    * DL category B valid to
    */
    DL_CLASS_CODE_B_TO = 385,
    /**
    * DL category B codes
    */
    DL_CLASS_CODE_B_NOTES = 386,
    /**
    * DL category C1 valid from
    */
    DL_CLASS_CODE_C1_FROM = 387,
    /**
    * DL category C1 valid to
    */
    DL_CLASS_CODE_C1_TO = 388,
    /**
    * DL category C1 codes
    */
    DL_CLASS_CODE_C1_NOTES = 389,
    /**
    * DL category C valid from
    */
    DL_CLASS_CODE_C_FROM = 390,
    /**
    * DL category C valid to
    */
    DL_CLASS_CODE_C_TO = 391,
    /**
    * DL category C codes
    */
    DL_CLASS_CODE_C_NOTES = 392,
    /**
    * DL category D1 valid from
    */
    DL_CLASS_CODE_D1_FROM = 393,
    /**
    * DL category D1 valid to
    */
    DL_CLASS_CODE_D1_TO = 394,
    /**
    * DL category D1 codes
    */
    DL_CLASS_CODE_D1_NOTES = 395,
    /**
    * DL category D valid from
    */
    DL_CLASS_CODE_D_FROM = 396,
    /**
    * DL category D valid to
    */
    DL_CLASS_CODE_D_TO = 397,
    /**
    * DL category D codes
    */
    DL_CLASS_CODE_D_NOTES = 398,
    /**
    * DL category BE valid from
    */
    DL_CLASS_CODE_BE_FROM = 399,
    /**
    * DL category BE valid to
    */
    DL_CLASS_CODE_BE_TO = 400,
    /**
    * DL category BE codes
    */
    DL_CLASS_CODE_BE_NOTES = 401,
    /**
    * DL category C1E valid from
    */
    DL_CLASS_CODE_C1E_FROM = 402,
    /**
    * DL category C1E valid to
    */
    DL_CLASS_CODE_C1E_TO = 403,
    /**
    * DL category C1E codes
    */
    DL_CLASS_CODE_C1E_NOTES = 404,
    /**
    * DL category CE valid from
    */
    DL_CLASS_CODE_CE_FROM = 405,
    /**
    * DL category CE valid to
    */
    DL_CLASS_CODE_CE_TO = 406,
    /**
    * DL category CE codes
    */
    DL_CLASS_CODE_CE_NOTES = 407,
    /**
    * DL category D1E valid from
    */
    DL_CLASS_CODE_D1E_FROM = 408,
    /**
    * DL category D1E valid to
    */
    DL_CLASS_CODE_D1E_TO = 409,
    /**
    * DL category D1E codes
    */
    DL_CLASS_CODE_D1E_NOTES = 410,
    /**
    * DL category DE valid from
    */
    DL_CLASS_CODE_DE_FROM = 411,
    /**
    * DL category DE valid to
    */
    DL_CLASS_CODE_DE_TO = 412,
    /**
    * DL category DE codes
    */
    DL_CLASS_CODE_DE_NOTES = 413,
    /**
    * DL category M valid from
    */
    DL_CLASS_CODE_M_FROM = 414,
    /**
    * DL category M valid to
    */
    DL_CLASS_CODE_M_TO = 415,
    /**
    * DL category M codes
    */
    DL_CLASS_CODE_M_NOTES = 416,
    /**
    * DL category L valid from
    */
    DL_CLASS_CODE_L_FROM = 417,
    /**
    * DL category L valid to
    */
    DL_CLASS_CODE_L_TO = 418,
    /**
    * DL category L codes
    */
    DL_CLASS_CODE_L_NOTES = 419,
    /**
    * DL category T valid from
    */
    DL_CLASS_CODE_T_FROM = 420,
    /**
    * DL category T valid to
    */
    DL_CLASS_CODE_T_TO = 421,
    /**
    * DL category T codes
    */
    DL_CLASS_CODE_T_NOTES = 422,
    /**
    * DL category AM valid from
    */
    DL_CLASS_CODE_AM_FROM = 423,
    /**
    * DL category AM valid to
    */
    DL_CLASS_CODE_AM_TO = 424,
    /**
    * DL category AM codes
    */
    DL_CLASS_CODE_AM_NOTES = 425,
    /**
    * DL category A2 valid from
    */
    DL_CLASS_CODE_A2_FROM = 426,
    /**
    * DL category A2 valid to
    */
    DL_CLASS_CODE_A2_TO = 427,
    /**
    * DL category A2 codes
    */
    DL_CLASS_CODE_A2_NOTES = 428,
    /**
    * DL category B1 valid from
    */
    DL_CLASS_CODE_B1_FROM = 429,
    /**
    * DL category B1 valid to
    */
    DL_CLASS_CODE_B1_TO = 430,
    /**
    * DL category B1 codes
    */
    DL_CLASS_CODE_B1_NOTES = 431,
    /**
    * Surname at birth
    */
    SURNAME_AT_BIRTH = 432,
    /**
    * Civil status
    */
    CIVIL_STATUS = 433,
    /**
    * Number of seats
    */
    NUMBER_OF_SEATS = 434,
    /**
    * Number of standing places
    */
    NUMBER_OF_STANDING_PLACES = 435,
    /**
    * Max speed
    */
    MAX_SPEED = 436,
    /**
    * Fuel type
    */
    FUEL_TYPE = 437,
    /**
    * Vehicle environmental type
    */
    EC_ENVIRONMENTAL_TYPE = 438,
    /**
    * Power-to-weight ratio
    */
    POWER_WEIGHT_RATIO = 439,
    /**
    * Max mass of trailer (braked)
    */
    MAX_MASS_OF_TRAILER_BRAKED = 440,
    /**
    * Max mass of trailer (unbraked)
    */
    MAX_MASS_OF_TRAILER_UNBRAKED = 441,
    /**
    * Transmission type
    */
    TRANSMISSION_TYPE = 442,
    /**
    * Trailer hitch
    */
    TRAILER_HITCH = 443,
    /**
    * Accompanied by
    */
    ACCOMPANIED_BY = 444,
    /**
    * Police district
    */
    POLICE_DISTRICT = 445,
    /**
    * First issue date
    */
    FIRST_ISSUE_DATE = 446,
    /**
    * Payload capacity
    */
    PAYLOAD_CAPACITY = 447,
    /**
    * Number of axles
    */
    NUMBER_OF_AXLES = 448,
    /**
    * Permissible axle load
    */
    PERMISSIBLE_AXLE_LOAD = 449,
    /**
    * Precinct
    */
    PRECINCT = 450,
    /**
    * Invited by
    */
    INVITED_BY = 451,
    /**
    * Purpose of entry
    */
    PURPOSE_OF_ENTRY = 452,
    /**
    * Skin color
    */
    SKIN_COLOR = 453,
    /**
    * Complexion
    */
    COMPLEXION = 454,
    /**
    * Airport of departure
    */
    AIRPORT_FROM = 455,
    /**
    * Airport of arrival
    */
    AIRPORT_TO = 456,
    /**
    * Airline name
    */
    AIRLINE_NAME = 457,
    /**
    * Airline loyalty program for frequent flyers
    */
    AIRLINE_NAME_FREQUENT_FLYER = 458,
    /**
    * License number
    */
    LICENSE_NUMBER = 459,
    /**
    * In tanks
    */
    IN_TANKS = 460,
    /**
    * Other than tanks
    */
    EXCEPT_IN_TANKS = 461,
    /**
    * Fast Track service
    */
    FAST_TRACK = 462,
    /**
    * Owner
    */
    OWNER = 463,
    /**
    * MRZ strings from ICAO RFID
    */
    MRZ_STRINGS_ICAO_RFID = 464,
    /**
    * Number of card issuances
    */
    NUMBER_OF_CARD_ISSUANCE = 465,
    /**
    * Number of card issuances checksum
    */
    NUMBER_OF_CARD_ISSUANCE_CHECKSUM = 466,
    /**
    * Number of card issuances check digit
    */
    NUMBER_OF_CARD_ISSUANCE_CHECK_DIGIT = 467,
    /**
    * Century of birth
    */
    CENTURY_DATE_OF_BIRTH = 468,
    /**
    * DL category A3 valid from
    */
    DL_CLASS_CODE_A3_FROM = 469,
    /**
    * DL category A3 valid to
    */
    DL_CLASS_CODE_A3_TO = 470,
    /**
    * DL category A3 codes
    */
    DL_CLASS_CODE_A3_NOTES = 471,
    /**
    * DL category C2 valid from
    */
    DL_CLASS_CODE_C2_FROM = 472,
    /**
    * DL category C2 valid to
    */
    DL_CLASS_CODE_C2_TO = 473,
    /**
    * DL category C2 codes
    */
    DL_CLASS_CODE_C2_NOTES = 474,
    /**
    * DL category B2 valid from
    */
    DL_CLASS_CODE_B2_FROM = 475,
    /**
    * DL category B2 valid to
    */
    DL_CLASS_CODE_B2_TO = 476,
    /**
    * DL category B2 codes
    */
    DL_CLASS_CODE_B2_NOTES = 477,
    /**
    * DL category D2 valid from
    */
    DL_CLASS_CODE_D2_FROM = 478,
    /**
    * DL category D2 valid to
    */
    DL_CLASS_CODE_D2_TO = 479,
    /**
    * DL category D2 codes
    */
    DL_CLASS_CODE_D2_NOTES = 480,
    /**
    * DL category B2E valid from
    */
    DL_CLASS_CODE_B2E_FROM = 481,
    /**
    * DL category B2E valid to
    */
    DL_CLASS_CODE_B2E_TO = 482,
    /**
    * DL category B2E codes
    */
    DL_CLASS_CODE_B2E_NOTES = 483,
    /**
    * DL category G valid from
    */
    DL_CLASS_CODE_G_FROM = 484,
    /**
    * DL category G valid to
    */
    DL_CLASS_CODE_G_TO = 485,
    /**
    * DL category G codes
    */
    DL_CLASS_CODE_G_NOTES = 486,
    /**
    * DL category J valid from
    */
    DL_CLASS_CODE_J_FROM = 487,
    /**
    * DL category J valid to
    */
    DL_CLASS_CODE_J_TO = 488,
    /**
    * DL category J codes
    */
    DL_CLASS_CODE_J_NOTES = 489,
    /**
    * DL category LC valid from
    */
    DL_CLASS_CODE_LC_FROM = 490,
    /**
    * DL category LC valid to
    */
    DL_CLASS_CODE_LC_TO = 491,
    /**
    * DL category LC codes
    */
    DL_CLASS_CODE_LC_NOTES = 492,
    /**
    * Bank card number
    */
    BANK_CARD_NUMBER = 493,
    /**
    * Bank card validity
    */
    BANK_CARD_VALID_THRU = 494,
    /**
    * Tax number
    */
    TAX_NUMBER = 495,
    /**
    * Health insurance number
    */
    HEALTH_NUMBER = 496,
    /**
    * Grandfather&#39;s name
    */
    GRANDFATHER_NAME = 497,
    /**
    * Selectee indicator
    */
    SELECTEE_INDICATOR = 498,
    /**
    * Mother&#39;s surname
    */
    MOTHER_SURNAME = 499,
    /**
    * Mother&#39;s name
    */
    MOTHER_GIVEN_NAME = 500,
    /**
    * Father&#39;s surname
    */
    FATHER_SURNAME = 501,
    /**
    * Father&#39;s name
    */
    FATHER_GIVEN_NAME = 502,
    /**
    * Mother&#39;s date of birth
    */
    MOTHER_DATE_OF_BIRTH = 503,
    /**
    * Father&#39;s date of birth
    */
    FATHER_DATE_OF_BIRTH = 504,
    /**
    * Mother&#39;s personal number
    */
    MOTHER_PERSONAL_NUMBER = 505,
    /**
    * Father&#39;s personal number
    */
    FATHER_PERSONAL_NUMBER = 506,
    /**
    * Mother&#39;s place of birth
    */
    MOTHER_PLACE_OF_BIRTH = 507,
    /**
    * Father&#39;s place of birth
    */
    FATHER_PLACE_OF_BIRTH = 508,
    /**
    * Mother&#39;s country of birth
    */
    MOTHER_COUNTRY_OF_BIRTH = 509,
    /**
    * Father&#39;s country of birth
    */
    FATHER_COUNTRY_OF_BIRTH = 510,
    /**
    * Date of first renewal
    */
    DATE_FIRST_RENEWAL = 511,
    /**
    * Date of second renewal
    */
    DATE_SECOND_RENEWAL = 512,
    /**
    * Place of examination
    */
    PLACE_OF_EXAMINATION = 513,
    /**
    * Application number
    */
    APPLICATION_NUMBER = 514,
    /**
    * Voucher number
    */
    VOUCHER_NUMBER = 515,
    /**
    * Authorization number
    */
    AUTHORIZATION_NUMBER = 516,
    /**
    * Faculty
    */
    FACULTY = 517,
    /**
    * Form of education
    */
    FORM_OF_EDUCATION = 518,
    /**
    * DNI number
    */
    DNI_NUMBER = 519,
    /**
    * Retirement number
    */
    RETIREMENT_NUMBER = 520,
    /**
    * Professional id number
    */
    PROFESSIONAL_ID_NUMBER = 521,
    /**
    * Age at issue
    */
    AGE_AT_ISSUE = 522,
    /**
    * Years since issue
    */
    YEARS_SINCE_ISSUE = 523,
    /**
    * DL category BTP valid from
    */
    DL_CLASS_CODE_BTP_FROM = 524,
    /**
    * DL category BTP codes
    */
    DL_CLASS_CODE_BTP_NOTES = 525,
    /**
    * DL category BTP valid to
    */
    DL_CLASS_CODE_BTP_TO = 526,
    /**
    * DL category C3 valid from
    */
    DL_CLASS_CODE_C3_FROM = 527,
    /**
    * DL category C3 codes
    */
    DL_CLASS_CODE_C3_NOTES = 528,
    /**
    * DL category C3 valid to
    */
    DL_CLASS_CODE_C3_TO = 529,
    /**
    * DL category E valid from
    */
    DL_CLASS_CODE_E_FROM = 530,
    /**
    * DL category E codes
    */
    DL_CLASS_CODE_E_NOTES = 531,
    /**
    * DL category E valid to
    */
    DL_CLASS_CODE_E_TO = 532,
    /**
    * DL category F valid from
    */
    DL_CLASS_CODE_F_FROM = 533,
    /**
    * DL category F codes
    */
    DL_CLASS_CODE_F_NOTES = 534,
    /**
    * DL category F valid to
    */
    DL_CLASS_CODE_F_TO = 535,
    /**
    * DL category FA valid from
    */
    DL_CLASS_CODE_FA_FROM = 536,
    /**
    * DL category FA codes
    */
    DL_CLASS_CODE_FA_NOTES = 537,
    /**
    * DL category FA valid to
    */
    DL_CLASS_CODE_FA_TO = 538,
    /**
    * DL category FA1 valid from
    */
    DL_CLASS_CODE_FA1_FROM = 539,
    /**
    * DL category FA1 codes
    */
    DL_CLASS_CODE_FA1_NOTES = 540,
    /**
    * DL category FA1 valid to
    */
    DL_CLASS_CODE_FA1_TO = 541,
    /**
    * DL category FB valid from
    */
    DL_CLASS_CODE_FB_FROM = 542,
    /**
    * DL category FB codes
    */
    DL_CLASS_CODE_FB_NOTES = 543,
    /**
    * DL category FB valid to
    */
    DL_CLASS_CODE_FB_TO = 544,
    /**
    * DL category G1 valid from
    */
    DL_CLASS_CODE_G1_FROM = 545,
    /**
    * DL category G1 codes
    */
    DL_CLASS_CODE_G1_NOTES = 546,
    /**
    * DL category G1 valid to
    */
    DL_CLASS_CODE_G1_TO = 547,
    /**
    * DL category H valid from
    */
    DL_CLASS_CODE_H_FROM = 548,
    /**
    * DL category H codes
    */
    DL_CLASS_CODE_H_NOTES = 549,
    /**
    * DL category H valid to
    */
    DL_CLASS_CODE_H_TO = 550,
    /**
    * DL category I valid from
    */
    DL_CLASS_CODE_I_FROM = 551,
    /**
    * DL category I codes
    */
    DL_CLASS_CODE_I_NOTES = 552,
    /**
    * DL category I valid to
    */
    DL_CLASS_CODE_I_TO = 553,
    /**
    * DL category K valid from
    */
    DL_CLASS_CODE_K_FROM = 554,
    /**
    * DL category K codes
    */
    DL_CLASS_CODE_K_NOTES = 555,
    /**
    * DL category K valid to
    */
    DL_CLASS_CODE_K_TO = 556,
    /**
    * DL category LK valid from
    */
    DL_CLASS_CODE_LK_FROM = 557,
    /**
    * DL category LK codes
    */
    DL_CLASS_CODE_LK_NOTES = 558,
    /**
    * DL category LK valid to
    */
    DL_CLASS_CODE_LK_TO = 559,
    /**
    * DL category N valid from
    */
    DL_CLASS_CODE_N_FROM = 560,
    /**
    * DL category N codes
    */
    DL_CLASS_CODE_N_NOTES = 561,
    /**
    * DL category N valid to
    */
    DL_CLASS_CODE_N_TO = 562,
    /**
    * DL category S valid from
    */
    DL_CLASS_CODE_S_FROM = 563,
    /**
    * DL category S codes
    */
    DL_CLASS_CODE_S_NOTES = 564,
    /**
    * DL category S valid to
    */
    DL_CLASS_CODE_S_TO = 565,
    /**
    * DL category TB valid from
    */
    DL_CLASS_CODE_TB_FROM = 566,
    /**
    * DL category TB codes
    */
    DL_CLASS_CODE_TB_NOTES = 567,
    /**
    * DL category TB valid to
    */
    DL_CLASS_CODE_TB_TO = 568,
    /**
    * DL category TM valid from
    */
    DL_CLASS_CODE_TM_FROM = 569,
    /**
    * DL category TM codes
    */
    DL_CLASS_CODE_TM_NOTES = 570,
    /**
    * DL category TM valid to
    */
    DL_CLASS_CODE_TM_TO = 571,
    /**
    * DL category TR valid from
    */
    DL_CLASS_CODE_TR_FROM = 572,
    /**
    * DL category TR codes
    */
    DL_CLASS_CODE_TR_NOTES = 573,
    /**
    * DL category TR valid to
    */
    DL_CLASS_CODE_TR_TO = 574,
    /**
    * DL category TV valid from
    */
    DL_CLASS_CODE_TV_FROM = 575,
    /**
    * DL category TV codes
    */
    DL_CLASS_CODE_TV_NOTES = 576,
    /**
    * DL category TV valid to
    */
    DL_CLASS_CODE_TV_TO = 577,
    /**
    * DL category V valid from
    */
    DL_CLASS_CODE_V_FROM = 578,
    /**
    * DL category V codes
    */
    DL_CLASS_CODE_V_NOTES = 579,
    /**
    * DL category V valid to
    */
    DL_CLASS_CODE_V_TO = 580,
    /**
    * DL category W valid from
    */
    DL_CLASS_CODE_W_FROM = 581,
    /**
    * DL category W codes
    */
    DL_CLASS_CODE_W_NOTES = 582,
    /**
    * DL category W valid to
    */
    DL_CLASS_CODE_W_TO = 583,
    /**
    * URL
    */
    URL = 584,
    /**
    * Caliber
    */
    CALIBER = 585,
    /**
    * Model
    */
    MODEL = 586,
    /**
    * Make
    */
    MAKE = 587,
    /**
    * Number of cylinders
    */
    NUMBER_OF_CYLINDERS = 588,
    /**
    * Surname of husband after registration
    */
    SURNAME_OF_HUSBAND_AFTER_REGISTRATION = 589,
    /**
    * Surname of wife after registration
    */
    SURNAME_OF_WIFE_AFTER_REGISTRATION = 590,
    /**
    * Date of birth of wife
    */
    DATE_OF_BIRTH_OF_WIFE = 591,
    /**
    * Date of birth of husband
    */
    DATE_OF_BIRTH_OF_HUSBAND = 592,
    /**
    * Citizenship of first person
    */
    CITIZENSHIP_OF_FIRST_PERSON = 593,
    /**
    * Citizenship of second person
    */
    CITIZENSHIP_OF_SECOND_PERSON = 594,
    /**
    * CVV code
    */
    CVV = 595,
    /**
    * Date of insurance expiry
    */
    DATE_OF_INSURANCE_EXPIRY = 596,
    /**
    * Mortgage by
    */
    MORTGAGE_BY = 597,
    /**
    * Old document number
    */
    OLD_DOCUMENT_NUMBER = 598,
    /**
    * Old date of issue
    */
    OLD_DATE_OF_ISSUE = 599,
    /**
    * Old place of issue
    */
    OLD_PLACE_OF_ISSUE = 600,
    /**
    * DL category LR valid from
    */
    DL_CLASS_CODE_LR_FROM = 601,
    /**
    * DL category LR valid to
    */
    DL_CLASS_CODE_LR_TO = 602,
    /**
    * DL category LR codes
    */
    DL_CLASS_CODE_LR_NOTES = 603,
    /**
    * DL category MR valid from
    */
    DL_CLASS_CODE_MR_FROM = 604,
    /**
    * DL category MR valid to
    */
    DL_CLASS_CODE_MR_TO = 605,
    /**
    * DL category MR codes
    */
    DL_CLASS_CODE_MR_NOTES = 606,
    /**
    * DL category HR valid from
    */
    DL_CLASS_CODE_HR_FROM = 607,
    /**
    * DL category HR valid to
    */
    DL_CLASS_CODE_HR_TO = 608,
    /**
    * DL category HR codes
    */
    DL_CLASS_CODE_HR_NOTES = 609,
    /**
    * DL category HC valid from
    */
    DL_CLASS_CODE_HC_FROM = 610,
    /**
    * DL category HC valid to
    */
    DL_CLASS_CODE_HC_TO = 611,
    /**
    * DL category HC codes
    */
    DL_CLASS_CODE_HC_NOTES = 612,
    /**
    * DL category MC valid from
    */
    DL_CLASS_CODE_MC_FROM = 613,
    /**
    * DL category MC valid to
    */
    DL_CLASS_CODE_MC_TO = 614,
    /**
    * DL category MC codes
    */
    DL_CLASS_CODE_MC_NOTES = 615,
    /**
    * DL category RE valid from
    */
    DL_CLASS_CODE_RE_FROM = 616,
    /**
    * DL category RE valid to
    */
    DL_CLASS_CODE_RE_TO = 617,
    /**
    * DL category RE codes
    */
    DL_CLASS_CODE_RE_NOTES = 618,
    /**
    * DL category R valid from
    */
    DL_CLASS_CODE_R_FROM = 619,
    /**
    * DL category R valid to
    */
    DL_CLASS_CODE_R_TO = 620,
    /**
    * DL category R codes
    */
    DL_CLASS_CODE_R_NOTES = 621,
    /**
    * DL category CA valid from
    */
    DL_CLASS_CODE_CA_FROM = 622,
    /**
    * DL category CA valid to
    */
    DL_CLASS_CODE_CA_TO = 623,
    /**
    * DL category CA codes
    */
    DL_CLASS_CODE_CA_NOTES = 624,
    /**
    * Citizenship status
    */
    CITIZENSHIP_STATUS = 625,
    /**
    * Military service from
    */
    MILITARY_SERVICE_FROM = 626,
    /**
    * Military service to
    */
    MILITARY_SERVICE_TO = 627,
    /**
    * DL category NT valid from
    */
    DL_CLASS_CODE_NT_FROM = 628,
    /**
    * DL category NT valid to
    */
    DL_CLASS_CODE_NT_TO = 629,
    /**
    * DL category NT codes
    */
    DL_CLASS_CODE_NT_NOTES = 630,
    /**
    * DL category TN valid from
    */
    DL_CLASS_CODE_TN_FROM = 631,
    /**
    * DL category TN valid to
    */
    DL_CLASS_CODE_TN_TO = 632,
    /**
    * DL category TN codes
    */
    DL_CLASS_CODE_TN_NOTES = 633,
    /**
    * DL category D3 valid from
    */
    DL_CLASS_CODE_D3_FROM = 634,
    /**
    * DL category D3 valid to
    */
    DL_CLASS_CODE_D3_TO = 635,
    /**
    * DL category D3 codes
    */
    DL_CLASS_CODE_D3_NOTES = 636,
    /**
    * Alternative date of expiry
    */
    ALT_DATE_OF_EXPIRY = 637,
    /**
    * DL category CD valid from
    */
    DL_CLASS_CODE_CD_FROM = 638,
    /**
    * DL category CD valid to
    */
    DL_CLASS_CODE_CD_TO = 639,
    /**
    * DL category CD codes
    */
    DL_CLASS_CODE_CD_NOTES = 640,
    /**
    * Issuer identification number
    */
    ISSUER_IDENTIFICATION_NUMBER = 641,
    /**
    * Payment period from
    */
    PAYMENT_PERIOD_FROM = 642,
    /**
    * Payment period to
    */
    PAYMENT_PERIOD_TO = 643,
    /**
    * Vaccination certificate identifier
    */
    VACCINATION_CERTIFICATE_IDENTIFIER = 644,
    /**
    * First name
    */
    FIRST_NAME = 645,
    /**
    * Date of arrival
    */
    DATE_OF_ARRIVAL = 646,
    /**
    * Second name
    */
    SECOND_NAME = 647,
    /**
    * Third name
    */
    THIRD_NAME = 648,
    /**
    * Fourth name
    */
    FOURTH_NAME = 649,
    /**
    * Last name
    */
    LAST_NAME = 650,
    /**
    * DL category RM valid from
    */
    DL_CLASS_CODE_RM_FROM = 651,
    /**
    * DL category RM codes
    */
    DL_CLASS_CODE_RM_NOTES = 652,
    /**
    * DL category RM valid to
    */
    DL_CLASS_CODE_RM_TO = 653,
    /**
    * DL category PW valid from
    */
    DL_CLASS_CODE_PW_FROM = 654,
    /**
    * DL category PW codes
    */
    DL_CLASS_CODE_PW_NOTES = 655,
    /**
    * DL category PW valid to
    */
    DL_CLASS_CODE_PW_TO = 656,
    /**
    * DL category EB valid from
    */
    DL_CLASS_CODE_EB_FROM = 657,
    /**
    * DL category EB codes
    */
    DL_CLASS_CODE_EB_NOTES = 658,
    /**
    * DL category EB valid to
    */
    DL_CLASS_CODE_EB_TO = 659,
    /**
    * DL category EC valid from
    */
    DL_CLASS_CODE_EC_FROM = 660,
    /**
    * DL category EC codes
    */
    DL_CLASS_CODE_EC_NOTES = 661,
    /**
    * DL category EC valid to
    */
    DL_CLASS_CODE_EC_TO = 662,
    /**
    * DL category EC1 valid from
    */
    DL_CLASS_CODE_EC1_FROM = 663,
    /**
    * DL category EC1 codes
    */
    DL_CLASS_CODE_EC1_NOTES = 664,
    /**
    * DL category EC1 valid to
    */
    DL_CLASS_CODE_EC1_TO = 665,
    /**
    * Place of birth city
    */
    PLACE_OF_BIRTH_CITY = 666,
    /**
    * Year of birth
    */
    YEAR_OF_BIRTH = 667,
    /**
    * Year of expiry
    */
    YEAR_OF_EXPIRY = 668,
    /**
    * Grandfather&#39;s name (maternal)
    */
    GRANDFATHER_NAME_MATERNAL = 669,
    /**
    * First surname
    */
    FIRST_SURNAME = 670,
    /**
    * Month of birth
    */
    MONTH_OF_BIRTH = 671,
    /**
    * Floor number
    */
    ADDRESS_FLOOR_NUMBER = 672,
    /**
    * Entrance number
    */
    ADDRESS_ENTRANCE = 673,
    /**
    * Block number
    */
    ADDRESS_BLOCK_NUMBER = 674,
    /**
    * Street number
    */
    ADDRESS_STREET_NUMBER = 675,
    /**
    * Street type
    */
    ADDRESS_STREET_TYPE = 676,
    /**
    * City sector
    */
    ADDRESS_CITY_SECTOR = 677,
    /**
    * County type
    */
    ADDRESS_COUNTY_TYPE = 678,
    /**
    * City type
    */
    ADDRESS_CITY_TYPE = 679,
    /**
    * Building type
    */
    ADDRESS_BUILDING_TYPE = 680,
    /**
    * Date of Retirement
    */
    DATE_OF_RETIREMENT = 681,
    /**
    * Document Status
    */
    DOCUMENT_STATUS = 682
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
export enum VerificationResult {
    /**
    * Comparison result unknown
    */
    DISABLED = 0,
    /**
    * Verification passed
    */
    VERIFIED = 1,
    /**
    * Verification failed
    */
    NOT_VERIFIED = 2,
    /**
    * Positive comparison result
    */
    COMPARE_MATCH = 3,
    /**
    * Negative comparison result
    */
    COMPARE_NOT_MATCH = 4
}
/**
 *
 * @export
 * @interface VerifiedFieldMap
 */
export interface VerifiedFieldMap {
    /**
     *
     * @type {TextFieldType}
     * @memberof VerifiedFieldMap
     */
    wFieldType?: TextFieldType;
    /**
     *
     * @type {LCID}
     * @memberof VerifiedFieldMap
     */
    wLCID?: LCID;
    /**
     * Field data extracted from mrz(machine readable zone)
     * @type {string}
     * @memberof VerifiedFieldMap
     */
    Field_MRZ?: string;
    /**
     * Field data extracted from visual zone
     * @type {string}
     * @memberof VerifiedFieldMap
     */
    Field_Visual?: string;
    /**
     * Field data extracted from barcode
     * @type {string}
     * @memberof VerifiedFieldMap
     */
    Field_Barcode?: string;
    /**
     * Field data extracted from rfid chip
     * @type {string}
     * @memberof VerifiedFieldMap
     */
    Field_RFID?: string;
    /**
     * results comparison matrix. Elements of the matrix with indices 0, 1, 2, 3 take one of the values Disabled(0), Verified(1) or Not_Verified(2), elements with indices 4, 5, 6, 7, 8 are one of the values Disabled(0), Compare_Match(3) or Compare_Not_Match(4). Elements of the Matrix matrix have the following semantic meaning: - element with index 0 –– the result of verification of data from the MRZ; - 1 –– the result of verification of data from the RFID microcircuit; - 2 –– the result of verification of data from text areas of the document; - 3 –– the result of verification data from barcodes; - 4 - the result of comparing MRZ data and RFID microcircuits; - 5 - the result of comparing MRZ data and text areas of document filling; - 6 - the result of comparing MRZ data and bar codes; - 7 - the result of comparing the data of text areas of the document and the RFID chip; - 8 - the result of comparing the data of the text areas of the document and barcodes; - 9 - the result of comparing the data of the RFID chip and barcodes.
     * @type {Array<VerificationResult>}
     * @memberof VerifiedFieldMap
     */
    Matrix?: Array<VerificationResult>;
}
/**
 *
 * @export
 * @interface ListVerifiedFields
 */
export interface ListVerifiedFields {
    /**
     *
     * @type {Array<VerifiedFieldMap>}
     * @memberof ListVerifiedFields
     */
    pFieldMaps?: Array<VerifiedFieldMap>;
}
/**
 *
 * @export
 * @interface LexicalAnalysisResultAllOf
 */
export interface LexicalAnalysisResultAllOf {
    /**
     *
     * @type {ListVerifiedFields}
     * @memberof LexicalAnalysisResultAllOf
     */
    ListVerifiedFields?: ListVerifiedFields;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Contains license
 * @export
 * @interface LicenseResultAllOf
 */
export interface LicenseResultAllOf {
    /**
     * Base64 encoded data
     * @type {string}
     * @memberof LicenseResultAllOf
     */
    License: string;
}
/**
 *
 * @export
 * @interface DetailsOptical
 */
export interface DetailsOptical {
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsOptical
     */
    overallStatus: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsOptical
     */
    docType: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsOptical
     */
    expiry: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsOptical
     */
    imageQA: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsOptical
     */
    mrz: CheckResult;
    /**
     * Number of processed pages in the document
     * @type {number}
     * @memberof DetailsOptical
     */
    pagesCount: number;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsOptical
     */
    security: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsOptical
     */
    text: CheckResult;
}
/**
 *
 * @export
 * @interface DetailsRFID
 */
export interface DetailsRFID {
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsRFID
     */
    overallStatus: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsRFID
     */
    AA: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsRFID
     */
    BAC: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsRFID
     */
    CA: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsRFID
     */
    PA: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsRFID
     */
    PACE: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof DetailsRFID
     */
    TA: CheckResult;
}
/**
 *
 * @export
 * @interface Status
 */
export interface Status {
    /**
     *
     * @type {CheckResult}
     * @memberof Status
     */
    overallStatus: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof Status
     */
    optical: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof Status
     */
    portrait?: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof Status
     */
    rfid?: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof Status
     */
    stopList?: CheckResult;
    /**
     *
     * @type {DetailsRFID}
     * @memberof Status
     */
    detailsRFID?: DetailsRFID;
    /**
     *
     * @type {DetailsOptical}
     * @memberof Status
     */
    detailsOptical: DetailsOptical;
}
/**
 *
 * @export
 * @interface StatusResultAllOf
 */
export interface StatusResultAllOf {
    /**
     *
     * @type {Status}
     * @memberof StatusResultAllOf
     */
    Status: Status;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Describes an individual character recognition candidate
 * @export
 * @interface SymbolCandidate
 */
export interface SymbolCandidate {
    /**
     * Unicode symbol code
     * @type {number}
     * @memberof SymbolCandidate
     */
    SymbolCode: number;
    /**
     * character recognition probability (0–100,%)
     * @type {number}
     * @memberof SymbolCandidate
     */
    SymbolProbability: number;
}
/**
 * Describes a single character recognition results in the text field line
 * @export
 * @interface SymbolRecognitionResult
 */
export interface SymbolRecognitionResult {
    /**
     *
     * @type {RectangleCoordinates}
     * @memberof SymbolRecognitionResult
     */
    SymbolRect: RectangleCoordinates;
    /**
     * Array of candidate characters. Sorted in descending order of recognition probabilities (the first element has highest probability)
     * @type {Array<SymbolCandidate>}
     * @memberof SymbolRecognitionResult
     */
    ListOfCandidates: Array<SymbolCandidate>;
}
/**
 * Describes single row recognition results in multi-line text field of a document
 * @export
 * @interface StringRecognitionResult
 */
export interface StringRecognitionResult {
    /**
     * Array of recognition results for individual characters of a string
     * @type {Array<SymbolRecognitionResult>}
     * @memberof StringRecognitionResult
     */
    StringResult: Array<SymbolRecognitionResult>;
}
/**
 *
 * @export
 * @interface DocVisualExtendedField
 */
export interface DocVisualExtendedField {
    /**
     *
     * @type {TextFieldType}
     * @memberof DocVisualExtendedField
     */
    wFieldType: TextFieldType;
    /**
     * Field name. Only use to search values for fields with fieldType=50(other). In general, use wFieldType for lookup.
     * @type {string}
     * @memberof DocVisualExtendedField
     */
    FieldName: string;
    /**
     *
     * @type {LCID}
     * @memberof DocVisualExtendedField
     */
    wLCID: LCID;
    /**
     * Array of recognizing probabilities for a each line of text field. Only for Result.VISUAL_TEXT and Result.MRZ_TEXT results.
     * @type {Array<StringRecognitionResult>}
     * @memberof DocVisualExtendedField
     */
    StringsResult?: Array<StringRecognitionResult>;
    /**
     * Text field data in UTF8 format. Results of reading different lines of a multi-line field are separated by \'^\'
     * @type {string}
     * @memberof DocVisualExtendedField
     */
    Buf_Text?: string;
    /**
     *
     * @type {RectangleCoordinates}
     * @memberof DocVisualExtendedField
     */
    FieldRect?: RectangleCoordinates;
    /**
     * Origin data group information. Only for Result.RFID_TEXT results.
     * @type {number}
     * @memberof DocVisualExtendedField
     */
    RFID_OriginDG?: number;
    /**
     * Index of the text field record in origin data group. Only for Result.RFID_TEXT results.
     * @type {number}
     * @memberof DocVisualExtendedField
     */
    RFID_OriginTagEntry?: number;
}
/**
 * Container for extracted text fields. Fields are identified by type and language
 * @export
 * @interface DocVisualExtendedInfo
 */
export interface DocVisualExtendedInfo {
    /**
     *
     * @type {Array<DocVisualExtendedField>}
     * @memberof DocVisualExtendedInfo
     */
    pArrayFields: Array<DocVisualExtendedField>;
}
/**
 *
 * @export
 * @interface TextDataResultAllOf
 */
export interface TextDataResultAllOf {
    /**
     *
     * @type {DocVisualExtendedInfo}
     * @memberof TextDataResultAllOf
     */
    DocVisualExtendedInfo?: DocVisualExtendedInfo;
}
/**
 *
 * @export
 * @interface TextAvailableSource
 */
export interface TextAvailableSource {
    /**
     *
     * @type {Source}
     * @memberof TextAvailableSource
     */
    source: Source;
    /**
     *
     * @type {CheckResult}
     * @memberof TextAvailableSource
     */
    validityStatus: CheckResult;
    /**
     * Same as Result type, but used for safe parsing of not-described values. See Result type.
     * @type {number}
     * @memberof TextAvailableSource
     */
    containerType?: number;
}
/**
 *
 * @export
 * @interface CrossSourceValueComparison
 */
export interface CrossSourceValueComparison {
    /**
     *
     * @type {Source}
     * @memberof CrossSourceValueComparison
     */
    sourceLeft: Source;
    /**
     *
     * @type {Source}
     * @memberof CrossSourceValueComparison
     */
    sourceRight: Source;
    /**
     *
     * @type {CheckResult}
     * @memberof CrossSourceValueComparison
     */
    status: CheckResult;
}
/**
 *
 * @export
 * @interface SourceValidity
 */
export interface SourceValidity {
    /**
     *
     * @type {Source}
     * @memberof SourceValidity
     */
    source: Source;
    /**
     *
     * @type {CheckResult}
     * @memberof SourceValidity
     */
    status: CheckResult;
}
/**
 *
 * @export
 * @interface OriginalSymbol
 */
export interface OriginalSymbol {
    /**
     * Unicode symbol code
     * @type {number}
     * @memberof OriginalSymbol
     */
    code?: number;
    /**
     * Probability of correctness reading of a single character
     * @type {number}
     * @memberof OriginalSymbol
     */
    probability?: number;
    /**
     *
     * @type {RectangleCoordinates}
     * @memberof OriginalSymbol
     */
    rect?: RectangleCoordinates;
}
/**
 *
 * @export
 * @interface TextFieldValue
 */
export interface TextFieldValue {
    /**
     *
     * @type {Source}
     * @memberof TextFieldValue
     */
    source: Source;
    /**
     * Parsed/processed value. Date format converted for output, delimiters removed
     * @type {string}
     * @memberof TextFieldValue
     */
    value: string;
    /**
     * Original value as seen in the document
     * @type {string}
     * @memberof TextFieldValue
     */
    originalValue?: string;
    /**
     *
     * @type {Array<OriginalSymbol>}
     * @memberof TextFieldValue
     */
    originalSymbols?: Array<OriginalSymbol>;
    /**
     * Page index of the image from input list
     * @type {number}
     * @memberof TextFieldValue
     */
    pageIndex: number;
    /**
     * Min recognition probability. Combined minimum probability from single characters probabilities
     * @type {number}
     * @memberof TextFieldValue
     */
    probability?: number;
    /**
     *
     * @type {RectangleCoordinates}
     * @memberof TextFieldValue
     */
    fieldRect?: RectangleCoordinates;
    /**
     *
     * @type {RfidOrigin}
     * @memberof TextFieldValue
     */
    rfidOrigin?: RfidOrigin;
}
/**
 *
 * @export
 * @interface TextField
 */
export interface TextField {
    /**
     *
     * @type {TextFieldType}
     * @memberof TextField
     */
    fieldType: TextFieldType;
    /**
     * Field name. Only use to search values for fields with fieldType=50(other). In general, use fieldType for lookup.
     * @type {string}
     * @memberof TextField
     */
    fieldName: string;
    /**
     *
     * @type {LCID}
     * @memberof TextField
     */
    lcid?: LCID;
    /**
     *
     * @type {CheckResult}
     * @memberof TextField
     */
    status: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof TextField
     */
    validityStatus: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof TextField
     */
    comparisonStatus: CheckResult;
    /**
     * The most confidence value, selected from valueList
     * @type {string}
     * @memberof TextField
     */
    value: string;
    /**
     *
     * @type {Array<TextFieldValue>}
     * @memberof TextField
     */
    valueList: Array<TextFieldValue>;
    /**
     * Validity of all field values for given source. If there are two values on different pages for one field-source pair, then validity also will include logical match checking. If such values do not match, validity will return error.
     * @type {Array<SourceValidity>}
     * @memberof TextField
     */
    validityList: Array<SourceValidity>;
    /**
     *
     * @type {Array<CrossSourceValueComparison>}
     * @memberof TextField
     */
    comparisonList: Array<CrossSourceValueComparison>;
}
/**
 * Contains all document text fields data with validity and cross-source compare checks
 * @export
 * @interface Text
 */
export interface Text {
    /**
     *
     * @type {CheckResult}
     * @memberof Text
     */
    status: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof Text
     */
    validityStatus: CheckResult;
    /**
     *
     * @type {CheckResult}
     * @memberof Text
     */
    comparisonStatus: CheckResult;
    /**
     *
     * @type {Array<TextField>}
     * @memberof Text
     */
    fieldList: Array<TextField>;
    /**
     *
     * @type {Array<TextAvailableSource>}
     * @memberof Text
     */
    availableSourceList: Array<TextAvailableSource>;
}
/**
 *
 * @export
 * @interface TextResultAllOf
 */
export interface TextResultAllOf {
    /**
     *
     * @type {Text}
     * @memberof TextResultAllOf
     */
    Text: Text;
}
/**
 * @type TextResult
 * @export
 */
export type TextResult = ResultItem & TextResultAllOf;
/**
 * @type TextDataResult
 * Text fields extracted from one document source. Contains results of specific source for each provided page.
 * @export
 */
export type TextDataResult = ResultItem & TextDataResultAllOf;
/**
 * @type StatusResult
 * @export
 */
export type StatusResult = ResultItem & StatusResultAllOf;
/**
 * Common fields for all result objects
 * @export
 * @interface ResultItem
 */
export interface ResultItem {
    /**
     *
     * @type {number}
     * @memberof ResultItem
     */
    buf_length?: number;
    /**
     *
     * @type {number}
     * @memberof ResultItem
     */
    light?: number;
    /**
     *
     * @type {number}
     * @memberof ResultItem
     */
    list_idx?: number;
    /**
     *
     * @type {number}
     * @memberof ResultItem
     */
    page_idx?: number;
    /**
     * Same as Result type, but used for safe parsing of not-described values. See Result type.
     * @type {number}
     * @memberof ResultItem
     */
    result_type: number;
}
/**
 * @type LicenseResult
 * @export
 */
export type LicenseResult = LicenseResultAllOf & ResultItem;
/**
 * @type LexicalAnalysisResult
 * Lexical data analysis allows you to compare the results of reading the text data of the MRZ, the document filling area, barcodes and data from the memory of the RFID chip for an additional assessment of the authenticity of the document. Single result for all pages. Consider using Result.TEXT type for more simplicity.
 * @export
 */
export type LexicalAnalysisResult = LexicalAnalysisResultAllOf & ResultItem;
/**
 * @type ImagesResult
 * @export
 */
export type ImagesResult = ImagesResultAllOf & ResultItem;
/**
 * @type ImageQualityResult
 * @export
 */
export type ImageQualityResult = ImageQualityResultAllOf & ResultItem;
/**
 * @type GraphicsResult
 * Graphic fields extracted from one of the document sources. Returns separate results for each provided page.
 * @export
 */
export type GraphicsResult = GraphicsResultAllOf & ResultItem;
/**
 * @type EncryptedRCLResult
 * @export
 */
export type EncryptedRCLResult = EncryptedRCLResultAllOf & ResultItem;
/**
 * @type DocumentTypesCandidatesResult
 * @export
 */
export type DocumentTypesCandidatesResult = DocumentTypesCandidatesResultAllOf & ResultItem;
/**
 * @type DocumentPositionResult
 * Contains information about document position on the input image, its center, angle, etc
 * @export
 */
export type DocumentPositionResult = DocumentPositionResultAllOf & ResultItem;
/**
 * @type DocumentImageResult
 * @export
 */
export type DocumentImageResult = DocumentImageResultAllOf & ResultItem;
/**
 * @type DocBarCodeInfo
 * Raw data from BarCodes
 * @export
 */
export type DocBarCodeInfo = DocBarCodeInfoAllOf & ResultItem;
/**
 * @type ChosenDocumentTypeResult
 * Contains information about the type of document that was determined based on the analysis of the provided image
 * @export
 */
export type ChosenDocumentTypeResult = ChosenDocumentTypeResultAllOf & ResultItem;
/**
 * @type AuthenticityResult
 * @export
 */
export type AuthenticityResult = AuthenticityResultAllOf & ResultItem;
/**
 * Contains information about one document type candidate
 * @export
 * @interface ChosenDocumentType
 */
export interface ChosenDocumentType {
    /**
     * Document name
     * @type {string}
     * @memberof ChosenDocumentType
     */
    DocumentName?: string;
    /**
     * Unique document type template identifier (Regula\'s internal numeric code)
     * @type {number}
     * @memberof ChosenDocumentType
     */
    ID?: number;
    /**
     * A measure of the likelihood of correct recognition in the analysis of this type of document
     * @type {number}
     * @memberof ChosenDocumentType
     */
    P?: number;
    /**
     *
     * @type {RfidLocation}
     * @memberof ChosenDocumentType
     */
    RFID_Presence?: RfidLocation;
    /**
     *
     * @type {FDSIDList}
     * @memberof ChosenDocumentType
     */
    FDSIDList?: FDSIDList;
    /**
     * Combination of lighting scheme identifiers (Light enum) required to conduct OCR for this type of document
     * @type {number}
     * @memberof ChosenDocumentType
     */
    NecessaryLights?: number;
    /**
     * Set of authentication options provided for this type of document (combination of Authenticity enum)
     * @type {number}
     * @memberof ChosenDocumentType
     */
    CheckAuthenticity?: number;
    /**
     * The required exposure value of the camera when receiving images of a document of this type for a UV lighting scheme
     * @type {number}
     * @memberof ChosenDocumentType
     */
    UVExp?: number;
    /**
     * Combination of lighting scheme identifiers (combination of Light enum) needed to perform all authenticity checks specified in CheckAuthenticity
     * @type {number}
     * @memberof ChosenDocumentType
     */
    AuthenticityNecessaryLights?: number;
}
/**
 * List with various objects, containing processing results
 * @export
 * @interface ContainerList
 */
export interface ContainerList {
    /**
     * Length of list (Count for items)
     * @type {number}
     * @memberof ContainerList
     */
    Count?: number;
    /**
     *
     * @type {Array<StatusResult | TextResult | DocumentImageResult | ImagesResult | ChosenDocumentTypeResult | DocumentTypesCandidatesResult | TextDataResult | GraphicsResult | LexicalAnalysisResult | AuthenticityResult | ImageQualityResult | DocumentPositionResult | DocBarCodeInfo | LicenseResult | EncryptedRCLResult>}
     * @memberof ContainerList
     */
    List: Array<StatusResult | TextResult | DocumentImageResult | ImagesResult | ChosenDocumentTypeResult | DocumentTypesCandidatesResult | TextDataResult | GraphicsResult | LexicalAnalysisResult | AuthenticityResult | ImageQualityResult | DocumentPositionResult | DocBarCodeInfo | LicenseResult | EncryptedRCLResult>;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DeviceInfo
 */
export interface DeviceInfo {
    /**
     *
     * @type {string}
     * @memberof DeviceInfo
     */
    app_name?: string;
    /**
     *
     * @type {string}
     * @memberof DeviceInfo
     */
    version?: string;
    /**
     *
     * @type {string}
     * @memberof DeviceInfo
     */
    license_id?: string;
    /**
     *
     * @type {string}
     * @memberof DeviceInfo
     */
    license_serial?: string;
    /**
     *
     * @type {string}
     * @memberof DeviceInfo
     */
    valid_until?: string;
    /**
     *
     * @type {string}
     * @memberof DeviceInfo
     */
    server_time?: string;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface DocumentImage
 */
export interface DocumentImage {
    /**
     * Base64 encoded image
     * @type {string}
     * @memberof DocumentImage
     */
    image: string;
}
/**
 *
 * @export
 * @interface DocumentTypesCandidates
 */
export interface DocumentTypesCandidates {
    /**
     *
     * @type {DocumentTypeRecognitionResult}
     * @memberof DocumentTypesCandidates
     */
    RecResult?: DocumentTypeRecognitionResult;
    /**
     *
     * @type {Array<OneCandidate>}
     * @memberof DocumentTypesCandidates
     */
    Candidates?: Array<OneCandidate>;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * A search filter that can be applied if the \"match+search\" mode is enabled. May include limit, threshold, group_ids. If the group_ids are specified, the search is performed only in these groups. Find more information in the <a href=\"https://dev.regulaforensics.com/FaceSDK-web-openapi/#tag/search/operation/search\" target=\"_blank\">OpenAPI documentation</a>.
 * @export
 * @interface FaceApiSearch
 */
export interface FaceApiSearch {
    /**
     * The maximum number of results to be returned.
     * @type {number}
     * @memberof FaceApiSearch
     */
    limit?: number;
    /**
     * The similarity threshold.
     * @type {number}
     * @memberof FaceApiSearch
     */
    threshold?: number;
    /**
     *  The groups where to conduct the search.
     * @type {Array<number>}
     * @memberof FaceApiSearch
     */
    group_ids?: Array<number>;
}
/**
 *
 * @export
 * @interface FaceApi
 */
export interface FaceApi {
    /**
     * The URL of the Regula Face Web service to be used.
     * @type {string}
     * @memberof FaceApi
     */
    url?: string;
    /**
     * The processing mode: \"match\" or \"match+search\".
     * @type {string}
     * @memberof FaceApi
     */
    mode?: string;
    /**
     *
     * @type {FaceApiSearch}
     * @memberof FaceApi
     */
    search?: FaceApiSearch;
    /**
     * The similarity threshold, 0-100. Above 75 means that the faces\' similarity is verified, below 75 is not.
     * @type {number}
     * @memberof FaceApi
     */
    threshold?: number;
    /**
     * The Regula Face Web service requests timeout, ms.
     * @type {number}
     * @memberof FaceApi
     */
    serviceTimeout?: number;
    /**
     * Proxy to use, should be set according to the <a href=\"https://curl.se/libcurl/c/CURLOPT_PROXY.html\" target=\"_blank\">cURL standard</a>.
     * @type {string}
     * @memberof FaceApi
     */
    proxy?: string;
    /**
     * Username and password to use for proxy authentication, should be set according to the <a href=\"https://curl.se/libcurl/c/CURLOPT_PROXYUSERPWD.html\" target=\"_blank\">cURL standard</a>.
     * @type {string}
     * @memberof FaceApi
     */
    proxy_userpwd?: string;
    /**
     * Proxy protocol type, should be set according to the <a href=\"https://curl.se/libcurl/c/CURLOPT_PROXYTYPE.html\" target=\"_blank\">cURL standard</a>.
     * @type {number}
     * @memberof FaceApi
     */
    proxy_type?: number;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ImageQA
 */
export interface ImageQA {
    /**
     * Set the threshold for an actual document brightness below which the check fails
     * @type {number}
     * @memberof ImageQA
     */
    brightnessThreshold?: number;
    /**
     * This parameter sets threshold for Image QA check of the presented document physical dpi. If actual document dpi is below this threshold, check will fail.
     * @type {number}
     * @memberof ImageQA
     */
    dpiThreshold?: number;
    /**
     * This parameter sets threshold for Image QA check of the presented document perspective angle in degrees. If actual document perspective angle is above this threshold, check will fail.
     * @type {number}
     * @memberof ImageQA
     */
    angleThreshold?: number;
    /**
     * This option enables focus check while performing image quality validation.
     * @type {boolean}
     * @memberof ImageQA
     */
    focusCheck?: boolean;
    /**
     * This option enables glares check while performing image quality validation.
     * @type {boolean}
     * @memberof ImageQA
     */
    glaresCheck?: boolean;
    /**
     * This option enables colorness check while performing image quality validation.
     * @type {boolean}
     * @memberof ImageQA
     */
    colornessCheck?: boolean;
    /**
     * This option enables screen capture (moire patterns) check while performing image quality validation.
     * @type {boolean}
     * @memberof ImageQA
     */
    moireCheck?: boolean;
    /**
     * This parameter specifies the necessary margin. Default 0.
     * @type {number}
     * @memberof ImageQA
     */
    documentPositionIndent?: number;
}
/**
 *
 * @export
 * @interface ImageTransactionData
 */
export interface ImageTransactionData {
    /**
     *
     * @type {ImagesFieldValue}
     * @memberof ImageTransactionData
     */
    image?: ImagesFieldValue;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Video
 * @export
 * @interface InDataVideo
 */
export interface InDataVideo {
    /**
     * A free-form object containing video\'s extended attributes.
     * @type {{ [key: string]: object; }}
     * @memberof InDataVideo
     */
    metadata?: {
        [key: string]: object;
    };
    /**
     * Video url
     * @type {string}
     * @memberof InDataVideo
     */
    url?: string;
}
/**
 *
 * @export
 * @interface TransactionImagesFieldValue
 */
export interface TransactionImagesFieldValue {
    /**
     *
     * @type {GraphicFieldType}
     * @memberof TransactionImagesFieldValue
     */
    fieldType?: GraphicFieldType;
    /**
     *
     * @type {Light}
     * @memberof TransactionImagesFieldValue
     */
    light?: Light;
    /**
     *
     * @type {number}
     * @memberof TransactionImagesFieldValue
     */
    listIdx?: number;
    /**
     * Page index of the image from input list
     * @type {number}
     * @memberof TransactionImagesFieldValue
     */
    pageIdx?: number;
    /**
     * Image url
     * @type {string}
     * @memberof TransactionImagesFieldValue
     */
    url?: string;
}
/**
 *
 * @export
 * @interface InData
 */
export interface InData {
    /**
     *
     * @type {InDataVideo}
     * @memberof InData
     */
    video?: InDataVideo;
    /**
     *
     * @type {Array<TransactionImagesFieldValue>}
     * @memberof InData
     */
    images?: Array<TransactionImagesFieldValue>;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface InlineResponse200
 */
export interface InlineResponse200 {
    /**
     *
     * @type {string}
     * @memberof InlineResponse200
     */
    tag?: string;
    /**
     *
     * @type {string}
     * @memberof InlineResponse200
     */
    transactionId?: string;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
export enum ProcessingStatus {
    /**
    * Processing was not finished
    */
    NOT_FINISHED = 0,
    /**
    * Processing finished
    */
    FINISHED = 1,
    /**
    * Processing finished by timeout
    */
    TIMEOUT = 2
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface TransactionInfo
 */
export interface TransactionInfo {
    /**
     *
     * @type {string}
     * @memberof TransactionInfo
     */
    ComputerName?: string;
    /**
     *
     * @type {string}
     * @memberof TransactionInfo
     */
    DateTime?: string;
    /**
     *
     * @type {string}
     * @memberof TransactionInfo
     */
    TransactionID?: string;
    /**
     *
     * @type {string}
     * @memberof TransactionInfo
     */
    UserName?: string;
}
/**
 *
 * @export
 * @interface InlineResponse2001
 */
export interface InlineResponse2001 {
    /**
     *
     * @type {RfidLocation}
     * @memberof InlineResponse2001
     */
    ChipPage?: RfidLocation;
    /**
     *
     * @type {ProcessingStatus}
     * @memberof InlineResponse2001
     */
    ProcessingFinished?: ProcessingStatus;
    /**
     *
     * @type {ContainerList}
     * @memberof InlineResponse2001
     */
    ContainerList?: ContainerList;
    /**
     *
     * @type {TransactionInfo}
     * @memberof InlineResponse2001
     */
    TransactionInfo?: TransactionInfo;
    /**
     * Base64 encoded transaction processing log
     * @type {string}
     * @memberof InlineResponse2001
     */
    log?: string;
    /**
     * Free-form object provided in request. See passBackObject property of ProcessRequest.
     * @type {{ [key: string]: object; }}
     * @memberof InlineResponse2001
     */
    passBackObject?: {
        [key: string]: object;
    };
    /**
     *
     * @type {number}
     * @memberof InlineResponse2001
     */
    morePagesAvailable?: number;
    /**
     * Time the document processing has taken, ms.
     * @type {number}
     * @memberof InlineResponse2001
     */
    elapsedTime?: number;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
export enum LogLevel {
    /**
    * Fatal error
    */
    FATAL_ERROR = "FatalError",
    /**
    * Error
    */
    ERROR = "Error",
    /**
    * Warning
    */
    WARNING = "Warning",
    /**
    * Info
    */
    INFO = "Info",
    /**
    * Debug
    */
    DEBUG = "Debug"
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
export enum MRZFormat {
    /**
    * 1x30
    */
    IDL = "1x30",
    /**
    * 3x30
    */
    ID1 = "3x30",
    /**
    * 2x36
    */
    ID2 = "2x36",
    /**
    * 2x44
    */
    ID3 = "2x44",
    /**
    * 1x6
    */
    CAN = "1x6",
    /**
    * 2x30
    */
    ID1_2_30 = "2x30"
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
export enum MeasureSystem {
    /**
    * Metric system of measurement, where things are measured in meters and grams
    */
    METRIC = 0,
    /**
    * Imperial System of Measurement, where things are measured in feet, inches and pounds
    */
    IMPERIAL = 1
}
/**
 *
 * @export
 * @interface OutData
 */
export interface OutData {
    /**
     * Response url
     * @type {string}
     * @memberof OutData
     */
    url?: string;
    /**
     *
     * @type {Array<TransactionImagesFieldValue>}
     * @memberof OutData
     */
    images?: Array<TransactionImagesFieldValue>;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * The enumeration contains possible values of notification codes returned during the RFID chip processing.
 * @export
 * @enum {string}
 */
export enum ParsingNotificationCodes {
    /**
    * ASN certificate: Incorrect version
    */
    ntfLDS_ASN_Certificate_IncorrectVersion = -1879048191,
    /**
    * ASN certificate: Non-matching signature algorithm
    */
    ntfLDS_ASN_Certificate_NonMatchingSignatureAlgorithm = -1879048190,
    /**
    * ASN certificate: Incorrect time coding
    */
    ntfLDS_ASN_Certificate_IncorrectTimeCoding = -1879048189,
    /**
    * ASN certificate: Incorrect use of generalized time
    */
    ntfLDS_ASN_Certificate_IncorrectUseOfGeneralizedTime = -1879048188,
    /**
    * ASN certificate: Empty issuer
    */
    ntfLDS_ASN_Certificate_EmptyIssuer = -1879048187,
    /**
    * ASN certificate: Empty subject
    */
    ntfLDS_ASN_Certificate_EmptySubject = -1879048186,
    /**
    * ASN certificate: Unsupported critical extension
    */
    ntfLDS_ASN_Certificate_UnsupportedCriticalExtension = -1879048184,
    /**
    * ASN certificate: Forced default CSCA role
    */
    ntfLDS_ASN_Certificate_ForcedDefaultCSCARole = -1879048178,
    /**
    * ASN certificate: Forced Default DS role
    */
    ntfLDS_ASN_Certificate_ForcedDefaultDSRole = -1879048177,
    /**
    * ASN certificate: Incorrect issuer subject DS
    */
    ntfLDS_ASN_Certificate_IncorrectIssuerSubjectDS = -1879048176,
    /**
    * ASN certificate: Duplicating extensions
    */
    ntfLDS_ASN_Certificate_DuplicatingExtensions = -1879048169,
    /**
    * ICAO certificate: Version missed
    */
    ntfLDS_ICAO_Certificate_Version_Missed = -1879047680,
    /**
    * ICAO certificate: Version incorrect
    */
    ntfLDS_ICAO_Certificate_Version_Incorrect = -1879047679,
    /**
    * ICAO certificate: Issuer country missed
    */
    ntfLDS_ICAO_Certificate_Issuer_Country_Missed = -1879047678,
    /**
    * ICAO certificate: Issuer common name missed
    */
    ntfLDS_ICAO_Certificate_Issuer_CommonName_Missed = -1879047677,
    /**
    * ICAO certificate: Issuer country non-compliant
    */
    ntfLDS_ICAO_Certificate_Issuer_CountryNonCompliant = -1879047676,
    /**
    * ICAO certificate: Subject country missed
    */
    ntfLDS_ICAO_Certificate_Subject_Country_Missed = -1879047675,
    /**
    * ICAO certificate: Subject common name missed
    */
    ntfLDS_ICAO_Certificate_Subject_CommonName_Missed = -1879047674,
    /**
    * ICAO certificate: Subject country non-compliant
    */
    ntfLDS_ICAO_Certificate_Subject_CountryNonCompliant = -1879047673,
    /**
    * ICAO certificate: Using non-compliant data
    */
    ntfLDS_ICAO_Certificate_UsingNonCompliantData = -1879047672,
    /**
    * ICAO certificate: Unsupported signature algorithm
    */
    ntfLDS_ICAO_Certificate_UnsupportedSignatureAlgorithm = -1879047671,
    /**
    * ICAO certificate: Unsupported public key algorithm
    */
    ntfLDS_ICAO_Certificate_UnsupportedPublicKeyAlgorithm = -1879047670,
    /**
    * ICAO certificate: Missed extensions
    */
    ntfLDS_ICAO_Certificate_MissedExtensions = -1879047669,
    /**
    * ICAO certificate: Validity
    */
    ntfLDS_ICAO_Certificate_Validity = -1879047668,
    /**
    * ICAO certificate extension: Using non-compliant data
    */
    ntfLDS_ICAO_Certificate_Ext_UsingNonCompliantData = -1879047667,
    /**
    * ICAO certificate extension: Key usage missed
    */
    ntfLDS_ICAO_Certificate_Ext_KeyUsage_Missed = -1879047666,
    /**
    * ICAO certificate extension: Key usage not critical
    */
    ntfLDS_ICAO_Certificate_Ext_KeyUsage_NotCritical = -1879047665,
    /**
    * ICAO certificate extension: Key usage incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_KeyUsage_IncorrectData = -1879047664,
    /**
    * ICAO certificate extension: Basic constraints missed
    */
    ntfLDS_ICAO_Certificate_Ext_BasicC_Missed = -1879047663,
    /**
    * ICAO certificate extension: Basic constraints incorrect usage 1
    */
    ntfLDS_ICAO_Certificate_Ext_BasicC_IncorrectUsage1 = -1879047662,
    /**
    * ICAO certificate extension: Basic constraints incorrect usage 2
    */
    ntfLDS_ICAO_Certificate_Ext_BasicC_IncorrectUsage2 = -1879047661,
    /**
    * ICAO certificate extension: Basic constraints not critical
    */
    ntfLDS_ICAO_Certificate_Ext_BasicC_NotCritical = -1879047660,
    /**
    * ICAO certificate extension: Basic constraints incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_BasicC_IncorrectData = -1879047659,
    /**
    * ICAO certificate extension: Basic constraints path LenC missed
    */
    ntfLDS_ICAO_Certificate_Ext_BasicC_PathLenC_Missed = -1879047658,
    /**
    * ICAO certificate extension: Basic constraints path LenC incorrect
    */
    ntfLDS_ICAO_Certificate_Ext_BasicC_PathLenC_Incorrect = -1879047657,
    /**
    * ICAO certificate extension: Ext key usage not critical
    */
    ntfLDS_ICAO_Certificate_Ext_ExtKeyUsage_NotCritical = -1879047656,
    /**
    * ICAO certificate extension: Ext key usage incorrect usage
    */
    ntfLDS_ICAO_Certificate_Ext_ExtKeyUsage_IncorrectUsage = -1879047655,
    /**
    * ICAO certificate extension: Ext key usage incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_ExtKeyUsage_IncorrectData = -1879047654,
    /**
    * ICAO certificate extension Auth key: ID missed
    */
    ntfLDS_ICAO_Certificate_Ext_AuthKeyID_Missed = -1879047653,
    /**
    * ICAO certificate extension Auth key: Incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_AuthKeyID_IncorrectData = -1879047652,
    /**
    * ICAO certificate extension Auth key: Key ID missed
    */
    ntfLDS_ICAO_Certificate_Ext_AuthKeyID_KeyID_Missed = -1879047651,
    /**
    * ICAO certificate extension: Subject key ID missed
    */
    ntfLDS_ICAO_Certificate_Ext_SubjectKeyID_Missed = -1879047650,
    /**
    * ICAO certificate extension: Subject key ID incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_SubjectKeyID_IncorrectData = -1879047649,
    /**
    * ICAO certificate extension: Private key UP missed
    */
    ntfLDS_ICAO_Certificate_Ext_PrivateKeyUP_Missed = -1879047648,
    /**
    * ICAO certificate extension: Private key UP incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_PrivateKeyUP_IncorrectData = -1879047647,
    /**
    * ICAO certificate extension: Private key UP empty
    */
    ntfLDS_ICAO_Certificate_Ext_PrivateKeyUP_Empty = -1879047646,
    /**
    * ICAO certificate extension: Subject alt name missed
    */
    ntfLDS_ICAO_Certificate_Ext_SubjectAltName_Missed = -1879047645,
    /**
    * ICAO certificate extension: Subject alt name incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_SubjectAltName_IncorrectData = -1879047644,
    /**
    * ICAO certificate extension: Subject alt name empty
    */
    ntfLDS_ICAO_Certificate_Ext_SubjectAltName_Empty = -1879047643,
    /**
    * ICAO certificate extension: Subject alt name non-compliant
    */
    ntfLDS_ICAO_Certificate_Ext_SubjectAltName_NonCompliant = -1879047642,
    /**
    * ICAO certificate extension: Subject alt name critical
    */
    ntfLDS_ICAO_Certificate_Ext_SubjectAltName_Critical = -1879047640,
    /**
    * ICAO certificate extension: Subject alt name DN empty
    */
    ntfLDS_ICAO_Certificate_Ext_SubjectAltName_DN_Empty = -1879047639,
    /**
    * ICAO certificate extension: Subject alt name DN incorrect
    */
    ntfLDS_ICAO_Certificate_Ext_SubjectAltName_DN_Incorrect = -1879047638,
    /**
    * ICAO certificate extension: Subject alt name DN non-compliant
    */
    ntfLDS_ICAO_Certificate_Ext_SubjectAltName_DN_NonCompliant = -1879047637,
    /**
    * ICAO certificate extension: Issuer alt name missed
    */
    ntfLDS_ICAO_Certificate_Ext_IssuerAltName_Missed = -1879047636,
    /**
    * ICAO certificate extension: Issuer alt name incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_IssuerAltName_IncorrectData = -1879047635,
    /**
    * ICAO certificate extension: Issuer alt name empty
    */
    ntfLDS_ICAO_Certificate_Ext_IssuerAltName_Empty = -1879047634,
    /**
    * ICAO certificate extension: Issuer alt name non-compliant
    */
    ntfLDS_ICAO_Certificate_Ext_IssuerAltName_NonCompliant = -1879047633,
    /**
    * ICAO certificate extension: Issuer alt name critical
    */
    ntfLDS_ICAO_Certificate_Ext_IssuerAltName_Critical = -1879047631,
    /**
    * ICAO certificate extension: Issuer alt name DN empty
    */
    ntfLDS_ICAO_Certificate_Ext_IssuerAltName_DN_Empty = -1879047630,
    /**
    * ICAO certificate extension: Issuer alt name DN incorrect
    */
    ntfLDS_ICAO_Certificate_Ext_IssuerAltName_DN_Incorrect = -1879047629,
    /**
    * ICAO certificate extension: Issuer alt name DN non-compliant
    */
    ntfLDS_ICAO_Certificate_Ext_IssuerAltName_DN_NonCompliant = -1879047628,
    /**
    * ICAO certificate extension Doc type list: Missed
    */
    ntfLDS_ICAO_Certificate_Ext_DocTypeList_Missed = -1879047627,
    /**
    * ICAO certificate extension Doc type list: Incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_DocTypeList_IncorrectData = -1879047626,
    /**
    * ICAO certificate extension Doc type list: Version
    */
    ntfLDS_ICAO_Certificate_Ext_DocTypeList_Version = -1879047625,
    /**
    * ICAO certificate extension Doc type list: Doc types
    */
    ntfLDS_ICAO_Certificate_Ext_DocTypeList_DocTypes = -1879047624,
    /**
    * ICAO certificate extension Doc type list: Doc types empty
    */
    ntfLDS_ICAO_Certificate_Ext_DocTypeList_DocTypes_Empty = -1879047623,
    /**
    * ICAO certificate extension: Dert policies incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_CertPolicies_IncorrectData = -1879047622,
    /**
    * ICAO certificate extension: Cert policies empty
    */
    ntfLDS_ICAO_Certificate_Ext_CertPolicies_Empty = -1879047621,
    /**
    * ICAO certificate extension: Cert policies policy ID missed
    */
    ntfLDS_ICAO_Certificate_Ext_CertPolicies_PolicyID_Missed = -1879047620,
    /**
    * ICAO certificate extension: CRL dist point missed
    */
    ntfLDS_ICAO_Certificate_Ext_CRLDistPoint_Missed = -1879047619,
    /**
    * ICAO certificate extension: CRL dist point incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_CRLDistPoint_IncorrectData = -1879047618,
    /**
    * ICAO certificate extension: CRL dist point empty
    */
    ntfLDS_ICAO_Certificate_Ext_CRLDistPoint_Empty = -1879047617,
    /**
    * ICAO certificate extension: CRL dist point point missed
    */
    ntfLDS_ICAO_Certificate_Ext_CRLDistPoint_PointMissed = -1879047616,
    /**
    * ICAO certificate: SN non-compliant
    */
    ntfLDS_ICAO_Certificate_SN_NonCompliant = -1879047615,
    /**
    * ICAO certificate: Issuer SN non-compliant
    */
    ntfLDS_ICAO_Certificate_Issuer_SN_NonCompliant = -1879047614,
    /**
    * ICAO certificate: Subject SN non-compliant
    */
    ntfLDS_ICAO_Certificate_Subject_SN_NonCompliant = -1879047613,
    /**
    * ICAO certificate: Issuer attribute non-compliant
    */
    ntfLDS_ICAO_Certificate_Issuer_AttributeNonCompliant = -1879047612,
    /**
    * ICAO certificate: Subject attribute non-compliant
    */
    ntfLDS_ICAO_Certificate_Subject_AttributeNonCompliant = -1879047611,
    /**
    * ICAO certificate: Issuer subject country non-matching
    */
    ntfLDS_ICAO_Certificate_IssuerSubject_Country_NonMatching = -1879047610,
    /**
    * ICAO certificate extension: CSCA alt names non-matching
    */
    ntfLDS_ICAO_Certificate_Ext_CSCA_AltNames_NonMatching = -1879047609,
    /**
    * ICAO certificate extension: Name change incorrect data
    */
    ntfLDS_ICAO_Certificate_Ext_NameChange_IncorrectData = -1879047608,
    /**
    * ICAO certificate extension: Name change non-compliant
    */
    ntfLDS_ICAO_Certificate_Ext_NameChange_NonCompliant = -1879047607,
    /**
    * ICAO certificate extension: Name change critical
    */
    ntfLDS_ICAO_Certificate_Ext_NameChange_Critical = -1879047606,
    /**
    * ICAO certificate extension Doc type list: non-compliant
    */
    ntfLDS_ICAO_Certificate_Ext_DocTypeList_NonCompliant = -1879047605,
    /**
    * ICAO certificate extension Doc type list: Critical
    */
    ntfLDS_ICAO_Certificate_Ext_DocTypeList_Critical = -1879047604,
    /**
    * ICAO certificate extension: Optional critical
    */
    ntfLDS_ICAO_Certificate_Ext_Optional_Critical = -1879047603,
    /**
    * ICAO certificate: Subject non-compliant
    */
    ntfLDS_ICAO_Certificate_Subject_NonCompliant = -1879047602,
    /**
    * ICAO certificate: Subject common name non-compliant
    */
    ntfLDS_ICAO_Certificate_Subject_CommonNameNonCompliant = -1879047601,
    /**
    * ICAO COM: LDS version incorrect
    */
    ntfLDS_ICAO_COM_LDS_Version_Incorrect = -1879048160,
    /**
    * ICAO COM: LDS version missing
    */
    ntfLDS_ICAO_COM_LDS_Version_Missing = -1879048159,
    /**
    * ICAO COM: Unicode version incorrect
    */
    ntfLDS_ICAO_COM_Unicode_Version_Incorrect = -1879048158,
    /**
    * ICAO COM: Unicode version missing
    */
    ntfLDS_ICAO_COM_Unicode_Version_Missing = -1879048157,
    /**
    * ICAO COM: DGPM incorrect
    */
    ntfLDS_ICAO_COM_DGPM_Incorrect = -1879048156,
    /**
    * ICAO COM: DGPM missing
    */
    ntfLDS_ICAO_COM_DGPM_Missing = -1879048155,
    /**
    * ICAO COM: DGPM unexpected
    */
    ntfLDS_ICAO_COM_DGPM_Unexpected = -1879048154,
    /**
    * ICAO application: LDS version unsupported
    */
    ntfLDS_ICAO_Application_LDSVersion_Unsupported = -1879048144,
    /**
    * ICAO application: Unicode version unsupported
    */
    ntfLDS_ICAO_Application_UnicodeVersion_Unsupported = -1879048143,
    /**
    * ICAO application: LDS version inconsistent
    */
    ntfLDS_ICAO_Application_LDSVersion_Inconsistent = -1879048142,
    /**
    * ICAO application: Unicode version inconsistent
    */
    ntfLDS_ICAO_Application_UnicodeVersion_Inconsistent = -1879048141,
    /**
    * ASN signed data: OID incorrect
    */
    ntfLDS_ASN_SignedData_OID_Incorrect = -1879047936,
    /**
    * ASN signed data: Version incorrect
    */
    ntfLDS_ASN_SignedData_Version_Incorrect = -1879047776,
    /**
    * ASN signed data: Content OID incorrect
    */
    ntfLDS_ASN_SignedData_ContentOID_Incorrect = -1879047775,
    /**
    * ICAO signed data: Version incorrect
    */
    ntfLDS_ICAO_SignedData_Version_Incorrect = -1879047935,
    /**
    * ICAO signed data: Digest algorithms empty
    */
    ntfLDS_ICAO_SignedData_DigestAlgorithms_Empty = -1879047934,
    /**
    * ICAO signed data: Digest algorithms unsupported
    */
    ntfLDS_ICAO_SignedData_DigestAlgorithms_Unsupported = -1879047933,
    /**
    * ICAO signed data: Signer infos multiple entries
    */
    ntfLDS_ICAO_SignedData_SignerInfos_MultipleEntries = -1879047927,
    /**
    * ICAO signed data: Certificates missed
    */
    ntfLDS_ICAO_SignedData_Certificates_Missed = -1879047760,
    /**
    * ICAO signed data: Certificates empty
    */
    ntfLDS_ICAO_SignedData_Certificates_Empty = -1879047759,
    /**
    * ICAO signed data: CRLs incorrect usage
    */
    ntfLDS_ICAO_SignedData_CRLs_IncorrectUsage = -1879047758,
    /**
    * ICAO LDS object: Incorrect content OID
    */
    ntfLDS_ICAO_LDSObject_IncorrectContentOID = -1879047932,
    /**
    * ICAO LDS object: DG number incorrect
    */
    ntfLDS_ICAO_LDSObject_DGNumber_Incorrect = -1879047931,
    /**
    * ICAO LDS object: DG hash missing
    */
    ntfLDS_ICAO_LDSObject_DGHash_Missing = -1879047930,
    /**
    * ICAO LDS object: DG hash extra
    */
    ntfLDS_ICAO_LDSObject_DGHash_Extra = -1879047929,
    /**
    * ICAO LDS object: Version incorrect
    */
    ntfLDS_ICAO_LDSObject_Version_Incorrect = -1879047928,
    /**
    * ICAO master list: Version incorrect
    */
    ntfLDS_ICAO_MasterList_Version_Incorrect = -1879047744,
    /**
    * ICAO Deviation list: Version incorrect
    */
    ntfLDS_ICAO_DeviationList_Version_Incorrect = -1879047736,
    /**
    * BSI: Defect  list version incorrect
    */
    ntfLDS_BSI_DefectList_Version_Incorrect = -1879047728,
    /**
    * BSI: Black list version incorrect
    */
    ntfLDS_BSI_BlackList_Version_Incorrect = -1879047720,
    /**
    * ASN signer info: Version incorrect
    */
    ntfLDS_ASN_SignerInfo_Version_Incorrect = -1879047926,
    /**
    * ASN signer info: SID incorrect choice
    */
    ntfLDS_ASN_SignerInfo_SID_IncorrectChoice = -1879047925,
    /**
    * ASN signer info: SID digest algorithm not listed
    */
    ntfLDS_ASN_SignerInfo_SID_DigestAlgorithmNotListed = -1879047924,
    /**
    * ASN signer info: Message digest attr missing
    */
    ntfLDS_ASN_SignerInfo_MessageDigestAttr_Missing = -1879047923,
    /**
    * ASN signer info: Message digest attr data
    */
    ntfLDS_ASN_SignerInfo_MessageDigestAttr_Data = -1879047922,
    /**
    * ASN signer info: Message digest attr value
    */
    ntfLDS_ASN_SignerInfo_MessageDigestAttr_Value = -1879047921,
    /**
    * ASN signer info: Content type attr missing
    */
    ntfLDS_ASN_SignerInfo_ContentTypeAttr_Missing = -1879047920,
    /**
    * ASN signer info: Content type attr data
    */
    ntfLDS_ASN_SignerInfo_ContentTypeAttr_Data = -1879047919,
    /**
    * ASN signer info: Content type attr value
    */
    ntfLDS_ASN_SignerInfo_ContentTypeAttr_Value = -1879047918,
    /**
    * ASN signer info: Signing time attr missing
    */
    ntfLDS_ASN_SignerInfo_SigningTimeAttr_Missing = -1879047909,
    /**
    * ASN signer info: Signing time attr data
    */
    ntfLDS_ASN_SignerInfo_SigningTimeAttr_Data = -1879047908,
    /**
    * ASN signer info: Signing time attr value
    */
    ntfLDS_ASN_SignerInfo_SigningTimeAttr_Value = -1879047907,
    /**
    * ASN signer info: List content description attr missing
    */
    ntfLDS_ASN_SignerInfo_ListContentDescriptionAttr_Missing = -1879047906,
    /**
    * ASN signer info: List content description attr data
    */
    ntfLDS_ASN_SignerInfo_ListContentDescriptionAttr_Data = -1879047905,
    /**
    * Auth signer info: Certificate validity
    */
    ntfLDS_Auth_SignerInfo_Certificate_Validity = -1879047915,
    /**
    * Auth signer info: Certificate root is not trusted
    */
    ntfLDS_Auth_SignerInfo_Certificate_RootIsNotTrusted = -1879047914,
    /**
    * Auth signer info: Certificate cannot find CSCA
    */
    ntfLDS_Auth_SignerInfo_Certificate_CantFindCSCA = -1879047913,
    /**
    * Auth signer info: Certificate revoked
    */
    ntfLDS_Auth_SignerInfo_Certificate_Revoked = -1879047912,
    /**
    * Auth signer info: Certificate signature invalid
    */
    ntfLDS_Auth_SignerInfo_Certificate_SignatureInvalid = -1879047911,
    /**
    * Notification: Unsupported image format
    */
    ntfLDS_UnsupportedImageFormat = -1879047910,
    /**
    * MRZ: Document type unknown
    */
    ntfLDS_MRZ_DocumentType_Unknown = 139272,
    /**
    * MRZ: Issuing state syntax error
    */
    ntfLDS_MRZ_IssuingState_SyntaxError = 139273,
    /**
    * MRZ: Name is void
    */
    ntfLDS_MRZ_Name_IsVoid = 139274,
    /**
    * MRZ: Number incorrect checksum
    */
    ntfLDS_MRZ_Number_IncorrectChecksum = 139277,
    /**
    * MRZ: Nationality syntax error
    */
    ntfLDS_MRZ_Nationality_SyntaxError = 139278,
    /**
    * MRZ: DOB syntax error
    */
    ntfLDS_MRZ_DOB_SyntaxError = 139279,
    /**
    * MRZ: DOB error
    */
    ntfLDS_MRZ_DOB_Error = 139280,
    /**
    * MRZ: DOB incorrect checksum
    */
    ntfLDS_MRZ_DOB_IncorrectChecksum = 139281,
    /**
    * MRZ: Sex incorrect
    */
    ntfLDS_MRZ_Sex_Incorrect = 139282,
    /**
    * MRZ: DOE syntax error
    */
    ntfLDS_MRZ_DOE_SyntaxError = 139283,
    /**
    * MRZ: DOE error
    */
    ntfLDS_MRZ_DOE_Error = 139284,
    /**
    * MRZ: DOE incorrect checksum
    */
    ntfLDS_MRZ_DOE_IncorrectChecksum = 139285,
    /**
    * MRZ: Optional data incorrect checksum
    */
    ntfLDS_MRZ_OptionalData_IncorrectChecksum = 139286,
    /**
    * MRZ: Incorrect checksum
    */
    ntfLDS_MRZ_IncorrectChecksum = 139287,
    /**
    * MRZ: Incorrect
    */
    ntfLDS_MRZ_Incorrect = 139288,
    /**
    * Biometrics: Format owner missing
    */
    ntfLDS_Biometrics_FormatOwner_Missing = -1878982656,
    /**
    * Biometrics: Format owner incorrect
    */
    ntfLDS_Biometrics_FormatOwner_Incorrect = -1878917120,
    /**
    * Biometrics: Format type missing
    */
    ntfLDS_Biometrics_FormatType_Missing = -1878851584,
    /**
    * Biometrics: Format type incorrect
    */
    ntfLDS_Biometrics_FormatType_Incorrect = -1878786048,
    /**
    * Biometrics: Type incorrect
    */
    ntfLDS_Biometrics_Type_Incorrect = -1878720512,
    /**
    * Biometrics: Subtype missing
    */
    ntfLDS_Biometrics_SubType_Missing = -1878654976,
    /**
    * Biometrics: Subtype incorrect
    */
    ntfLDS_Biometrics_SubType_Incorrect = -1878589440,
    /**
    * Biometrics: BDB image missing
    */
    ntfLDS_Biometrics_BDB_Image_Missing = -1878523904,
    /**
    * Biometrics: BDB format ID incorrect
    */
    ntfLDS_Biometrics_BDB_FormatID_Incorrect = -1878458368,
    /**
    * Biometrics: BDB version incorrect
    */
    ntfLDS_Biometrics_BDB_Version_Incorrect = -1878392832,
    /**
    * Biometrics: BDB data length incorrect
    */
    ntfLDS_Biometrics_BDB_DataLength_Incorrect = -1878327296,
    /**
    * Biometrics: BDB Data Gender
    */
    ntfLDS_Biometrics_BDB_Data_Gender = -1877999616,
    /**
    * Biometrics: BDB Data Eye Color
    */
    ntfLDS_Biometrics_BDB_Data_EyeColor = -1877934080,
    /**
    * Biometrics: BDB Data Hair Color
    */
    ntfLDS_Biometrics_BDB_Data_HairColor = -1877868544,
    /**
    * Biometrics: BDB Data Pose Angle Yaw
    */
    ntfLDS_Biometrics_BDB_Data_PoseAngle_Yaw = -1877803008,
    /**
    * Biometrics: BDB Data Pose Angle Pitch
    */
    ntfLDS_Biometrics_BDB_Data_PoseAngle_Pitch = -1877737472,
    /**
    * Biometrics: BDB Data Pose Angle Roll
    */
    ntfLDS_Biometrics_BDB_Data_PoseAngle_Roll = -1877671936,
    /**
    * Biometrics: BDB Data Pose Angle U Yaw
    */
    ntfLDS_Biometrics_BDB_Data_PoseAngleU_Yaw = -1877606400,
    /**
    * Biometrics: BDB Data Pose Angle U Pitch
    */
    ntfLDS_Biometrics_BDB_Data_PoseAngleU_Pitch = -1877540864,
    /**
    * Biometrics: BDB Data Pose Angle U Roll
    */
    ntfLDS_Biometrics_BDB_Data_PoseAngleU_Roll = -1877475328,
    /**
    * Biometrics: BDB Data Face Image Type
    */
    ntfLDS_Biometrics_BDB_Data_FaceImageType = -1877409792,
    /**
    * Biometrics: BDB Data Image Data Type
    */
    ntfLDS_Biometrics_BDB_Data_ImageDataType = -1877344256,
    /**
    * SI: PACE Info Unsupported Std Parameters
    */
    ntfLDS_SI_PACE_Info_UnsupportedStdParameters = -1862270976,
    /**
    * SI: PACE Info Deprecated Version
    */
    ntfLDS_SI_PACE_Info_DeprecatedVersion = -1862270975,
    /**
    * SI: PACE Domain Params Using Std Ref
    */
    ntfLDS_SI_PACE_DomainParams_UsingStdRef = -1862270974,
    /**
    * SI: PACE Domain Params Unsupported Algorithm
    */
    ntfLDS_SI_PACE_DomainParams_UnsupportedAlgorithm = -1862270973,
    /**
    * SI: CA Info Incorrect Version
    */
    ntfLDS_SI_CA_Info_IncorrectVersion = -1862270972,
    /**
    * SI: CA PublicKey Unsupported Algorithm
    */
    ntfLDS_SI_CA_PublicKey_UnsupportedAlgorithm = -1862270971,
    /**
    * SI: CA Domain Params Unsupported Algorithm
    */
    ntfLDS_SI_CA_DomainParams_UnsupportedAlgorithm = -1862270970,
    /**
    * SI: TA Info Incorrect Version
    */
    ntfLDS_SI_TA_Info_IncorrectVersion = -1862270969,
    /**
    * SI: TA Info File ID For Version 2
    */
    ntfLDS_SI_TA_Info_FileIDForVersion2 = -1862270968,
    /**
    * SI: eID Security Unsupported Digest Algorithm
    */
    ntfLDS_SI_eIDSecurity_UnsupportedDigestAlgorithm = -1862270967,
    /**
    * SI: RI info incorrect version
    */
    ntfLDS_SI_RI_Info_IncorrectVersion = -1862270966,
    /**
    * SI: RI domain params unsupported algorithm
    */
    ntfLDS_SI_RI_DomainParams_UnsupportedAlgorithm = -1862270965,
    /**
    * SI: AA info incorrect version
    */
    ntfLDS_SI_AA_Info_IncorrectVersion = -1862270964,
    /**
    * SI: AA info unsupported algorithm
    */
    ntfLDS_SI_AA_Info_UnsupportedAlgorithm = -1862270963,
    /**
    * SI: AA info inconsistent algorithm reference
    */
    ntfLDS_SI_AA_Info_InconsistentAlgorithmReference = -1862270962,
    /**
    * SI: PACE Info Not Available
    */
    ntfLDS_SI_Storage_PACE_Info_NotAvailable = -1862270720,
    /**
    * SI: PACE Info No Std Parameters
    */
    ntfLDS_SI_Storage_PACE_Info_NoStdParameters = -1862270719,
    /**
    * SI: PACE Info No Matching Domain Params
    */
    ntfLDS_SI_Storage_PACE_Info_NoMatchingDomainParams = -1862270718,
    /**
    * SI: CA Info Not Available
    */
    ntfLDS_SI_Storage_CA_Info_NotAvailable = -1862270717,
    /**
    * SI: CA Domain Params No Required Option
    */
    ntfLDS_SI_Storage_CA_DomainParams_NoRequiredOption = -1862270716,
    /**
    * SI: CA Domain Params Not Available
    */
    ntfLDS_SI_Storage_CA_DomainParams_NotAvailable = -1862270715,
    /**
    * SI: CA Anonymous Infos
    */
    ntfLDS_SI_Storage_CA_AnonymousInfos = -1862270714,
    /**
    * SI: CA Info No Matching Domain Params
    */
    ntfLDS_SI_Storage_CA_Info_NoMatchingDomainParams = -1862270713,
    /**
    * SI: CA Info No Matching Public Key
    */
    ntfLDS_SI_Storage_CA_Info_NoMatchingPublicKey = -1862270712,
    /**
    * SI: CA Incorrect Infos Quantity
    */
    ntfLDS_SI_Storage_CA_IncorrectInfosQuantity = -1862270711,
    /**
    * SI: TA Info Not Available
    */
    ntfLDS_SI_Storage_TA_Info_NotAvailable = -1862270710,
    /**
    * SI: Card Info Locator Multiple Entries
    */
    ntfLDS_SI_Storage_CardInfoLocator_MultipleEntries = -1862270709,
    /**
    * SI: eID Security Info Multiple Entries
    */
    ntfLDS_SI_Storage_eIDSecurityInfo_MultipleEntries = -1862270708,
    /**
    * SI: Privileged TI Multiple Entries
    */
    ntfLDS_SI_Storage_PrivilegedTI_MultipleEntries = -1862270707,
    /**
    * SI: Privileged TI Incorrect Usage
    */
    ntfLDS_SI_Storage_PrivilegedTI_IncorrectUsage = -1862270706,
    /**
    * SI: RI domain params multiple entries
    */
    ntfLDS_SI_Storage_RI_DomainParams_MultipleEntries = -1862270705,
    /**
    * SI: Storage PACE Info Non Consistant
    */
    ntfLDS_SI_Storage_PACEInfos_NonConsistant = -1862270704,
    /**
    * CV Certificate: Profile incorrect version
    */
    ntfLDS_CVCertificate_Profile_IncorrectVersion = -1862270463,
    /**
    * CV Certificate: Validity
    */
    ntfLDS_CVCertificate_Validity = -1862270462,
    /**
    * CV Certificate: Non CVCA domain parameters
    */
    ntfLDS_CVCertificate_NonCVCADomainParameters = -1862270461,
    /**
    * CV Certificate: Private key incorrect version
    */
    ntfLDS_CV_Certificate_PrivateKey_IncorrectVersion = -1862270460,
    /**
    * TA: PACE static binding used
    */
    ntfLDS_TA_PACEStaticBindingUsed = -1862270208,
    /**
    * Auth ML signer info: Certificate validity
    */
    ntfLDS_Auth_MLSignerInfo_Certificate_Validity = -1845493483,
    /**
    * Auth ML signer info: Certificate root is not trusted
    */
    ntfLDS_Auth_MLSignerInfo_Certificate_RootIsNotTrusted = -1845493482,
    /**
    * Auth ML signer info: Certificate cannot find CSCA
    */
    ntfLDS_Auth_MLSignerInfo_Certificate_CantFindCSCA = -1845493481,
    /**
    * Auth ML signer info: Certificate revoked
    */
    ntfLDS_Auth_MLSignerInfo_Certificate_Revoked = -1845493480,
    /**
    * Auth ML signer info: Certificate signature invalid
    */
    ntfLDS_Auth_MLSignerInfo_Certificate_SignatureInvalid = -1845493479
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface PerDocumentConfig
 */
export interface PerDocumentConfig {
    /**
     * Specific template IDs, for which apply current custom configuration
     * @type {Array<number>}
     * @memberof PerDocumentConfig
     */
    docID?: Array<number>;
    /**
     * Contains items from AuthenticityResultType as sum via OR operation
     * @type {number}
     * @memberof PerDocumentConfig
     */
    excludeAuthChecks?: number;
}
/**
 * Params for the RFID chip data reprocessing
 * @export
 * @interface ProcessParamsRfid
 */
export interface ProcessParamsRfid {
    /**
     * A list of notification codes that should be ignored during passive authentication (PA)
     * @type {Array<ParsingNotificationCodes>}
     * @memberof ProcessParamsRfid
     */
    paSensitiveCodesDisable?: Array<ParsingNotificationCodes>;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
export enum Result {
    /**
    * Contains cropped and rotated with perspective compensation image of document. Single input image can contain multiple document side/pages, which will be returned as separated results. Most of coordinates in other types defined on that image
    */
    DOCUMENT_IMAGE = 1,
    /**
    * Contains MRZ OCR results
    */
    MRZ_TEXT = 3,
    /**
    * Contains raw information about barcodes on the input image
    */
    BARCODES = 5,
    /**
    * Contains cropped graphic fields from Visual zone
    */
    VISUAL_GRAPHICS = 6,
    /**
    * Contains list of document type candidates with their probabilities and descriptions
    */
    DOCUMENT_TYPE_CANDIDATES = 8,
    /**
    * Contains description of determined document type, if any
    */
    DOCUMENT_TYPE = 9,
    /**
    * Contains lexical data analysis results that allow you to compare MRZ OCR results, Visual zone OCR results, barcodes and RFID chip data for an additional assessment of the authenticity of the document (this is an old format, better use TEXT type)
    */
    LEXICAL_ANALYSIS = 15,
    /**
    * Contains Visual zone OCR results
    */
    VISUAL_TEXT = 17,
    /**
    * Contains barcode parsing result with text fields
    */
    BARCODE_TEXT = 18,
    /**
    * Contains barcode parsing result with graphic fields
    */
    BARCODE_GRAPHICS = 19,
    /**
    * Contains result of document authenticity checks
    */
    AUTHENTICITY = 20,
    /**
    * Contains image quality check results
    */
    IMAGE_QUALITY = 30,
    /**
    * Contains check statuses with details, grouped by source
    */
    STATUS = 33,
    /**
    * Contains result of portraits comparison
    */
    PORTRAIT_COMPARISON = 34,
    /**
    * Contains document textual fields from all sources (mrz, rfid, visual, barcode) with validity and cross-source compare checks
    */
    TEXT = 36,
    /**
    * Contains images from all document sources (mrz, rfid, visual, barcode)
    */
    IMAGES = 37,
    /**
    * Contains result of fingerprints comparison
    */
    FINGERPRINT_COMPARISON = 39,
    /**
    * Contains encrypted ResultContainerList
    */
    ENCRYPTED_RCL = 49,
    /**
    * Contains license
    */
    LICENSE = 50,
    /**
    * Contains information about document position on the input image, its center, angle, etc
    */
    DOCUMENT_POSITION = 85,
    /**
    * Contains RFID raw data
    */
    RFID_RAW_DATA = 101,
    /**
    * Contains RFID text results
    */
    RFID_TEXT = 102,
    /**
    * Contains RFID graphic results
    */
    RFID_GRAPHICS = 103,
    /**
    * Contains RFID binary data
    */
    RFID_BINARY_DATA = 104,
    /**
    * Contains RFID original graphics data
    */
    RFID_ORIGINAL_GRAPHICS = 105
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Document processing scenario
 * @export
 * @enum {string}
 */
export enum Scenario {
    /**
    * Processing scenario for obtaining MRZ data
    */
    MRZ = "Mrz",
    /**
    * Processing scenario for obtaining barcode data
    */
    BARCODE = "Barcode",
    /**
    * Processing scenario for detecting document boundaries
    */
    LOCATE = "Locate",
    /**
    * Processing scenario for obtaining visual zone OCR results
    */
    OCR = "Ocr",
    /**
    * Processing scenario for document type recognition
    */
    DOCTYPE = "DocType",
    /**
    * Processing scenario for obtaining MRZ and/or barcode data
    */
    MRZ_OR_BARCODE = "MrzOrBarcode",
    /**
    * Processing scenario for detecting document boundaries and/or obtaining MRZ data
    */
    MRZ_OR_LOCATE = "MrzOrLocate",
    /**
    * Processing scenario for detecting document boundaries and obtaining MRZ data
    */
    MRZ_AND_LOCATE = "MrzAndLocate",
    /**
    * Processing scenario for detecting the document boundaries and obtaining barcode data
    */
    BARCODE_AND_LOCATE = "BarcodeAndLocate",
    /**
    * Processing scenario for obtaining MRZ data or visual zone OCR results
    */
    MRZ_OR_OCR = "MrzOrOcr",
    /**
    * Processing scenario for obtaining MRZ or barcode or visual zone OCR results
    */
    MRZ_OR_BARCODE_OR_OCR = "MrzOrBarcodeOrOcr",
    /**
    * Processing scenario for detecting document boundaries and obtaining MRZ data or visual zone OCR results
    */
    LOCATE_VISUAL_AND_MRZ_OR_OCR = "LocateVisual_And_MrzOrOcr",
    /**
    * Processing scenario for obtaining all document data
    */
    FULL_PROCESS = "FullProcess",
    /**
    * Processing scenario for obtaining all document data and document authentication
    */
    FULL_AUTH = "FullAuth",
    /**
    * Processing scenario for obtaining data from registration stamps
    */
    RUS_STAMP = "RusStamp",
    /**
    * Processing scenario for obtaining OCR results of any image
    */
    OCR_FREE = "OcrFree",
    /**
    * Processing scenario for obtaining bank card data
    */
    CREDIT_CARD = "CreditCard",
    /**
    * Scenario for obtaining an original image without any processing
    */
    CAPTURE = "Capture"
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @enum {string}
 */
export enum TextPostProcessing {
    /**
    * Do not change
    */
    NO_CHANGE = 0,
    /**
    * Uppercase
    */
    UPPERCASE = 1,
    /**
    * Lowercase
    */
    LOWERCASE = 2,
    /**
    * Capital
    */
    CAPITAL = 3
}
/**
 *
 * @export
 * @interface ProcessParams
 */
export interface ProcessParams {
    /**
     * The list of LCID types to recognize. If empty, values with all LCID types will be extracted. Empty by default.
     * @type {Array<number>}
     * @memberof ProcessParams
     */
    lcidFilter?: Array<number>;
    /**
     * The list of LCID types to ignore during the recognition. If empty, values with all LCID types will be extracted. Narrowing down the list can reduce processing time. Empty by default.
     * @type {Array<number>}
     * @memberof ProcessParams
     */
    lcidIgnoreFilter?: Array<number>;
    /**
     * This parameter allows processing an image that contains a person and a document and compare the portrait photo from the document with the person\'s face
     * @type {boolean}
     * @memberof ProcessParams
     */
    oneShotIdentification?: boolean;
    /**
     * This parameter allows comparing faces on Regula Face Web Service
     * @type {boolean}
     * @memberof ProcessParams
     */
    useFaceApi?: boolean;
    /**
     *
     * @type {FaceApi}
     * @memberof ProcessParams
     */
    faceApi?: FaceApi;
    /**
     * This parameter allows enabling the CAN (Card Access Number) detection and recognition when using scenarios with document location and MRZ reading, such as the MrzAndLocate scenario.
     * @type {boolean}
     * @memberof ProcessParams
     */
    doDetectCan?: boolean;
    /**
     * This parameter allows setting maximum height in pixels of output images and thus reducing image size to desired. Does not change the aspect ratio. Changes disabled if equals to 0. Default 0.
     * @type {number}
     * @memberof ProcessParams
     */
    imageOutputMaxHeight?: number;
    /**
     * This parameter allows setting maximum width in pixels of output images and thus reducing image size to desired. Does not change the aspect ratio. Changes disabled if equals to 0. Default 0.
     * @type {number}
     * @memberof ProcessParams
     */
    imageOutputMaxWidth?: number;
    /**
     *
     * @type {Scenario}
     * @memberof ProcessParams
     */
    scenario: Scenario;
    /**
     * Types of results to return in response. See \'Result\' enum for available options
     * @type {Array<Result>}
     * @memberof ProcessParams
     */
    resultTypeOutput?: Array<Result>;
    /**
     * Enable this option if the image you provide contains double page spread of the passport and you want to process both pages in one go. It makes sense to use it for documents that have meaningful information on both pages, like Russian domestic passport, or some others. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     * @deprecated
     */
    doublePageSpread?: boolean;
    /**
     * When enabled together with \"doublePageSpread\" and there is a passport with two pages spread in the image, pages will be cropped, straightened and aligned together, as if the document was captured on a flatbed scanner. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    generateDoublePageSpreadImage?: boolean;
    /**
     * List of text field types to extract. If empty, all text fields from template will be extracted. Narrowing the list can shorten processing time. Empty by default.
     * @type {Array<TextFieldType>}
     * @memberof ProcessParams
     */
    fieldTypesFilter?: Array<TextFieldType>;
    /**
     * This option allows you to set dates format so that solution will return dates in this format. For example, if you supply \'MM/dd/yyyy\', and document have printed date \'09 JUL 2020\' for the date os issue, you will get \'07/09/2020\' as a result. By default it is set to system locale default (where the service is running).
     * @type {string}
     * @memberof ProcessParams
     */
    dateFormat?: string;
    /**
     *
     * @type {MeasureSystem}
     * @memberof ProcessParams
     */
    measureSystem?: MeasureSystem;
    /**
     * This parameter controls maximum resolution in dpi of output images. Resolution will remain original in case 0 is supplied. By default is set to return images in response with resolution not greater than 300 dpi for all scenarios except FullAuth. In FullAuth scenario this limit is 1000 dpi by default.
     * @type {number}
     * @memberof ProcessParams
     */
    imageDpiOutMax?: number;
    /**
     * This option can be enabled if you know for sure that the image you provide contains already cropped document by its edges. This was designed to process on the server side images captured and cropped on mobile. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    alreadyCropped?: boolean;
    /**
     * This option allows passing custom processing parameters that can be implemented in future without changing API.
     * @type {{ [key: string]: object; }}
     * @memberof ProcessParams
     */
    customParams?: {
        [key: string]: object;
    };
    /**
     * This option allows setting additional custom configuration per document type. If recognized document has ID specified in config, processing adjusts according to designated configuration.
     * @type {Array<PerDocumentConfig>}
     * @memberof ProcessParams
     */
    config?: Array<PerDocumentConfig>;
    /**
     * When enabled, results will contain transaction processing log. Disabled by default
     * @type {boolean}
     * @memberof ProcessParams
     */
    log?: boolean;
    /**
     *
     * @type {LogLevel}
     * @memberof ProcessParams
     */
    logLevel?: LogLevel;
    /**
     * Force use of specific template ID and skip document type identification step.
     * @type {number}
     * @memberof ProcessParams
     */
    forceDocID?: number;
    /**
     * When disabled, text field OCR will be done as is and then the recognized value will be matched to the field mask for validity. If enabled, we are trying to read a field value with maximum efforts to match the mask and provide a correctly formatted value, making assumptions based on the provided field mask in the template. Enabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    matchTextFieldMask?: boolean;
    /**
     * When enabled, shorten the list of candidates to process during document detection in a single image process mode. Reduces processing time for specific backgrounds. Enabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     * @deprecated
     */
    fastDocDetect?: boolean;
    /**
     * When enabled, fail OCR field validity, if there is a glare over the text field on the image. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    updateOCRValidityByGlare?: boolean;
    /**
     * When enabled, each field in template will be checked for value presence and if the field is marked as required, but has no value, it will have \'error\' in validity status. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    checkRequiredTextFields?: boolean;
    /**
     * When enabled, returns cropped barcode images for unknown documents. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    returnCroppedBarcode?: boolean;
    /**
     *
     * @type {ImageQA}
     * @memberof ProcessParams
     */
    imageQa?: ImageQA;
    /**
     * When enabled, image quality checks status affects document optical and overall status. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    respectImageQuality?: boolean;
    /**
     *
     * @type {DocumentFormat}
     * @memberof ProcessParams
     */
    forceDocFormat?: DocumentFormat;
    /**
     * When enabled, no graphic fields will be cropped from document image. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    noGraphics?: boolean;
    /**
     * Specifies minimal area of the image that document should cover to be treated as candidate when locating. Value should be in range from 0 to 1, where 1 is when document should fully cover the image.
     * @type {number}
     * @memberof ProcessParams
     */
    documentAreaMin?: number;
    /**
     * When enabled, all personal data will be forcibly removed from the logs. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    depersonalizeLog?: boolean;
    /**
     * This option allows locating and cropping multiple documents from one image if enabled. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    multiDocOnImage?: boolean;
    /**
     * This option allows shifting the date of expiry into the future or past for number of months specified. This is useful, for example, in some cases when document might be still valid for some period after original expiration date to prevent negative validity status for such documents. Or by shifting the date to the past will set negative validity for the documents that is about to expire in a specified number of months. 0 by default
     * @type {number}
     * @memberof ProcessParams
     */
    shiftExpiryDate?: number;
    /**
     * This options allows specifying the minimal age in years of the document holder for the document to be considered valid.
     * @type {number}
     * @memberof ProcessParams
     */
    minimalHolderAge?: number;
    /**
     * When enabled, returns input images in output. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    returnUncroppedImage?: boolean;
    /**
     * This option allows limiting MRZ formats to be recognized by specifying them in array.
     * @type {Array<MRZFormat>}
     * @memberof ProcessParams
     */
    mrzFormatsFilter?: Array<MRZFormat>;
    /**
     * When enabled, make sure that in series processing MRZ is located fully inside the result document image, if present on the document. Enabling this option may add extra processing time, by disabling optimizations, but allows more stability in output image quality. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    forceReadMrzBeforeLocate?: boolean;
    /**
     * This option can be disabled to stop parsing after barcode is read. Enabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    parseBarcodes?: boolean;
    /**
     *
     * @type {TextPostProcessing}
     * @memberof ProcessParams
     */
    convertCase?: TextPostProcessing;
    /**
     * When enabled, the Surname and GivenNames field will be divided into ft_First_Name, ft_Second_Name, ft_Third_Name, ft_Fourth_Name, ft_Last_Name fields. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    splitNames?: boolean;
    /**
     * When enabled, OCR of perforated fields in the document template will not be performed. Disabled by default.
     * @type {boolean}
     * @memberof ProcessParams
     */
    disablePerforationOCR?: boolean;
    /**
     * List of specific eligible document types from DocumentType enum to recognize from. You may, for example, specify only passports to be recognized by setting this property. Empty by default.
     * @type {Array<DocumentType>}
     * @memberof ProcessParams
     */
    documentGroupFilter?: Array<DocumentType>;
    /**
     * Authenticity checks that should be performed regardless of the document type. The available checks are listed in the eRPRM_Authenticity enum. Note that only supported by your license checks can be added.
     * @type {number}
     * @memberof ProcessParams
     */
    processAuth?: number;
    /**
     * This parameter is used to specify the document reader device type from which input images were captured. Default 0.
     * @type {number}
     * @memberof ProcessParams
     */
    deviceId?: number;
    /**
     * This parameter is used to specify the document reader device type from which input images were captured. Default 0.
     * @type {number}
     * @memberof ProcessParams
     */
    deviceType?: number;
    /**
     * This parameter is used to specify the document reader device type from which input images were captured
     * @type {string}
     * @memberof ProcessParams
     */
    deviceTypeHex?: string;
    /**
     * This parameter is used to tell the processing engine to ignore any parameters saved in the image when scanned from the document reader device. Default false
     * @type {boolean}
     * @memberof ProcessParams
     */
    ignoreDeviceIdFromImage?: boolean;
    /**
     * List of the document ID\'s to process. All documents will be processed, if empty.
     * @type {Array<number>}
     * @memberof ProcessParams
     */
    documentIdList?: Array<number>;
    /**
     *
     * @type {ProcessParamsRfid}
     * @memberof ProcessParams
     */
    rfid?: ProcessParamsRfid;
    /**
     * This parameter is used to enable authenticity checks
     * @type {boolean}
     * @memberof ProcessParams
     */
    checkAuth?: boolean;
    /**
     *
     * @type {AuthParams}
     * @memberof ProcessParams
     */
    authParams?: AuthParams;
}
/**
 *
 * @export
 * @interface ProcessRequestImage
 */
export interface ProcessRequestImage {
    /**
     *
     * @type {ImageData}
     * @memberof ProcessRequestImage
     */
    ImageData: ImageData;
    /**
     *
     * @type {Light}
     * @memberof ProcessRequestImage
     */
    light?: Light;
    /**
     * page/image number
     * @type {number}
     * @memberof ProcessRequestImage
     */
    page_idx?: number;
}
/**
 * Regula Document Reader Web API
 * Documents recognition as easy as reading two bytes.  # Clients: * [JavaScript](https://github.com/regulaforensics/DocumentReader-web-js-client) client for the browser and node.js based on axios * [Java](https://github.com/regulaforensics/DocumentReader-web-java-client) client compatible with jvm and android * [Python](https://github.com/regulaforensics/DocumentReader-web-python-client) 3.5+ client * [C#](https://github.com/regulaforensics/DocumentReader-web-csharp-client) client for .NET & .NET Core
 *
 * The version of the OpenAPI document: 7.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface ProcessSystemInfo
 */
export interface ProcessSystemInfo {
    /**
     * Base64 encoded license file
     * @type {string}
     * @memberof ProcessSystemInfo
     */
    license?: string;
    /**
     * For internal use. Demo-sites recaptcha token.
     * @type {string}
     * @memberof ProcessSystemInfo
     */
    recaptcha_token?: string;
}
/**
 *
 * @export
 * @interface ProcessRequest
 */
export interface ProcessRequest {
    /**
     * session id
     * @type {string}
     * @memberof ProcessRequest
     */
    tag?: string;
    /**
     *
     * @type {ProcessParams}
     * @memberof ProcessRequest
     */
    processParam: ProcessParams;
    /**
     *
     * @type {Array<ProcessRequestImage>}
     * @memberof ProcessRequest
     */
    List?: Array<ProcessRequestImage>;
    /**
     * Live portrait photo
     * @type {string}
     * @memberof ProcessRequest
     */
    livePortrait?: string;
    /**
     * Portrait photo from an external source
     * @type {string}
     * @memberof ProcessRequest
     */
    extPortrait?: string;
    /**
     *
     * @type {ContainerList}
     * @memberof ProcessRequest
     */
    ContainerList?: ContainerList;
    /**
     *
     * @type {ProcessSystemInfo}
     * @memberof ProcessRequest
     */
    systemInfo?: ProcessSystemInfo;
    /**
     * Free-form object to be included in response. Must be object, not list or simple value. Do not affect document processing. Use it freely to pass your app params. Stored in process logs.
     * @type {{ [key: string]: object; }}
     * @memberof ProcessRequest
     */
    passBackObject?: {
        [key: string]: object;
    };
}
/**
 *
 * @export
 * @interface ProcessResponse
 */
export interface ProcessResponse {
    /**
     *
     * @type {RfidLocation}
     * @memberof ProcessResponse
     */
    ChipPage?: RfidLocation;
    /**
     *
     * @type {ProcessingStatus}
     * @memberof ProcessResponse
     */
    ProcessingFinished: ProcessingStatus;
    /**
     *
     * @type {ContainerList}
     * @memberof ProcessResponse
     */
    ContainerList: ContainerList;
    /**
     *
     * @type {TransactionInfo}
     * @memberof ProcessResponse
     */
    TransactionInfo: TransactionInfo;
    /**
     * Base64 encoded transaction processing log
     * @type {string}
     * @memberof ProcessResponse
     */
    log?: string;
    /**
     * Free-form object provided in request. See passBackObject property of ProcessRequest.
     * @type {{ [key: string]: object; }}
     * @memberof ProcessResponse
     */
    passBackObject?: {
        [key: string]: object;
    };
    /**
     *
     * @type {number}
     * @memberof ProcessResponse
     */
    morePagesAvailable?: number;
    /**
     * Time the document processing has taken, ms.
     * @type {number}
     * @memberof ProcessResponse
     */
    elapsedTime?: number;
}
/**
 *
 * @export
 * @interface TransactionImage
 */
export interface TransactionImage {
    /**
     *
     * @type {ImagesFieldValue}
     * @memberof TransactionImage
     */
    image?: ImagesFieldValue;
}
/**
 *
 * @export
 * @interface TransactionProcessGetResponse
 */
export interface TransactionProcessGetResponse {
    /**
     *
     * @type {number}
     * @memberof TransactionProcessGetResponse
     */
    transactionId?: number;
    /**
     *
     * @type {string}
     * @memberof TransactionProcessGetResponse
     */
    tag?: string;
    /**
     *
     * @type {OutData}
     * @memberof TransactionProcessGetResponse
     */
    outData?: OutData;
    /**
     *
     * @type {InData}
     * @memberof TransactionProcessGetResponse
     */
    inData?: InData;
}
/**
 *
 * @export
 * @interface TransactionProcessRequest
 */
export interface TransactionProcessRequest {
    /**
     * session id
     * @type {string}
     * @memberof TransactionProcessRequest
     */
    tag?: string;
    /**
     *
     * @type {ProcessParams}
     * @memberof TransactionProcessRequest
     */
    processParam: ProcessParams;
    /**
     *
     * @type {Array<ProcessRequestImage>}
     * @memberof TransactionProcessRequest
     */
    List?: Array<ProcessRequestImage>;
    /**
     * Live portrait photo
     * @type {string}
     * @memberof TransactionProcessRequest
     */
    livePortrait?: string;
    /**
     * Portrait photo from an external source
     * @type {string}
     * @memberof TransactionProcessRequest
     */
    extPortrait?: string;
    /**
     *
     * @type {ContainerList}
     * @memberof TransactionProcessRequest
     */
    ContainerList?: ContainerList;
    /**
     *
     * @type {ProcessSystemInfo}
     * @memberof TransactionProcessRequest
     */
    systemInfo?: ProcessSystemInfo;
    /**
     * Free-form object to be included in response. Must be object, not list or simple value. Do not affect document processing. Use it freely to pass your app params. Stored in process logs.
     * @type {{ [key: string]: object; }}
     * @memberof TransactionProcessRequest
     */
    passBackObject?: {
        [key: string]: object;
    };
}
export class TextFieldExt implements TextField {
    fieldType: TextFieldType;
    fieldName: string;
    lcid?: number;
    status: CheckResult;
    validityStatus: CheckResult;
    comparisonStatus: CheckResult;
    value: string;
    valueList: Array<TextFieldValue>;
    validityList: Array<SourceValidity>;
    comparisonList: Array<CrossSourceValueComparison>;
    constructor(origin: TextField);
    /**
     * This method returns value of the text field. Value encoded in UTF8.
     * Fields value obtained in the following order:
     * - if MRZ value is present, it will be taken
     * - if no MRZ, but RFID value is present, it will be taken
     * - if no MRZ, no RFID, but Barcode value is present, it will be taken
     * - if no MRZ, no RFID, no Barcode, but Visual OCR value is present, it will be taken
     *
     * @param source See {@code Source}
     * @param original Each value formatted according to input params and server settings.
     * To get original representation, set this flag to true. Date example:
     *  - original visual value - "3 January 2009"
     *  - formatted value - "03.01.2009"
     */
    getValue(source?: Source, original?: boolean): string | undefined;
    /**
     * Returns validity check of all values for given source.
     * @param source See {@code Source}
     */
    sourceValidity(source: Source): CheckResult;
    /**
     * Returns value matching result for different sources.
     */
    crossSourceComparison(one: Source, other: Source): CheckResult;
    getLCIDName(): string | undefined;
}
export class TextExt implements Text {
    status: CheckResult;
    validityStatus: CheckResult;
    comparisonStatus: CheckResult;
    availableSourceList: Array<TextAvailableSource>;
    fieldList: Array<TextFieldExt>;
    constructor(origin: Text);
    getField(type: TextFieldType, lcid?: number): TextFieldExt | undefined;
    getFieldByName(name: string, lcid?: number): TextFieldExt | undefined;
    getFieldValue(type: TextFieldType, lcid?: number): string | undefined;
    getFieldValueByName(name: string, lcid?: number): string | undefined;
}
export class ImagesExt implements Images {
    availableSourceList: Array<ImagesAvailableSource>;
    fieldList: Array<ImagesFieldWrapper>;
    constructor(origin: Images);
    getField(type: GraphicFieldType): ImagesFieldWrapper | undefined;
    getFields(type: GraphicFieldType): Array<ImagesFieldWrapper> | undefined;
}
export class ImagesFieldWrapper implements ImagesField {
    fieldName: string;
    fieldType: GraphicFieldType;
    valueList: Array<ImagesFieldValue>;
    constructor(origin: ImagesField);
    getValue(source?: Source, original?: boolean): ArrayBuffer | undefined;
}
declare class FiberChecks implements AuthenticityCheckResult {
    List: Array<FiberResult>;
    Result: CheckResult;
    Type: AuthenticityResultType;
    constructor(origin: AuthenticityCheckResult);
}
declare class IdentChecks implements AuthenticityCheckResult {
    List: Array<IdentResult>;
    Result: CheckResult;
    Type: AuthenticityResultType;
    constructor(origin: AuthenticityCheckResult);
    checksByElement(elementType: SecurityFeatureType): Array<IdentResult>;
}
declare class ImageIdentChecks implements AuthenticityCheckResult {
    List: Array<PhotoIdentResult>;
    Result: CheckResult;
    Type: AuthenticityResultType;
    constructor(origin: AuthenticityCheckResult);
}
declare class OCRSecurityTextChecks implements AuthenticityCheckResult {
    List: Array<OCRSecurityTextResult>;
    Result: CheckResult;
    Type: AuthenticityResultType;
    constructor(origin: AuthenticityCheckResult);
}
declare class SecurityFeatureChecks implements AuthenticityCheckResult {
    List: Array<SecurityFeatureResult>;
    Result: CheckResult;
    Type: AuthenticityResultType;
    constructor(origin: AuthenticityCheckResult);
    checksByElement(elementType: SecurityFeatureType): Array<SecurityFeatureResult>;
}
declare class Authenticity implements AuthenticityCheckList {
    List: Array<AuthenticityCheckResult>;
    page_idx: number;
    constructor(origin: AuthenticityCheckList, page_idx: number);
    uvLuminescenceChecks(): SecurityFeatureChecks | undefined;
    irB900Checks(): SecurityFeatureChecks | undefined;
    imagePatternChecks(): IdentChecks | undefined;
    axialProtectionChecks(): SecurityFeatureChecks | undefined;
    uvFiberChecks(): FiberChecks | undefined;
    irVisibilityChecks(): IdentChecks | undefined;
    ocrSecurityTextChecks(): OCRSecurityTextChecks | undefined;
    ipiChecks(): ImageIdentChecks | undefined;
    embedImageChecks(): SecurityFeatureChecks | undefined;
    hologramsChecks(): SecurityFeatureChecks | undefined;
    imageAreaChecks(): SecurityFeatureChecks | undefined;
    portraitComparisonChecks(): IdentChecks | undefined;
    barcodeFormatCheckChecks(): SecurityFeatureChecks | undefined;
    kinegramChecks(): IdentChecks | undefined;
    letterScreenChecks(): IdentChecks | undefined;
    hologramDetectionChecks(): IdentChecks | undefined;
    mrzChecks(): SecurityFeatureChecks | undefined;
    resultByType(authenticityType: number): AuthenticityCheckResult | undefined;
}
export class Response {
    status?: Status;
    text?: TextExt;
    images?: ImagesExt;
    lowLvlResponse: LowLvlResponse;
    rawResponse: ProcessResponse;
    constructor(original: ProcessResponse);
    authenticity(page_idx?: number): Authenticity | undefined;
    json(): string;
    authenticityPerPage(): Array<Authenticity>;
    imageQualityChecks(page_idx?: number): ImageQualityCheckList | undefined;
    imageQualityChecksPerPage(): Array<ImageQualityCheckList> | undefined;
    documentType(page_idx?: number): OneCandidate | undefined;
    decodedLog(): string | undefined;
}
export class LowLvlResponse implements ProcessResponse {
    ContainerList: ContainerList;
    ProcessingFinished: ProcessingStatus;
    TransactionInfo: TransactionInfo;
    ChipPage?: RfidLocation;
    log?: string;
    passBackObject?: {
        [key: string]: any;
    };
    morePagesAvailable?: number;
    constructor(original: ProcessResponse);
    statusResult(): StatusResult | undefined;
    textResult(): TextResult | undefined;
    imagesResult(): ImagesResult | undefined;
    barcodeResult(): DocBarCodeInfo | undefined;
    documentTypeResults(): Array<ChosenDocumentTypeResult> | undefined;
    resultByType(type: Result): ResultItem | undefined;
    resultByTypeAndPage(type: Result, page_idx?: number): ResultItem | undefined;
    resultsByType(type: Result): Array<ResultItem | AuthenticityResult | ImageQualityCheckList>;
}
export interface ProcessRequestImageWrapper extends Omit<ProcessRequestImage, 'ImageData'> {
    ImageData: ArrayBuffer | Base64String;
}
export type Base64String = string;
export interface ProcessRequestExt {
    /**
     *
     * @type {ProcessParams}
     * @memberof ProcessRequestExt
     */
    processParam: ProcessParams;
    /**
     *
     * @type {Array<ProcessRequestImage>}
     * @memberof ProcessRequestExt
     */
    images: Array<ProcessRequestImageWrapper | ArrayBuffer | Base64String>;
    /**
     * @type {ContainerList}
     * @memberOf ProcessRequestExt
     */
    ContainerList: ContainerList;
    /**
     *
     * @type {ProcessParams}
     * @memberof ProcessRequestExt
     */
    systemInfo?: ProcessSystemInfo;
    /**
     * Free-form object to be included in response. Must be object, not list or simple value.
     * Do not affect document processing. Use it freely to pass your app params. Stored in process logs.
     * @type {{ [key: string]: object; }}
     * @memberof ProcessRequestExt
     */
    passBackObject?: {
        [key: string]: any;
    };
}
export const instanceOfProcessRequest: (data: any) => data is ProcessRequestExt;
export class DocumentReaderApi {
    constructor(configuration?: ConfigurationParameters, basePath?: string, axios?: AxiosInstance);
    ping(xRequestID?: string): Promise<DeviceInfo>;
    /**
     *
     * @summary Process list of documents images and return extracted data
     * @param {ProcessRequestExt} [request] Request options such as image, results types and etc.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError} If some request params are missed
     * */
    process(request: ProcessRequestExt | ProcessRequest, xRequestID?: string, options?: any): Promise<Response>;
    setLicense(license: ArrayBuffer | Base64String): void;
}
export function requestToBaseRequest(request: ProcessRequestExt): ProcessRequest;
